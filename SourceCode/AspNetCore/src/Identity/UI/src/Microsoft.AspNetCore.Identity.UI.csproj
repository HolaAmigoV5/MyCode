<Project Sdk="Microsoft.NET.Sdk.Razor">

  <PropertyGroup>
    <Description>ASP.NET Core Identity UI is the default Razor Pages built-in UI for the ASP.NET Core Identity framework.</Description>
    <RazorAssemblyDescription>Compiled Razor views assembly for the ASP.NET Core Identity UI package.</RazorAssemblyDescription>
    <TargetFramework>netcoreapp3.0</TargetFramework>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <PackageTags>aspnetcore;identity;membership;razorpages</PackageTags>
    <IsShippingPackage>true</IsShippingPackage>
    <GenerateEmbeddedFilesManifest>true</GenerateEmbeddedFilesManifest>
    <ProvideApplicationPartFactoryAttributeTypeName>Microsoft.AspNetCore.Mvc.ApplicationParts.NullApplicationPartFactory, Microsoft.AspNetCore.Mvc.Core</ProvideApplicationPartFactoryAttributeTypeName>
    <RazorCompileOnBuild>false</RazorCompileOnBuild>
    <RazorCompileOnPublish>false</RazorCompileOnPublish>
    <EnableDefaultRazorGenerateItems>false</EnableDefaultRazorGenerateItems>
    <DisableFastUpToDateCheck>true</DisableFastUpToDateCheck>

    <AddRazorSupportForMvc>true</AddRazorSupportForMvc>
  </PropertyGroup>

  <ItemGroup>
    <EmbeddedResource Include="wwwroot/**/*" />
    <EmbeddedResource Remove="wwwroot/**/LICENSE*" />
    <None Remove="wwwroot/**/LICENSE*" />
    <None Include="THIRD-PARTY-NOTICES.txt" Pack="true" PackagePath="/THIRD-PARTY-NOTICES.txt" />

    <Content Update="**\*.cshtml" Pack="false" />
  </ItemGroup>

  <ItemGroup>
    <Reference Include="Newtonsoft.Json" />
    <Reference Include="Microsoft.AspNetCore.Identity" />
    <Reference Include="Microsoft.AspNetCore.Mvc" />
    <Reference Include="Microsoft.AspNetCore.StaticFiles" />
    <Reference Include="Microsoft.Extensions.FileProviders.Embedded" />
    <Reference Include="Microsoft.Extensions.Identity.Stores" />
  </ItemGroup>

  <ItemGroup>
    <UIFrameworkVersionMoniker Include="V3" />
    <UIFrameworkVersionMoniker Include="V4" />
  </ItemGroup>

  <Target Name="BuildRazorViews" DependsOnTargets="Compile" BeforeTargets="Build">
    <Message Text="Building razor views assemblies" Importance="High" />
    <MSbuild Projects="$(MSBuildThisFile)"
             Targets="BuildForUI"
             Properties="
             BuildProjectReferences=false;
             RazorCompileOnBuild=true;
             UIFrameworkVersion=%(UIFrameworkVersionMoniker.Identity);
             IntermediateOutputPath=$(IntermediateOutputPath)%(UIFrameworkVersionMoniker.Identity)\;" />

    <Copy
      SourceFiles="$(IntermediateOutputPath)%(UIFrameworkVersionMoniker.Identity)\$(TargetName).Views.%(UIFrameworkVersionMoniker.Identity).dll"
      DestinationFolder="$(OutDir)"
      SkipUnchangedFiles="$(SkipCopyUnchangedFiles)"
      OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)"
      Retries="$(CopyRetryCount)"
      RetryDelayMilliseconds="$(CopyRetryDelayMilliseconds)"
      UseHardlinksIfPossible="$(CreateHardLinksForCopyFilesToOutputDirectoryIfPossible)"
      UseSymboliclinksIfPossible="$(CreateSymbolicLinksForCopyFilesToOutputDirectoryIfPossible)">

      <Output TaskParameter="DestinationFiles" ItemName="FileWrites"/>
      <Output TaskParameter="DestinationFiles" ItemName="_RazorAssembly"/>
    </Copy>

    <Copy
      SourceFiles="$(IntermediateOutputPath)%(UIFrameworkVersionMoniker.Identity)\$(TargetName).Views.%(UIFrameworkVersionMoniker.Identity).pdb"
      DestinationFolder="$(OutDir)"
      SkipUnchangedFiles="$(SkipCopyUnchangedFiles)"
      OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)"
      Retries="$(CopyRetryCount)"
      RetryDelayMilliseconds="$(CopyRetryDelayMilliseconds)"
      UseHardlinksIfPossible="$(CreateHardLinksForCopyFilesToOutputDirectoryIfPossible)"
      UseSymboliclinksIfPossible="$(CreateSymbolicLinksForCopyFilesToOutputDirectoryIfPossible)">

      <Output TaskParameter="DestinationFiles" ItemName="FileWrites"/>
    </Copy>

    <Message
      Importance="High"
      Text="$(MSBuildProjectName) -&gt; %(_RazorAssembly.FullPath)" />

  </Target>

  <PropertyGroup>
    <RazorTargetName>Microsoft.AspNetCore.Identity.UI.Views.$(UIFrameworkVersion)</RazorTargetName>
  </PropertyGroup>

  <Target Name="SetupRazorInputs">
    <ItemGroup>
      <_RazorGenerate
        Include="Areas\Identity\Pages\$(UIFrameworkVersion)\**\*.cshtml" />

      <RazorGenerate
        Include="@(_RazorGenerate)"
        Link="Areas\Identity\Pages\%(RecursiveDir)%(Filename)%(Extension)" />
    </ItemGroup>
  </Target>

  <Target Name="BuildForUI" DependsOnTargets="SetupRazorInputs;RazorCompile" />

<Target
    Name="_GetRazorDlls" BeforeTargets="GetCopyToOutputDirectoryItems">

    <ItemGroup>
      <_GeneratedRazorViews Include="$(TargetDir)$(TargetName).Views.%(UIFrameworkVersionMoniker.Identity).dll" />
      <_GeneratedRazorViews Include="$(TargetDir)$(TargetName).Views.%(UIFrameworkVersionMoniker.Identity).pdb" />

      <AllItemsFullPathWithTargetPath Include="%(_GeneratedRazorViews.FullPath)">
        <TargetPath>%(FileName)%(Extension)</TargetPath>
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </AllItemsFullPathWithTargetPath>
    </ItemGroup>
  </Target>

  <Target Name="_AddRazorDlls" BeforeTargets="BuiltProjectOutputGroup">
    <ItemGroup>
      <BuiltProjectOutputGroupOutput
        Include="$(IntermediateOutputPath)%(UIFrameworkVersionMoniker.Identity)\$(TargetName).Views.%(UIFrameworkVersionMoniker.Identity).dll" />
    </ItemGroup>
  </Target>

  <Target Name="_AddRazorPdbs" BeforeTargets="DebugSymbolsProjectOutputGroup">
    <ItemGroup>
      <DebugSymbolsProjectOutputGroupOutput
        Include="$(IntermediateOutputPath)%(UIFrameworkVersionMoniker.Identity)\$(TargetName).Views.%(UIFrameworkVersionMoniker.Identity).pdb" />
    </ItemGroup>
  </Target>

  <Target Name="VerifyBuildOutputs" AfterTargets="BuildRazorViews">
    <ItemGroup>
      <ExpectedOutputFile Include="$(TargetDir)Microsoft.AspNetCore.Identity.UI.Views.V3.dll" />
      <ExpectedOutputFile Include="$(TargetDir)Microsoft.AspNetCore.Identity.UI.Views.V4.dll" />
    </ItemGroup>

    <Error Text="Unable to find precompiled view file %(ExpectedOutputFile.Identity)"
           Condition="!Exists('%(ExpectedOutputFile.Identity)')" />
  </Target>

</Project>
