.assembly extern PresentationCore
{
	.publickeytoken = (31 BF 38 56 AD 36 4E 35)
	.ver 4:0:0:0
}
.assembly extern PresentationFramework
{
	.publickeytoken = (31 BF 38 56 AD 36 4E 35)
	.ver 4:0:0:0
}
.assembly extern System
{
	.publickeytoken = (B7 7A 5C 56 19 34 E0 89)
	.ver 4:0:0:0
}
.assembly extern System.Activities
{
	.publickeytoken = (31 BF 38 56 AD 36 4E 35)
	.ver 4:0:0:0
}
.assembly extern System.ComponentModel.Composition
{
	.publickeytoken = (B7 7A 5C 56 19 34 E0 89)
	.ver 4:0:0:0
}
.assembly extern System.Core
{
	.publickeytoken = (B7 7A 5C 56 19 34 E0 89)
	.ver 4:0:0:0
}
.assembly extern System.Drawing
{
	.publickeytoken = (B0 3F 5F 7F 11 D5 0A 3A)
	.ver 4:0:0:0
}
.assembly extern System.ServiceModel.Activities
{
	.publickeytoken = (31 BF 38 56 AD 36 4E 35)
	.ver 4:0:0:0
}
.assembly extern System.ServiceModel.Internals
{
	.publickeytoken = (31 BF 38 56 AD 36 4E 35)
	.ver 4:0:0:0
}
.assembly extern System.Xaml
{
	.publickeytoken = (B7 7A 5C 56 19 34 E0 89)
	.ver 4:0:0:0
}
.assembly extern UIAutomationProvider
{
	.publickeytoken = (31 BF 38 56 AD 36 4E 35)
	.ver 4:0:0:0
}
.assembly extern UIAutomationTypes
{
	.publickeytoken = (31 BF 38 56 AD 36 4E 35)
	.ver 4:0:0:0
}
.assembly extern WindowsBase
{
	.publickeytoken = (31 BF 38 56 AD 36 4E 35)
	.ver 4:0:0:0
}
.assembly extern mscorlib
{
	.publickeytoken = (B7 7A 5C 56 19 34 E0 89)
	.ver 4:0:0:0
}
.assembly System.Activities.Presentation
{
	.custom instance void [mscorlib]System.CLSCompliantAttribute::.ctor(bool) = { bool(true) }
	.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
	.custom instance void [mscorlib]System.Runtime.CompilerServices.InternalsVisibleToAttribute::.ctor(string) = { string('CIT.System.Activities.Core.Design, PublicKey=0024000004800000940000000602000000240000525341310004000001000100b5fc90e7027f67871e773a8fde8938c81dd402ba65b9201d60593e96c492651e889cc13f1415ebb53fac1131ae0bd333c5ee6021672d9718ea31a8aebd0da0072f25d87dba6fc90ffd598ed4da35e44c398c454307e8e33b8426143daec9f596836f97c8f74750e5975c64e2189f45def46b2a2b1247adc3652bf5c308055da9') }
	.custom instance void [mscorlib]System.Runtime.CompilerServices.InternalsVisibleToAttribute::.ctor(string) = { string('System.Activities.Core.Presentation, PublicKey=0024000004800000940000000602000000240000525341310004000001000100b5fc90e7027f67871e773a8fde8938c81dd402ba65b9201d60593e96c492651e889cc13f1415ebb53fac1131ae0bd333c5ee6021672d9718ea31a8aebd0da0072f25d87dba6fc90ffd598ed4da35e44c398c454307e8e33b8426143daec9f596836f97c8f74750e5975c64e2189f45def46b2a2b1247adc3652bf5c308055da9') }
	.custom instance void [mscorlib]System.Runtime.CompilerServices.InternalsVisibleToAttribute::.ctor(string) = { string('System.Activities.Presentation.UnitTest, PublicKey=0024000004800000940000000602000000240000525341310004000001000100b5fc90e7027f67871e773a8fde8938c81dd402ba65b9201d60593e96c492651e889cc13f1415ebb53fac1131ae0bd333c5ee6021672d9718ea31a8aebd0da0072f25d87dba6fc90ffd598ed4da35e44c398c454307e8e33b8426143daec9f596836f97c8f74750e5975c64e2189f45def46b2a2b1247adc3652bf5c308055da9') }
	.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = { bool(false) }
	.publickey = (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 B5 FC 90 E7 02 7F 67 87 1E 77 3A 8F DE 89 38 C8 1D D4 02 BA 65 B9 20 1D 60 59 3E 96 C4 92 65 1E 88 9C C1 3F 14 15 EB B5 3F AC 11 31 AE 0B D3 33 C5 EE 60 21 67 2D 97 18 EA 31 A8 AE BD 0D A0 07 2F 25 D8 7D BA 6F C9 0F FD 59 8E D4 DA 35 E4 4C 39 8C 45 43 07 E8 E3 3B 84 26 14 3D AE C9 F5 96 83 6F 97 C8 F7 47 50 E5 97 5C 64 E2 18 9F 45 DE F4 6B 2A 2B 12 47 AD C3 65 2B F5 C3 08 05 5D A9)
	.hash algorithm 0x00008004
	.ver 4:0:0:0
}
.class private abstract sealed NameSpaces
	extends [mscorlib]System.Object
{
	.method public static hidebysig 
		bool ShouldIgnore(string ns)
	{
		ret
	}
	.field static public literal string Activities = "http://schemas.microsoft.com/netfx/2009/xaml/activities"
	.field static public literal string DebugSymbol = "http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
	.field static public literal string DebugSymbolPrefix = "sads"
	.field static public literal string Design = "http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
	.field static public literal string Design2010 = "http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
	.field static public literal string Design2010Prefix = "sap2010"
	.field static public literal string DesignPrefix = "sap"
	.field static public literal string Mc = "http://schemas.openxmlformats.org/markup-compatibility/2006"
	.field static public literal string McPrefix = "mc"
	.field static public literal string Toolbox = "http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation/toolbox"
}
.namespace Microsoft.Activities
{
	.class private abstract sealed SharedFx
		extends [mscorlib]System.Object
	{
		.method assembly static hidebysig 
			bool IsFatal(class [mscorlib]System.Exception exception)
		{
			ret
		}
		.method assembly static hidebysig 
			void Assert(bool condition, string messageText)
		{
			ret
		}
		.method assembly static hidebysig 
			void Assert(string messageText)
		{
			ret
		}
	}
}
.namespace Microsoft.Activities.Presentation
{
	.class private abstract sealed ExpressionSettingHelper
		extends [mscorlib]System.Object
	{
		.method assembly static hidebysig 
			string GetRootEditorSetting(class System.Activities.Presentation.Model.ModelTreeManager modelTreeManager, class [System]System.Runtime.Versioning.FrameworkName targetFramework)
		{
			ret
		}
		.field static assembly initonly string VBExpressionLanguageName
	}
	.class private abstract sealed FrameworkNameConstants
		extends [mscorlib]System.Object
	{
		.field static assembly literal string ClientProfileName = "Client"
		.field static assembly literal string NetFramework = ".NETFramework"
		.field static public initonly class [System]System.Runtime.Versioning.FrameworkName NetFramework40
		.field static public initonly class [System]System.Runtime.Versioning.FrameworkName NetFramework45
		.field static assembly literal string NetFrameworkWithSpace = ".NET Framework"
	}
	.class private abstract sealed FrameworkNameExtensions
		extends [mscorlib]System.Object
	{
		.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
		.method public static hidebysig 
			bool Is45OrHigher(class [System]System.Runtime.Versioning.FrameworkName frameworkName)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			bool IsLessThan45(class [System]System.Runtime.Versioning.FrameworkName frameworkName)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			bool IsLessThan40(class [System]System.Runtime.Versioning.FrameworkName frameworkName)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			bool IsProfileSupported(class [System]System.Runtime.Versioning.FrameworkName frameworkName)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			bool IsFullProfile(class [System]System.Runtime.Versioning.FrameworkName frameworkName)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
	}
	.class private SharedSR
		extends [mscorlib]System.Object
	{
		.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
		.method assembly hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			class [mscorlib]System.Resources.ResourceManager get_ResourceManager()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			class [mscorlib]System.Globalization.CultureInfo get_Culture()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			void set_Culture(class [mscorlib]System.Globalization.CultureInfo 'value')
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_FileFormatError()
		{
			ret
		}
		.property class [mscorlib]System.Globalization.CultureInfo Culture()
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(2) }
			.get class [mscorlib]System.Globalization.CultureInfo Microsoft.Activities.Presentation.SharedSR::get_Culture()
			.set void Microsoft.Activities.Presentation.SharedSR::set_Culture(class [mscorlib]System.Globalization.CultureInfo)
		}
		.property string FileFormatError()
		{
			.get string Microsoft.Activities.Presentation.SharedSR::get_FileFormatError()
		}
		.property class [mscorlib]System.Resources.ResourceManager ResourceManager()
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(2) }
			.get class [mscorlib]System.Resources.ResourceManager Microsoft.Activities.Presentation.SharedSR::get_ResourceManager()
		}
	}
	.class private abstract sealed TypeNameHelper
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			string GetDisplayName(class [mscorlib]System.Type 'type', bool fullName)
		{
			ret
		}
	}
}
.namespace Microsoft.Activities.Presentation.Xaml
{
	.class private abstract sealed ActivityBuilderExtensions
		extends [mscorlib]System.Object
	{
		.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
		.method assembly static hidebysig 
			class [System.Activities]System.Activities.DynamicActivity ConvertToDynamicActivity(class [System.Activities]System.Activities.ActivityBuilder activityBuilder)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
		.method assembly static hidebysig 
			void ConvertActivityBuilderToDynamicActivity(class [System.Activities]System.Activities.ActivityBuilder activityBuilder, class [System.Activities]System.Activities.DynamicActivity bodyPlaceholder)
		{
			ret
		}
	}
	.class private sealed ActivityTemplateFactoryBuilderReader
		extends [System.Xaml]System.Xaml.XamlReader
		implements [System.Xaml]System.Xaml.IXamlLineInfo
	{
		.method public hidebysig specialname 
			instance void .ctor(class [System.Xaml]System.Xaml.XamlReader underlyingReader, class [System.Xaml]System.Xaml.XamlSchemaContext schemaContext)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_IsEof()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [System.Xaml]System.Xaml.XamlMember get_Member()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [System.Xaml]System.Xaml.NamespaceDeclaration get_Namespace()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype [System.Xaml]System.Xaml.XamlNodeType get_NodeType()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [System.Xaml]System.Xaml.XamlSchemaContext get_SchemaContext()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [System.Xaml]System.Xaml.XamlType get_Type()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance object get_Value()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_HasLineInfo()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance int32 get_LineNumber()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance int32 get_LinePosition()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Read()
		{
			ret
		}
		.property instance bool HasLineInfo()
		{
			.get instance bool Microsoft.Activities.Presentation.Xaml.ActivityTemplateFactoryBuilderReader::get_HasLineInfo()
		}
		.property instance bool IsEof()
		{
			.get instance bool Microsoft.Activities.Presentation.Xaml.ActivityTemplateFactoryBuilderReader::get_IsEof()
		}
		.property instance int32 LineNumber()
		{
			.get instance int32 Microsoft.Activities.Presentation.Xaml.ActivityTemplateFactoryBuilderReader::get_LineNumber()
		}
		.property instance int32 LinePosition()
		{
			.get instance int32 Microsoft.Activities.Presentation.Xaml.ActivityTemplateFactoryBuilderReader::get_LinePosition()
		}
		.property instance class [System.Xaml]System.Xaml.XamlMember Member()
		{
			.get instance class [System.Xaml]System.Xaml.XamlMember Microsoft.Activities.Presentation.Xaml.ActivityTemplateFactoryBuilderReader::get_Member()
		}
		.property instance class [System.Xaml]System.Xaml.NamespaceDeclaration Namespace()
		{
			.get instance class [System.Xaml]System.Xaml.NamespaceDeclaration Microsoft.Activities.Presentation.Xaml.ActivityTemplateFactoryBuilderReader::get_Namespace()
		}
		.property instance valuetype [System.Xaml]System.Xaml.XamlNodeType NodeType()
		{
			.get instance valuetype [System.Xaml]System.Xaml.XamlNodeType Microsoft.Activities.Presentation.Xaml.ActivityTemplateFactoryBuilderReader::get_NodeType()
		}
		.property instance class [System.Xaml]System.Xaml.XamlSchemaContext SchemaContext()
		{
			.get instance class [System.Xaml]System.Xaml.XamlSchemaContext Microsoft.Activities.Presentation.Xaml.ActivityTemplateFactoryBuilderReader::get_SchemaContext()
		}
		.property instance class [System.Xaml]System.Xaml.XamlType Type()
		{
			.get instance class [System.Xaml]System.Xaml.XamlType Microsoft.Activities.Presentation.Xaml.ActivityTemplateFactoryBuilderReader::get_Type()
		}
		.property instance object Value()
		{
			.get instance object Microsoft.Activities.Presentation.Xaml.ActivityTemplateFactoryBuilderReader::get_Value()
		}
	}
	.class private sealed ActivityTemplateFactoryBuilderWriter
		extends [System.Xaml]System.Xaml.XamlWriter
	{
		.method public hidebysig specialname 
			instance void .ctor(class [System.Xaml]System.Xaml.XamlWriter underlyingWriter, class [System.Xaml]System.Xaml.XamlSchemaContext schemaContext)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [System.Xaml]System.Xaml.XamlSchemaContext get_SchemaContext()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void WriteNamespace(class [System.Xaml]System.Xaml.NamespaceDeclaration namespaceDeclaration)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void WriteStartObject(class [System.Xaml]System.Xaml.XamlType 'type')
		{
			ret
		}
		.method public virtual hidebysig 
			instance void WriteEndObject()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void WriteGetObject()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void WriteStartMember(class [System.Xaml]System.Xaml.XamlMember xamlMember)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void WriteEndMember()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void WriteValue(object 'value')
		{
			ret
		}
		.property instance class [System.Xaml]System.Xaml.XamlSchemaContext SchemaContext()
		{
			.get instance class [System.Xaml]System.Xaml.XamlSchemaContext Microsoft.Activities.Presentation.Xaml.ActivityTemplateFactoryBuilderWriter::get_SchemaContext()
		}
	}
	.class private abstract sealed ActivityTemplateFactoryBuilderXamlMembers
		extends [mscorlib]System.Object
	{
		.method assembly static hidebysig 
			class [System.Xaml]System.Xaml.XamlMember ActivityTemplateFactoryImplementationMemberForReader(class [mscorlib]System.Type activityTemplateFactoryType, class [System.Xaml]System.Xaml.XamlSchemaContext schemaContext)
		{
			ret
		}
		.method assembly static hidebysig 
			class [System.Xaml]System.Xaml.XamlMember ActivityTemplateFactoryImplementationMemberForWriter(class [System.Xaml]System.Xaml.XamlSchemaContext schemaContext)
		{
			ret
		}
		.method assembly static hidebysig 
			class [System.Xaml]System.Xaml.XamlMember ActivityTemplateFactoryBuilderNameMember(class [System.Xaml]System.Xaml.XamlSchemaContext schemaContext)
		{
			ret
		}
		.method assembly static hidebysig 
			class [System.Xaml]System.Xaml.XamlMember ActivityTemplateFactoryBuilderTargetTypeMember(class [System.Xaml]System.Xaml.XamlSchemaContext schemaContext)
		{
			ret
		}
		.method assembly static hidebysig 
			class [System.Xaml]System.Xaml.XamlMember ActivityTemplateFactoryBuilderImplementationMember(class [System.Xaml]System.Xaml.XamlSchemaContext schemaContext)
		{
			ret
		}
	}
	.class private 'AttributeConverter`2'<([mscorlib]System.Attribute) 'TAttribute', .ctor (class 'Microsoft.Activities.Presentation.Xaml.AttributeInfo`1'<!0>) 'TAttributeInfo'>
		extends [System]System.ComponentModel.TypeConverter
	{
		.method public virtual hidebysig 
			instance bool CanConvertTo(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool CanConvertFrom(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Type sourceType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertTo(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value', class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private abstract 'AttributeInfo`1'<([mscorlib]System.Attribute) 'TAttribute'>
		extends [mscorlib]System.Object
	{
		.method public virtual hidebysig newslot specialname 
			instance bool get_IsComplete()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_LookupConstructionRequiresArguments()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class [System.Xaml]System.Xaml.Schema.XamlTypeInvoker get_Invoker()
		{
			ret
		}
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]System.Reflection.ConstructorInfo GetConstructor()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]System.Collections.ICollection GetConstructorArguments(!0 attribute, class [mscorlib]System.Reflection.ConstructorInfo& constructor)
		{
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class [System.Xaml]System.Xaml.Schema.XamlTypeInvoker Invoker()
		{
			.get instance class [System.Xaml]System.Xaml.Schema.XamlTypeInvoker 'Microsoft.Activities.Presentation.Xaml.AttributeInfo`1'::get_Invoker()
		}
		.property instance bool IsComplete()
		{
			.get instance bool 'Microsoft.Activities.Presentation.Xaml.AttributeInfo`1'::get_IsComplete()
		}
		.property instance bool LookupConstructionRequiresArguments()
		{
			.get instance bool 'Microsoft.Activities.Presentation.Xaml.AttributeInfo`1'::get_LookupConstructionRequiresArguments()
		}
	}
	.class private 'AttributeXamlType`2'<([mscorlib]System.Attribute) 'TAttribute', .ctor (class 'Microsoft.Activities.Presentation.Xaml.AttributeInfo`1'<!0>) 'TAttributeInfo'>
		extends [System.Xaml]System.Xaml.XamlType
	{
		.method public hidebysig specialname 
			instance void .ctor(class [System.Xaml]System.Xaml.XamlSchemaContext xamlSchemaContext)
		{
			ret
		}
		.method family virtual hidebysig 
			instance class [System.Xaml]'System.Xaml.Schema.XamlValueConverter`1'<class [System]System.ComponentModel.TypeConverter> LookupTypeConverter()
		{
			ret
		}
		.method family virtual hidebysig 
			instance bool LookupConstructionRequiresArguments()
		{
			ret
		}
		.method family virtual hidebysig 
			instance class [System.Xaml]System.Xaml.Schema.XamlTypeInvoker LookupInvoker()
		{
			ret
		}
	}
	.class private DefaultValueAttributeInfo
		extends class 'Microsoft.Activities.Presentation.Xaml.AttributeInfo`1'<class [System]System.ComponentModel.DefaultValueAttribute>
	{
		.method public virtual hidebysig specialname 
			instance class [System.Xaml]System.Xaml.Schema.XamlTypeInvoker get_Invoker()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Collections.ICollection GetConstructorArguments(class [System]System.ComponentModel.DefaultValueAttribute attribute, class [mscorlib]System.Reflection.ConstructorInfo& constructor)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Reflection.ConstructorInfo GetConstructor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class [System.Xaml]System.Xaml.Schema.XamlTypeInvoker Invoker()
		{
			.get instance class [System.Xaml]System.Xaml.Schema.XamlTypeInvoker Microsoft.Activities.Presentation.Xaml.DefaultValueAttributeInfo::get_Invoker()
		}
	}
	.class private DesignTimeXamlWriter
		extends [System.Xaml]System.Xaml.XamlXmlWriter
	{
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]'System.IO.TextWriter' textWriter, class Microsoft.Activities.Presentation.Xaml.WorkflowDesignerXamlSchemaContext context, bool shouldWriteDebugSymbol)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void WriteNamespace(class [System.Xaml]System.Xaml.NamespaceDeclaration namespaceDeclaration)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void WriteStartObject(class [System.Xaml]System.Xaml.XamlType 'type')
		{
			ret
		}
		.method public virtual hidebysig 
			instance void WriteGetObject()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void WriteEndObject()
		{
			ret
		}
		.field static assembly initonly string EmptyWorkflowSymbol
	}
	.class private DesignerAttributeInfo
		extends class 'Microsoft.Activities.Presentation.Xaml.AttributeInfo`1'<class [System]System.ComponentModel.DesignerAttribute>
	{
		.method public virtual hidebysig 
			instance class [mscorlib]System.Collections.ICollection GetConstructorArguments(class [System]System.ComponentModel.DesignerAttribute attribute, class [mscorlib]System.Reflection.ConstructorInfo& constructor)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Reflection.ConstructorInfo GetConstructor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private EditorAttributeInfo
		extends class 'Microsoft.Activities.Presentation.Xaml.AttributeInfo`1'<class [System]System.ComponentModel.EditorAttribute>
	{
		.method public virtual hidebysig 
			instance class [mscorlib]System.Collections.ICollection GetConstructorArguments(class [System]System.ComponentModel.EditorAttribute attribute, class [mscorlib]System.Reflection.ConstructorInfo& constructor)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Reflection.ConstructorInfo GetConstructor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private interface abstract IWorkflowDesignerXamlHelperExecutionContext
	{
		.method public virtual hidebysig newslot abstract specialname 
			instance class [System]System.Runtime.Versioning.FrameworkName get_FrameworkName()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class Microsoft.Activities.Presentation.Xaml.WorkflowDesignerXamlSchemaContext get_XamlSchemaContext()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class Microsoft.Activities.Presentation.Xaml.ViewStateIdManager get_IdManager()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class [System.Activities]System.Activities.Debugger.Symbol.WorkflowSymbol get_LastWorkflowSymbol()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void set_LastWorkflowSymbol(class [System.Activities]System.Activities.Debugger.Symbol.WorkflowSymbol 'value')
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance string get_LocalAssemblyName()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void OnSerializationCompleted(class [mscorlib]'System.Collections.Generic.Dictionary`2'<object,object> sourceLocationObjectToModelItemObjectMapping)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void OnBeforeDeserialize()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void OnSourceLocationFound(object target, class [System.Activities]System.Activities.Debugger.SourceLocation sourceLocation)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void OnAfterDeserialize(class [mscorlib]'System.Collections.Generic.Dictionary`2'<string,class [System.Activities]System.Activities.Debugger.SourceLocation> viewStateDataSourceLocationMapping)
		{
		}
		.property instance class [System]System.Runtime.Versioning.FrameworkName FrameworkName()
		{
			.get instance class [System]System.Runtime.Versioning.FrameworkName Microsoft.Activities.Presentation.Xaml.IWorkflowDesignerXamlHelperExecutionContext::get_FrameworkName()
		}
		.property instance class Microsoft.Activities.Presentation.Xaml.ViewStateIdManager IdManager()
		{
			.get instance class Microsoft.Activities.Presentation.Xaml.ViewStateIdManager Microsoft.Activities.Presentation.Xaml.IWorkflowDesignerXamlHelperExecutionContext::get_IdManager()
		}
		.property instance class [System.Activities]System.Activities.Debugger.Symbol.WorkflowSymbol LastWorkflowSymbol()
		{
			.get instance class [System.Activities]System.Activities.Debugger.Symbol.WorkflowSymbol Microsoft.Activities.Presentation.Xaml.IWorkflowDesignerXamlHelperExecutionContext::get_LastWorkflowSymbol()
			.set instance void Microsoft.Activities.Presentation.Xaml.IWorkflowDesignerXamlHelperExecutionContext::set_LastWorkflowSymbol(class [System.Activities]System.Activities.Debugger.Symbol.WorkflowSymbol)
		}
		.property instance string LocalAssemblyName()
		{
			.get instance string Microsoft.Activities.Presentation.Xaml.IWorkflowDesignerXamlHelperExecutionContext::get_LocalAssemblyName()
		}
		.property instance class Microsoft.Activities.Presentation.Xaml.WorkflowDesignerXamlSchemaContext XamlSchemaContext()
		{
			.get instance class Microsoft.Activities.Presentation.Xaml.WorkflowDesignerXamlSchemaContext Microsoft.Activities.Presentation.Xaml.IWorkflowDesignerXamlHelperExecutionContext::get_XamlSchemaContext()
		}
	}
	.class private ImportAttributeInfo
		extends class 'Microsoft.Activities.Presentation.Xaml.AttributeInfo`1'<class [System.ComponentModel.Composition]System.ComponentModel.Composition.ImportAttribute>
	{
		.method public virtual hidebysig specialname 
			instance bool get_IsComplete()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Collections.ICollection GetConstructorArguments(class [System.ComponentModel.Composition]System.ComponentModel.Composition.ImportAttribute attribute, class [mscorlib]System.Reflection.ConstructorInfo& constructor)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Reflection.ConstructorInfo GetConstructor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance bool IsComplete()
		{
			.get instance bool Microsoft.Activities.Presentation.Xaml.ImportAttributeInfo::get_IsComplete()
		}
	}
	.class private ImportManyAttributeInfo
		extends class 'Microsoft.Activities.Presentation.Xaml.AttributeInfo`1'<class [System.ComponentModel.Composition]System.ComponentModel.Composition.ImportManyAttribute>
	{
		.method public virtual hidebysig specialname 
			instance bool get_IsComplete()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Collections.ICollection GetConstructorArguments(class [System.ComponentModel.Composition]System.ComponentModel.Composition.ImportManyAttribute attribute, class [mscorlib]System.Reflection.ConstructorInfo& constructor)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Reflection.ConstructorInfo GetConstructor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance bool IsComplete()
		{
			.get instance bool Microsoft.Activities.Presentation.Xaml.ImportManyAttributeInfo::get_IsComplete()
		}
	}
	.class private LineColumnPair
		extends class [mscorlib]'System.Tuple`2'<int32,int32>
	{
		.method assembly hidebysig specialname 
			instance void .ctor(int32 item1, int32 item2)
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance int32 get_LineNumber()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance int32 get_ColumnNumber()
		{
			ret
		}
		.property instance int32 ColumnNumber()
		{
			.get instance int32 Microsoft.Activities.Presentation.Xaml.LineColumnPair::get_ColumnNumber()
		}
		.property instance int32 LineNumber()
		{
			.get instance int32 Microsoft.Activities.Presentation.Xaml.LineColumnPair::get_LineNumber()
		}
	}
	.class private abstract sealed MultiTargetingTypeResolver
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			class Microsoft.Activities.Presentation.Xaml.ResolverResult Resolve(class System.Activities.Presentation.Hosting.MultiTargetingSupportService multiTargetingService, class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public static hidebysig 
			class [System.Xaml]System.Xaml.XamlType GetXamlType(class Microsoft.Activities.Presentation.Xaml.ResolverResult resolverResult, class [System.Xaml]System.Xaml.XamlType oldXamlType)
		{
			ret
		}
	}
	.class private sealed 'ObjectReferenceEqualityComparer`1'<class 'T'>
		extends [mscorlib]System.Object
		implements class [mscorlib]'System.Collections.Generic.IEqualityComparer`1'<!0>
	{
		.method public static hidebysig specialname 
			class 'Microsoft.Activities.Presentation.Xaml.ObjectReferenceEqualityComparer`1'<!0> get_Default()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool Equals(!0 x, !0 y)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance int32 GetHashCode(!0 obj)
		{
			ret
		}
		.property class 'Microsoft.Activities.Presentation.Xaml.ObjectReferenceEqualityComparer`1'<!0> Default()
		{
			.get class 'Microsoft.Activities.Presentation.Xaml.ObjectReferenceEqualityComparer`1'<!0> 'Microsoft.Activities.Presentation.Xaml.ObjectReferenceEqualityComparer`1'::get_Default()
		}
	}
	.class private ResolverCache
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig 
			instance void Update(class [mscorlib]System.Type 'type', class Microsoft.Activities.Presentation.Xaml.ResolverResult result)
		{
			ret
		}
		.method public hidebysig 
			instance class Microsoft.Activities.Presentation.Xaml.ResolverResult Lookup(class [mscorlib]System.Type 'type')
		{
			ret
		}
	}
	.class private ResolverResult
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor(valuetype Microsoft.Activities.Presentation.Xaml.XamlTypeKind kind)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]'System.Collections.Generic.ICollection`1'<string> newProperties)
		{
			ret
		}
		.method public static hidebysig specialname 
			class Microsoft.Activities.Presentation.Xaml.ResolverResult get_Unknown()
		{
			ret
		}
		.method public static hidebysig specialname 
			class Microsoft.Activities.Presentation.Xaml.ResolverResult get_FullySupported()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.Activities.Presentation.Xaml.XamlTypeKind get_Kind()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.ICollection`1'<string> get_NewProperties()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.property class Microsoft.Activities.Presentation.Xaml.ResolverResult FullySupported()
		{
			.get class Microsoft.Activities.Presentation.Xaml.ResolverResult Microsoft.Activities.Presentation.Xaml.ResolverResult::get_FullySupported()
		}
		.property instance valuetype Microsoft.Activities.Presentation.Xaml.XamlTypeKind Kind()
		{
			.get instance valuetype Microsoft.Activities.Presentation.Xaml.XamlTypeKind Microsoft.Activities.Presentation.Xaml.ResolverResult::get_Kind()
		}
		.property instance class [mscorlib]'System.Collections.Generic.ICollection`1'<string> NewProperties()
		{
			.get instance class [mscorlib]'System.Collections.Generic.ICollection`1'<string> Microsoft.Activities.Presentation.Xaml.ResolverResult::get_NewProperties()
		}
		.property class Microsoft.Activities.Presentation.Xaml.ResolverResult Unknown()
		{
			.get class Microsoft.Activities.Presentation.Xaml.ResolverResult Microsoft.Activities.Presentation.Xaml.ResolverResult::get_Unknown()
		}
	}
	.class private SourceTextScanner
		extends [mscorlib]System.Object
	{
		.method assembly hidebysig specialname 
			instance void .ctor(string source)
		{
			ret
		}
		.method assembly hidebysig 
			instance class [mscorlib]'System.Tuple`2'<class Microsoft.Activities.Presentation.Xaml.LineColumnPair,char> SearchCharAfter(class Microsoft.Activities.Presentation.Xaml.LineColumnPair startPoint, char[] charsToSearch)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
	}
	.class private ViewStateIdManager
		extends [mscorlib]System.Object
	{
		.method public hidebysig 
			instance void UpdateMap(string id)
		{
			ret
		}
		.method public hidebysig 
			instance string GetNewId(string prefix)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private abstract sealed ViewStateXamlHelper
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			class [System.Xaml]System.Xaml.XamlReader ConvertAttachedPropertiesToViewState(class [System.Xaml]System.Xaml.XamlObjectReader inputReader, class Microsoft.Activities.Presentation.Xaml.ViewStateIdManager idManager)
		{
			ret
		}
		.method public static hidebysig 
			class [System.Xaml]System.Xaml.XamlReader ConvertViewStateToAttachedProperties(class [System.Xaml]System.Xaml.XamlReader inputReader, class Microsoft.Activities.Presentation.Xaml.ViewStateIdManager idManager, [out] class [mscorlib]'System.Collections.Generic.Dictionary`2'<string,class [System.Activities]System.Activities.Debugger.SourceLocation>& viewStateSourceLocationMap)
		{
			ret
		}
		.method public static hidebysig 
			class [System.Xaml]System.Xaml.XamlReader RemoveIdRefs(class [System.Xaml]System.Xaml.XamlObjectReader inputReader)
		{
			ret
		}
		.method public static hidebysig 
			void NodeLoopTest(class [System.Xaml]System.Xaml.XamlReader xamlReader)
		{
			ret
		}
	}
	.class private WorkflowDesignerXamlHelper
		extends [mscorlib]System.Object
	{
		.class nested assembly sealed DeserializationMode
			extends [mscorlib]System.Enum
		{
			.field public rtspecialname specialname int32 value__
			.field static public literal valuetype Microsoft.Activities.Presentation.Xaml.WorkflowDesignerXamlHelper/DeserializationMode Default = int32(0x00000000)
			.field static public literal valuetype Microsoft.Activities.Presentation.Xaml.WorkflowDesignerXamlHelper/DeserializationMode ErrorTolerant = int32(0x00000001)
		}
		.method assembly hidebysig specialname 
			instance void .ctor(class Microsoft.Activities.Presentation.Xaml.IWorkflowDesignerXamlHelperExecutionContext executionContext)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System]System.Runtime.Versioning.FrameworkName get_FrameworkName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.Activities.Presentation.Xaml.WorkflowDesignerXamlSchemaContext get_XamlSchemaContext()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.Activities.Presentation.Xaml.ViewStateIdManager get_IdManager()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Activities]System.Activities.Debugger.Symbol.WorkflowSymbol get_LastWorkflowSymbol()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LastWorkflowSymbol(class [System.Activities]System.Activities.Debugger.Symbol.WorkflowSymbol 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_LocalAssemblyName()
		{
			ret
		}
		.method public hidebysig 
			instance void OnSerializationCompleted(class [mscorlib]'System.Collections.Generic.Dictionary`2'<object,object> sourceLocationObjectToModelItemObjectMapping)
		{
			ret
		}
		.method public hidebysig 
			instance void OnBeforeDeserialize()
		{
			ret
		}
		.method public hidebysig 
			instance void OnSourceLocationFound(object target, class [System.Activities]System.Activities.Debugger.SourceLocation sourceLocation)
		{
			ret
		}
		.method public hidebysig 
			instance void OnAfterDeserialize(class [mscorlib]'System.Collections.Generic.Dictionary`2'<string,class [System.Activities]System.Activities.Debugger.SourceLocation> viewStateDataSourceLocationMapping)
		{
			ret
		}
		.method assembly static hidebysig 
			class [System.Activities]System.Activities.Activity GetRootWorkflowElement(object rootModelObject)
		{
			ret
		}
		.method assembly static hidebysig 
			class [System.Activities]System.Activities.Activity GetRootElementForSymbol(object rootInstance, class [System.Activities]System.Activities.Activity documentRootElement)
		{
			ret
		}
		.method assembly hidebysig 
			instance void CopyNamespacesAndAddLocalAssembly(class [System.Xaml]System.Xaml.XamlReader activityBuilderReader, class [System.Xaml]System.Xaml.XamlWriter objectWriter)
		{
			ret
		}
		.method assembly hidebysig 
			instance string SerializeToString(object obj, string fileName)
		{
			ret
		}
		.method assembly hidebysig 
			instance void CreateXamlObjectReaders(object deserializedObject, class [System.Xaml]System.Xaml.XamlSchemaContext schemaContext, [out] class [System.Xaml]System.Xaml.XamlReader& newWorkflowReader, [out] class Microsoft.Activities.Presentation.Xaml.XamlObjectReaderWithSequence& deserializedObjectSequenceBuilder)
		{
			ret
		}
		.method assembly hidebysig 
			instance object DeserializeString(string text)
		{
			ret
		}
		.method assembly hidebysig 
			instance object DeserializeString(string text, [out] class [mscorlib]'System.Collections.Generic.IList`1'<class System.Activities.Presentation.XamlLoadErrorInfo>& loadErrors, [out] class [mscorlib]'System.Collections.Generic.Dictionary`2'<object,class [System.Activities]System.Activities.Debugger.SourceLocation>& sourceLocations)
		{
			ret
		}
		.property instance class [System]System.Runtime.Versioning.FrameworkName FrameworkName()
		{
			.get instance class [System]System.Runtime.Versioning.FrameworkName Microsoft.Activities.Presentation.Xaml.WorkflowDesignerXamlHelper::get_FrameworkName()
		}
		.property instance class Microsoft.Activities.Presentation.Xaml.ViewStateIdManager IdManager()
		{
			.get instance class Microsoft.Activities.Presentation.Xaml.ViewStateIdManager Microsoft.Activities.Presentation.Xaml.WorkflowDesignerXamlHelper::get_IdManager()
		}
		.property instance class [System.Activities]System.Activities.Debugger.Symbol.WorkflowSymbol LastWorkflowSymbol()
		{
			.get instance class [System.Activities]System.Activities.Debugger.Symbol.WorkflowSymbol Microsoft.Activities.Presentation.Xaml.WorkflowDesignerXamlHelper::get_LastWorkflowSymbol()
			.set instance void Microsoft.Activities.Presentation.Xaml.WorkflowDesignerXamlHelper::set_LastWorkflowSymbol(class [System.Activities]System.Activities.Debugger.Symbol.WorkflowSymbol)
		}
		.property instance string LocalAssemblyName()
		{
			.get instance string Microsoft.Activities.Presentation.Xaml.WorkflowDesignerXamlHelper::get_LocalAssemblyName()
		}
		.property instance class Microsoft.Activities.Presentation.Xaml.WorkflowDesignerXamlSchemaContext XamlSchemaContext()
		{
			.get instance class Microsoft.Activities.Presentation.Xaml.WorkflowDesignerXamlSchemaContext Microsoft.Activities.Presentation.Xaml.WorkflowDesignerXamlHelper::get_XamlSchemaContext()
		}
	}
	.class private WorkflowDesignerXamlSchemaContext
		extends [System.Xaml]System.Xaml.XamlSchemaContext
	{
		.method public hidebysig specialname 
			instance void .ctor(string localAssembly)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string localAssembly, class System.Activities.Presentation.EditingContext editingContext)
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance bool get_ContainsConversionRequiredType()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_ContainsConversionRequiredType(bool 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method family virtual hidebysig 
			instance class [System.Xaml]System.Xaml.XamlType GetXamlType(string xamlNamespace, string name, class [System.Xaml]System.Xaml.XamlType[] typeArguments)
		{
			.param [3]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public virtual hidebysig 
			instance class [System.Xaml]System.Xaml.XamlType GetXamlType(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<string> GetAllXamlNamespaces()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance bool get_HasLocalAssembly()
		{
			ret
		}
		.method assembly hidebysig 
			instance string AddLocalAssembly(string ns)
		{
			ret
		}
		.method assembly hidebysig 
			instance bool IsClrNamespaceWithNoAssembly(string ns)
		{
			ret
		}
		.method assembly hidebysig 
			instance bool IsClrNamespaceInLocalAssembly(string ns)
		{
			ret
		}
		.method assembly hidebysig 
			instance string TrimLocalAssembly(string ns)
		{
			ret
		}
		.property instance bool ContainsConversionRequiredType()
		{
			.get instance bool Microsoft.Activities.Presentation.Xaml.WorkflowDesignerXamlSchemaContext::get_ContainsConversionRequiredType()
			.set instance void Microsoft.Activities.Presentation.Xaml.WorkflowDesignerXamlSchemaContext::set_ContainsConversionRequiredType(bool)
		}
		.property instance bool HasLocalAssembly()
		{
			.get instance bool Microsoft.Activities.Presentation.Xaml.WorkflowDesignerXamlSchemaContext::get_HasLocalAssembly()
		}
	}
	.class private XamlNamespaceHelper
		extends [mscorlib]System.Object
	{
		.method assembly static hidebysig 
			bool TryParseClrNsUri(string xamlNamespace, [out] string& clrNamespace, [out] string& 'assembly')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.field static assembly literal string ClrNamespaceAssemblyField = ";assembly="
		.field static assembly literal string ClrNamespacePrefix = "clr-namespace:"
	}
	.class private sealed XamlObjectReaderWithSequence
		extends [System.Xaml]System.Xaml.XamlObjectReader
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'instance', class [System.Xaml]System.Xaml.XamlSchemaContext schemaContext)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.Dictionary`2'<int32,object> get_SequenceNumberToObjectMap()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Read()
		{
			ret
		}
		.property instance class [mscorlib]'System.Collections.Generic.Dictionary`2'<int32,object> SequenceNumberToObjectMap()
		{
			.get instance class [mscorlib]'System.Collections.Generic.Dictionary`2'<int32,object> Microsoft.Activities.Presentation.Xaml.XamlObjectReaderWithSequence::get_SequenceNumberToObjectMap()
		}
	}
	.class private sealed XamlTypeKind
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.Activities.Presentation.Xaml.XamlTypeKind FullySupported = int32(0x00000002)
		.field static public literal valuetype Microsoft.Activities.Presentation.Xaml.XamlTypeKind PartialSupported = int32(0x00000001)
		.field static public literal valuetype Microsoft.Activities.Presentation.Xaml.XamlTypeKind Unknown = int32(0x00000000)
	}
	.class private XamlTypeWithExplicitNamespace
		extends [System.Xaml]System.Xaml.XamlType
	{
		.method public hidebysig specialname 
			instance void .ctor(class [System.Xaml]System.Xaml.XamlType wrapped, class [mscorlib]'System.Collections.Generic.IEnumerable`1'<string> explicitNamespaces)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]'System.Collections.Generic.IList`1'<string> GetXamlNamespaces()
		{
			ret
		}
	}
	.class private XamlTypeWithExtraPropertiesRemoved
		extends [System.Xaml]System.Xaml.XamlType
	{
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type underlyingType, class [System.Xaml]System.Xaml.XamlSchemaContext schemaContext, class [mscorlib]'System.Collections.Generic.ICollection`1'<string> propertiesToBeRemoved)
		{
			ret
		}
		.method family virtual hidebysig 
			instance class [System.Xaml]System.Xaml.XamlMember LookupMember(string name, bool skipReadOnlyCheck)
		{
			ret
		}
		.method family virtual hidebysig 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class [System.Xaml]System.Xaml.XamlMember> LookupAllMembers()
		{
			ret
		}
	}
	.class private abstract sealed XamlWriterExtensions
		extends [mscorlib]System.Object
	{
		.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
		.method public static hidebysig 
			void PropagateLineInfo(class [System.Xaml]System.Xaml.XamlWriter targetWriter, class [System.Xaml]System.Xaml.IXamlLineInfo lineInfo)
		{
			ret
		}
		.method public static hidebysig 
			void PropagateLineInfo(class [System.Xaml]System.Xaml.XamlWriter targetWriter, int32 lineNumber, int32 linePosition)
		{
			ret
		}
		.method public static hidebysig 
			void Transform(class [System.Xaml]System.Xaml.XamlReader reader, class [System.Xaml]System.Xaml.XamlWriter writer, class [System.Xaml]System.Xaml.IXamlLineInfo readerLineInfo, bool closeWriter)
		{
			ret
		}
		.method public static hidebysig 
			void WriteNode(class [System.Xaml]System.Xaml.XamlWriter writer, class [System.Xaml]System.Xaml.XamlReader reader, class [System.Xaml]System.Xaml.IXamlLineInfo lineInfo)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			void WriteEndMember(class [System.Xaml]System.Xaml.XamlWriter writer, class [System.Xaml]System.Xaml.IXamlLineInfo lineInfo)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			void WriteEndObject(class [System.Xaml]System.Xaml.XamlWriter writer, class [System.Xaml]System.Xaml.IXamlLineInfo lineInfo)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			void WriteGetObject(class [System.Xaml]System.Xaml.XamlWriter writer, class [System.Xaml]System.Xaml.IXamlLineInfo lineInfo)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			void WriteNamespace(class [System.Xaml]System.Xaml.XamlWriter writer, class [System.Xaml]System.Xaml.NamespaceDeclaration namespaceDeclaration, class [System.Xaml]System.Xaml.IXamlLineInfo lineInfo)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			void WriteStartMember(class [System.Xaml]System.Xaml.XamlWriter writer, class [System.Xaml]System.Xaml.XamlMember xamlMember, class [System.Xaml]System.Xaml.IXamlLineInfo lineInfo)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			void WriteStartMember(class [System.Xaml]System.Xaml.XamlWriter writer, class [System.Xaml]System.Xaml.XamlMember xamlMember, int32 lineNumber, int32 linePosition)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			void WriteStartObject(class [System.Xaml]System.Xaml.XamlWriter writer, class [System.Xaml]System.Xaml.XamlType 'type', class [System.Xaml]System.Xaml.IXamlLineInfo lineInfo)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			void WriteValue(class [System.Xaml]System.Xaml.XamlWriter writer, object 'value', class [System.Xaml]System.Xaml.IXamlLineInfo lineInfo)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
	}
}
.namespace Microsoft.Tools.Common
{
	.class private abstract sealed Win32Interop
		extends [mscorlib]System.Object
	{
		.class nested public sequential sealed 'POINT'
			extends [mscorlib]System.Object
		{
			.method public hidebysig specialname 
				instance void .ctor()
			{
				ret
			}
			.method public hidebysig specialname 
				instance void .ctor(int32 x, int32 y)
			{
				ret
			}
			.field public int32 x
			.field public int32 y
		}
		.method assembly static hidebysig 
			void MakeWindowClipSiblingsAndChildren(valuetype [mscorlib]System.Runtime.InteropServices.HandleRef hwnd)
		{
			ret
		}
		.method assembly static hidebysig 
			native int SetWindowLongPtr(valuetype [mscorlib]System.Runtime.InteropServices.HandleRef hWnd, int32 nIndex, native int dwNewLong)
		{
			ret
		}
		.method public static hidebysig 
			native int GetWindowLongPtr(native int hWnd, int32 nIndex)
		{
			ret
		}
		.method public static hidebysig pinvokeimpl("dummy" winapi) 
			native int SendMessage(native int hWnd, int32 Msg, native int wParam, native int lParam)
			preservesig 
		{
		}
		.method public static hidebysig pinvokeimpl("dummy" winapi) 
			native int GetActiveWindow()
			preservesig 
		{
		}
		.method public static hidebysig pinvokeimpl("dummy" winapi) 
			bool DeleteObject(native int hObject)
			preservesig 
		{
		}
		.method public static hidebysig pinvokeimpl("dummy" winapi) 
			int32 ScreenToClient(native int hWnd, [in][out] class Microsoft.Tools.Common.Win32Interop/'POINT' pt)
			preservesig 
		{
		}
		.field static public literal int32 'GWL_EXSTYLE' = int32(0xFFFFFFEC)
		.field static public literal int32 'GWL_STYLE' = int32(0xFFFFFFF0)
		.field static public literal int32 'ICON_BIG' = int32(0x00000001)
		.field static public literal int32 'ICON_SMALL' = int32(0x00000000)
		.field static public literal int32 'SC_CONTEXTHELP' = int32(0x0000F180)
		.field static public literal int32 'WM_NCHITTEST' = int32(0x00000084)
		.field static public literal int32 'WM_SETICON' = int32(0x00000080)
		.field static public literal int32 'WM_SYSCOMMAND' = int32(0x00000112)
		.field static public literal int32 'WS_CLIPCHILDREN' = int32(0x02000000)
		.field static public literal int32 'WS_CLIPSIBLINGS' = int32(0x04000000)
		.field static public literal int32 'WS_EX_CONTEXTHELP' = int32(0x00000400)
		.field static public literal int32 'WS_EX_DLGMODALFRAME' = int32(0x00000001)
		.field static public literal int32 'WS_MAXIMIZEBOX' = int32(0x00010000)
		.field static public literal int32 'WS_MINIMIZEBOX' = int32(0x00020000)
	}
}
.namespace System
{
	.class private abstract sealed AppContextDefaultValues
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			void PopulateDefaultValues()
		{
			ret
		}
	}
	.class private abstract sealed LocalAppContext
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			bool IsSwitchEnabled(string switchName)
		{
			ret
		}
		.method assembly static hidebysig 
			bool GetCachedSwitchValue(string switchName, int32& switchValue)
			aggressiveinlining 
		{
			ret
		}
		.method assembly static hidebysig 
			void DefineSwitchDefault(string switchName, bool initialValue)
		{
			ret
		}
	}
}
.namespace System.Activities.Presentation
{
	.class private ActivityDelegateInfo
		extends [mscorlib]System.Object
		implements System.Activities.Presentation.IActivityDelegateFactory
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.Model.ModelItem modelItem, string propertyName)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_ModelItem()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_PropertyName()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance class [mscorlib]System.Type get_DelegateType()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.EditingContext get_EditingContext()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [System.Activities]System.Activities.ActivityDelegate Create()
		{
			ret
		}
		.property instance class [mscorlib]System.Type DelegateType()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.ActivityDelegateInfo::get_DelegateType()
		}
		.property instance class System.Activities.Presentation.EditingContext EditingContext()
		{
			.get instance class System.Activities.Presentation.EditingContext System.Activities.Presentation.ActivityDelegateInfo::get_EditingContext()
		}
		.property instance class System.Activities.Presentation.Model.ModelItem ModelItem()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.ActivityDelegateInfo::get_ModelItem()
		}
		.property instance string PropertyName()
		{
			.get instance string System.Activities.Presentation.ActivityDelegateInfo::get_PropertyName()
		}
	}
	.class private ActivityDelegateInfoPresenter
		extends [PresentationFramework]System.Windows.Controls.UserControl
		implements [System.Xaml]System.Windows.Markup.IComponentConnector
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.ActivityDelegateInfo get_DelegateInfo()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_DelegateInfo(class System.Activities.Presentation.ActivityDelegateInfo 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void InitializeComponent()
		{
			ret
		}
		.method assembly hidebysig 
			instance class [mscorlib]System.Delegate _CreateDelegate(class [mscorlib]System.Type delegateType, string 'handler')
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Windows.Markup.IComponentConnector.Connect(int32 connectionId, object target)
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.override [System.Xaml]System.Windows.Markup.IComponentConnector::Connect
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty DelegateInfoProperty
		.field assembly class System.Activities.Presentation.ActivityDelegatePresenter activityDelegatePresenter
		.field assembly class System.Activities.Presentation.ActivityDelegateInfoPresenter root
		.property instance class System.Activities.Presentation.ActivityDelegateInfo DelegateInfo()
		{
			.get instance class System.Activities.Presentation.ActivityDelegateInfo System.Activities.Presentation.ActivityDelegateInfoPresenter::get_DelegateInfo()
			.set instance void System.Activities.Presentation.ActivityDelegateInfoPresenter::set_DelegateInfo(class System.Activities.Presentation.ActivityDelegateInfo)
		}
	}
	.class private ActivityDelegatePresenter
		extends [PresentationFramework]System.Windows.Controls.Control
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_Handler()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Handler(class System.Activities.Presentation.Model.ModelItem 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_ActivityDelegate()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ActivityDelegate(class System.Activities.Presentation.Model.ModelItem 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.IActivityDelegateFactory get_Factory()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Factory(class System.Activities.Presentation.IActivityDelegateFactory 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.Model.ModelItem> get_Arguments()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Arguments(class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.Model.ModelItem> 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.EditingContext get_EditingContext()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_EditingContext(class System.Activities.Presentation.EditingContext 'value')
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void ReportError(string message, string details)
		{
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ActivityDelegateProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ArgumentsProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty EditingContextProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty FactoryProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty HandlerProperty
		.property instance class System.Activities.Presentation.Model.ModelItem ActivityDelegate()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.ActivityDelegatePresenter::get_ActivityDelegate()
			.set instance void System.Activities.Presentation.ActivityDelegatePresenter::set_ActivityDelegate(class System.Activities.Presentation.Model.ModelItem)
		}
		.property instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.Model.ModelItem> Arguments()
		{
			.get instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.Model.ModelItem> System.Activities.Presentation.ActivityDelegatePresenter::get_Arguments()
			.set instance void System.Activities.Presentation.ActivityDelegatePresenter::set_Arguments(class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.Model.ModelItem>)
		}
		.property instance class System.Activities.Presentation.EditingContext EditingContext()
		{
			.get instance class System.Activities.Presentation.EditingContext System.Activities.Presentation.ActivityDelegatePresenter::get_EditingContext()
			.set instance void System.Activities.Presentation.ActivityDelegatePresenter::set_EditingContext(class System.Activities.Presentation.EditingContext)
		}
		.property instance class System.Activities.Presentation.IActivityDelegateFactory Factory()
		{
			.get instance class System.Activities.Presentation.IActivityDelegateFactory System.Activities.Presentation.ActivityDelegatePresenter::get_Factory()
			.set instance void System.Activities.Presentation.ActivityDelegatePresenter::set_Factory(class System.Activities.Presentation.IActivityDelegateFactory)
		}
		.property instance class System.Activities.Presentation.Model.ModelItem Handler()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.ActivityDelegatePresenter::get_Handler()
			.set instance void System.Activities.Presentation.ActivityDelegatePresenter::set_Handler(class System.Activities.Presentation.Model.ModelItem)
		}
	}
	.class private abstract sealed ActivityDelegateUtilities
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			class System.Activities.Presentation.Metadata.ActivityDelegateMetadata GetMetadata(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public static hidebysig 
			void FillDelegate(class [System.Activities]System.Activities.ActivityDelegate activityDelegate, class System.Activities.Presentation.Metadata.ActivityDelegateMetadata metadata)
		{
			ret
		}
		.method public static hidebysig 
			bool HasActivityDelegate(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public static hidebysig 
			class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.ActivityDelegateInfo> CreateActivityDelegateInfo(class System.Activities.Presentation.Model.ModelItem activity)
		{
			ret
		}
	}
	.class public ActivityDesigner
		extends System.Activities.Presentation.WorkflowViewElement
	{
		.method public hidebysig specialname 
			instance class [PresentationCore]System.Windows.Media.DrawingBrush get_Icon()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Icon(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.ActivityDelegateInfo> get_ActivityDelegates()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_ActivityDelegates(class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.ActivityDelegateInfo> 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance bool get_HasActivityDelegates()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_HasActivityDelegates(bool 'value')
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnModelItemChanged(object newItem)
		{
			ret
		}
		.method family virtual hidebysig 
			instance string GetAutomationIdMemberName()
		{
			ret
		}
		.method famorassem virtual hidebysig 
			instance string GetAutomationItemStatus()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void OnApplyTemplate()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnPreviewMouseDown(class [PresentationCore]System.Windows.Input.MouseButtonEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnMouseUp(class [PresentationCore]System.Windows.Input.MouseButtonEventArgs e)
		{
			ret
		}
		.method assembly hidebysig 
			instance class [PresentationCore]System.Windows.Media.DrawingBrush GetDefaultIcon()
		{
			ret
		}
		.method famorassem virtual hidebysig 
			instance void OnEditAnnotation()
		{
			ret
		}
		.field static assembly initonly class [WindowsBase]System.Windows.DependencyProperty ActivityDelegatesProperty
		.field static assembly initonly class [WindowsBase]System.Windows.DependencyProperty HasActivityDelegatesProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty IconProperty
		.property instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.ActivityDelegateInfo> ActivityDelegates()
		{
			.get instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.ActivityDelegateInfo> System.Activities.Presentation.ActivityDesigner::get_ActivityDelegates()
			.set instance void System.Activities.Presentation.ActivityDesigner::set_ActivityDelegates(class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.ActivityDelegateInfo>)
		}
		.property instance bool HasActivityDelegates()
		{
			.get instance bool System.Activities.Presentation.ActivityDesigner::get_HasActivityDelegates()
			.set instance void System.Activities.Presentation.ActivityDesigner::set_HasActivityDelegates(bool)
		}
		.property instance class [PresentationCore]System.Windows.Media.DrawingBrush Icon()
		{
			.get instance class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.ActivityDesigner::get_Icon()
			.set instance void System.Activities.Presentation.ActivityDesigner::set_Icon(class [PresentationCore]System.Windows.Media.DrawingBrush)
		}
	}
	.class public sealed ActivityDesignerOptionsAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = { int32(132) }
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_AllowDrillIn()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_AllowDrillIn(bool 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance bool get_AlwaysCollapseChildren()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_AlwaysCollapseChildren(bool 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Func`2'<class System.Activities.Presentation.Model.ModelItem,class [PresentationCore]System.Windows.Media.DrawingBrush> get_OutlineViewIconProvider()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_OutlineViewIconProvider(class [mscorlib]'System.Func`2'<class System.Activities.Presentation.Model.ModelItem,class [PresentationCore]System.Windows.Media.DrawingBrush> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.property instance bool AllowDrillIn()
		{
			.get instance bool System.Activities.Presentation.ActivityDesignerOptionsAttribute::get_AllowDrillIn()
			.set instance void System.Activities.Presentation.ActivityDesignerOptionsAttribute::set_AllowDrillIn(bool)
		}
		.property instance bool AlwaysCollapseChildren()
		{
			.get instance bool System.Activities.Presentation.ActivityDesignerOptionsAttribute::get_AlwaysCollapseChildren()
			.set instance void System.Activities.Presentation.ActivityDesignerOptionsAttribute::set_AlwaysCollapseChildren(bool)
		}
		.property instance class [mscorlib]'System.Func`2'<class System.Activities.Presentation.Model.ModelItem,class [PresentationCore]System.Windows.Media.DrawingBrush> OutlineViewIconProvider()
		{
			.get instance class [mscorlib]'System.Func`2'<class System.Activities.Presentation.Model.ModelItem,class [PresentationCore]System.Windows.Media.DrawingBrush> System.Activities.Presentation.ActivityDesignerOptionsAttribute::get_OutlineViewIconProvider()
			.set instance void System.Activities.Presentation.ActivityDesignerOptionsAttribute::set_OutlineViewIconProvider(class [mscorlib]'System.Func`2'<class System.Activities.Presentation.Model.ModelItem,class [PresentationCore]System.Windows.Media.DrawingBrush>)
		}
	}
	.class private abstract sealed ActivityTemplateFactoryExtension
		extends [mscorlib]System.Object
	{
		.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
		.method public static hidebysig 
			bool IsActivityTemplateFactory(class [mscorlib]System.Type 'type')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			bool TryGetActivityTemplateFactory(class [mscorlib]System.Type 'type', [out] class [mscorlib]System.Type& argumentType)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
	}
	.class public ArgumentAccessor
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Func`2'<class [System.Activities]System.Activities.Activity,class [System.Activities]System.Activities.Argument> get_Getter()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_Getter(class [mscorlib]'System.Func`2'<class [System.Activities]System.Activities.Activity,class [System.Activities]System.Activities.Argument> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Action`2'<class [System.Activities]System.Activities.Activity,class [System.Activities]System.Activities.Argument> get_Setter()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_Setter(class [mscorlib]'System.Action`2'<class [System.Activities]System.Activities.Activity,class [System.Activities]System.Activities.Argument> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class [mscorlib]'System.Func`2'<class [System.Activities]System.Activities.Activity,class [System.Activities]System.Activities.Argument> Getter()
		{
			.get instance class [mscorlib]'System.Func`2'<class [System.Activities]System.Activities.Activity,class [System.Activities]System.Activities.Argument> System.Activities.Presentation.ArgumentAccessor::get_Getter()
			.set instance void System.Activities.Presentation.ArgumentAccessor::set_Getter(class [mscorlib]'System.Func`2'<class [System.Activities]System.Activities.Activity,class [System.Activities]System.Activities.Argument>)
		}
		.property instance class [mscorlib]'System.Action`2'<class [System.Activities]System.Activities.Activity,class [System.Activities]System.Activities.Argument> Setter()
		{
			.get instance class [mscorlib]'System.Action`2'<class [System.Activities]System.Activities.Activity,class [System.Activities]System.Activities.Argument> System.Activities.Presentation.ArgumentAccessor::get_Setter()
			.set instance void System.Activities.Presentation.ArgumentAccessor::set_Setter(class [mscorlib]'System.Action`2'<class [System.Activities]System.Activities.Activity,class [System.Activities]System.Activities.Argument>)
		}
	}
	.class private AutoWrapEventArgs
		extends [mscorlib]System.EventArgs
	{
		.method public hidebysig specialname 
			instance class [System.Activities]System.Activities.Activity get_ExistingActivity()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_ExistingActivity(class [System.Activities]System.Activities.Activity 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.Activities.Presentation.InsertionPosition get_InsertionPosition()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_InsertionPosition(valuetype System.Activities.Presentation.InsertionPosition 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.List`1'<class [System.Activities]System.Activities.Activity> get_ActivitiesToBeInserted()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_ActivitiesToBeInserted(class [mscorlib]'System.Collections.Generic.List`1'<class [System.Activities]System.Activities.Activity> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class [mscorlib]'System.Collections.Generic.List`1'<class [System.Activities]System.Activities.Activity> ActivitiesToBeInserted()
		{
			.get instance class [mscorlib]'System.Collections.Generic.List`1'<class [System.Activities]System.Activities.Activity> System.Activities.Presentation.AutoWrapEventArgs::get_ActivitiesToBeInserted()
			.set instance void System.Activities.Presentation.AutoWrapEventArgs::set_ActivitiesToBeInserted(class [mscorlib]'System.Collections.Generic.List`1'<class [System.Activities]System.Activities.Activity>)
		}
		.property instance class [System.Activities]System.Activities.Activity ExistingActivity()
		{
			.get instance class [System.Activities]System.Activities.Activity System.Activities.Presentation.AutoWrapEventArgs::get_ExistingActivity()
			.set instance void System.Activities.Presentation.AutoWrapEventArgs::set_ExistingActivity(class [System.Activities]System.Activities.Activity)
		}
		.property instance valuetype System.Activities.Presentation.InsertionPosition InsertionPosition()
		{
			.get instance valuetype System.Activities.Presentation.InsertionPosition System.Activities.Presentation.AutoWrapEventArgs::get_InsertionPosition()
			.set instance void System.Activities.Presentation.AutoWrapEventArgs::set_InsertionPosition(valuetype System.Activities.Presentation.InsertionPosition)
		}
	}
	.class private sealed BookmarkUndoUnit
		extends System.Activities.Presentation.UndoUnit
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.EditingContext context, class System.Activities.Presentation.Model.ModelTreeManager modelTreeManager)
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.UndoUnit> get_DoList()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.UndoUnit> get_RedoList()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public virtual hidebysig 
			instance void Redo()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Undo()
		{
			ret
		}
		.property instance class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.UndoUnit> DoList()
		{
			.get instance class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.UndoUnit> System.Activities.Presentation.BookmarkUndoUnit::get_DoList()
		}
		.property instance class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.UndoUnit> RedoList()
		{
			.get instance class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.UndoUnit> System.Activities.Presentation.BookmarkUndoUnit::get_RedoList()
		}
	}
	.class public CachedResourceDictionaryExtension
		extends [System.Xaml]System.Windows.Markup.MarkupExtension
	{
		.method public hidebysig specialname 
			instance class [System]System.Uri get_Source()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_Source(class [System]System.Uri 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public virtual hidebysig 
			instance object ProvideValue(class [mscorlib]System.IServiceProvider serviceProvider)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class [System]System.Uri Source()
		{
			.get instance class [System]System.Uri System.Activities.Presentation.CachedResourceDictionaryExtension::get_Source()
			.set instance void System.Activities.Presentation.CachedResourceDictionaryExtension::set_Source(class [System]System.Uri)
		}
	}
	.class public serializable ClipboardData
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.List`1'<object> get_Data()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_Data(class [mscorlib]'System.Collections.Generic.List`1'<object> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.List`1'<object> get_Metadata()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_Metadata(class [mscorlib]'System.Collections.Generic.List`1'<object> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_Version()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_Version(string 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class [mscorlib]'System.Collections.Generic.List`1'<object> Data()
		{
			.get instance class [mscorlib]'System.Collections.Generic.List`1'<object> System.Activities.Presentation.ClipboardData::get_Data()
			.set instance void System.Activities.Presentation.ClipboardData::set_Data(class [mscorlib]'System.Collections.Generic.List`1'<object>)
		}
		.property instance class [mscorlib]'System.Collections.Generic.List`1'<object> Metadata()
		{
			.get instance class [mscorlib]'System.Collections.Generic.List`1'<object> System.Activities.Presentation.ClipboardData::get_Metadata()
			.set instance void System.Activities.Presentation.ClipboardData::set_Metadata(class [mscorlib]'System.Collections.Generic.List`1'<object>)
		}
		.property instance string Version()
		{
			.get instance string System.Activities.Presentation.ClipboardData::get_Version()
			.set instance void System.Activities.Presentation.ClipboardData::set_Version(string)
		}
	}
	.class public abstract ContextItem
		extends [mscorlib]System.Object
	{
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class [mscorlib]System.Type get_ItemType()
		{
		}
		.method family virtual hidebysig newslot 
			instance void OnItemChanged(class System.Activities.Presentation.EditingContext context, class System.Activities.Presentation.ContextItem previousItem)
		{
			ret
		}
		.method assembly hidebysig 
			instance void InvokeOnItemChanged(class System.Activities.Presentation.EditingContext context, class System.Activities.Presentation.ContextItem previousItem)
		{
			ret
		}
		.property instance class [mscorlib]System.Type ItemType()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.ContextItem::get_ItemType()
		}
	}
	.class public abstract ContextItemManager
		extends [mscorlib]System.Object
		implements class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.ContextItem>, [mscorlib]System.Collections.IEnumerable
	{
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig newslot abstract 
			instance bool Contains(class [mscorlib]System.Type itemType)
		{
		}
		.method public hidebysig 
			instance bool Contains<(System.Activities.Presentation.ContextItem) 'TItemType'>()
		{
			ret
		}
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]'System.Collections.Generic.IEnumerator`1'<class System.Activities.Presentation.ContextItem> GetEnumerator()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.Activities.Presentation.ContextItem GetValue(class [mscorlib]System.Type itemType)
		{
		}
		.method public hidebysig 
			instance !!0 GetValue<(System.Activities.Presentation.ContextItem) 'TItemType'>()
		{
			ret
		}
		.method family static hidebysig 
			void NotifyItemChanged(class System.Activities.Presentation.EditingContext context, class System.Activities.Presentation.ContextItem item, class System.Activities.Presentation.ContextItem previousItem)
		{
			ret
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetValue(class System.Activities.Presentation.ContextItem 'value')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Subscribe(class [mscorlib]System.Type contextItemType, class System.Activities.Presentation.SubscribeContextCallback callback)
		{
		}
		.method public hidebysig 
			instance void Subscribe<(System.Activities.Presentation.ContextItem) 'TContextItemType'>(class 'System.Activities.Presentation.SubscribeContextCallback`1'<!!0> callback)
		{
			ret
		}
		.method public hidebysig 
			instance void Unsubscribe<(System.Activities.Presentation.ContextItem) 'TContextItemType'>(class 'System.Activities.Presentation.SubscribeContextCallback`1'<!!0> callback)
		{
			ret
		}
		.method public virtual hidebysig newslot abstract 
			instance void Unsubscribe(class [mscorlib]System.Type contextItemType, class System.Activities.Presentation.SubscribeContextCallback callback)
		{
		}
		.method family static hidebysig 
			object GetTarget(class [mscorlib]System.Delegate callback)
		{
			ret
		}
		.method family static hidebysig 
			class [mscorlib]System.Delegate RemoveCallback(class [mscorlib]System.Delegate existing, class [mscorlib]System.Delegate toRemove)
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			.override [mscorlib]System.Collections.IEnumerable::GetEnumerator
			ret
		}
	}
	.class private abstract sealed ContextMenuUtilities
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			void OnAddAnnotationCommandCanExecute(class [PresentationCore]System.Windows.Input.CanExecuteRoutedEventArgs e, class System.Activities.Presentation.EditingContext editingContext)
		{
			ret
		}
		.method public static hidebysig 
			void OnAddAnnotationCommandCanExecute(class [PresentationCore]System.Windows.Input.CanExecuteRoutedEventArgs e, class System.Activities.Presentation.EditingContext editingContext, class [PresentationFramework]System.Windows.Controls.DataGrid dataGrid)
		{
			ret
		}
		.method public static hidebysig 
			void OnAddAnnotationCommandCanExecute(class [PresentationCore]System.Windows.Input.CanExecuteRoutedEventArgs e, class System.Activities.Presentation.EditingContext editingContext, class System.Activities.Presentation.Model.ModelItem modelItem)
		{
			ret
		}
		.method public static hidebysig 
			void OnDeleteAnnotationCommandCanExecute(class [PresentationCore]System.Windows.Input.CanExecuteRoutedEventArgs e, class System.Activities.Presentation.EditingContext editingContext)
		{
			ret
		}
		.method public static hidebysig 
			void OnDeleteAnnotationCommandCanExecute(class [PresentationCore]System.Windows.Input.CanExecuteRoutedEventArgs e, class System.Activities.Presentation.EditingContext editingContext, class [PresentationFramework]System.Windows.Controls.DataGrid dataGrid)
		{
			ret
		}
		.method public static hidebysig 
			void OnDeleteAnnotationCommandCanExecute(class [PresentationCore]System.Windows.Input.CanExecuteRoutedEventArgs e, class System.Activities.Presentation.EditingContext editingContext, class System.Activities.Presentation.Model.ModelItem modelItem)
		{
			ret
		}
		.method public static hidebysig 
			void OnDeleteAllAnnotationCommandCanExecute(class [PresentationCore]System.Windows.Input.CanExecuteRoutedEventArgs e, class System.Activities.Presentation.EditingContext editingContext)
		{
			ret
		}
		.method public static hidebysig 
			void OnDeleteCommandCanExecute(class [PresentationCore]System.Windows.Input.CanExecuteRoutedEventArgs e, class [PresentationFramework]System.Windows.Controls.DataGrid dataGrid)
		{
			ret
		}
		.method public static hidebysig 
			void OnAddAnnotationCommandExecuted(class [PresentationCore]System.Windows.Input.ExecutedRoutedEventArgs e, class System.Activities.Presentation.Model.ModelItem modelItem)
		{
			ret
		}
		.method public static hidebysig 
			void OnEditAnnotationCommandExecuted(class [PresentationCore]System.Windows.Input.ExecutedRoutedEventArgs e, class System.Activities.Presentation.Model.ModelItem modelItem)
		{
			ret
		}
		.method public static hidebysig 
			void OnDeleteAnnotationCommandExecuted(class [PresentationCore]System.Windows.Input.ExecutedRoutedEventArgs e, class System.Activities.Presentation.Model.ModelItem modelItem)
		{
			ret
		}
		.method public static hidebysig 
			void OnAnnotationMenuLoaded(class System.Activities.Presentation.EditingContext editingContext, class [PresentationFramework]System.Windows.Controls.Control control, class [PresentationCore]System.Windows.RoutedEventArgs e)
		{
			ret
		}
	}
	.class public abstract sealed CutCopyPasteHelper
		extends [mscorlib]System.Object
	{
		.method assembly static hidebysig 
			void AddDisallowedTypeForCopy(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method assembly static hidebysig 
			void RegisterWithParentViewElement(class System.Activities.Presentation.ICompositeView container)
		{
			ret
		}
		.method assembly static hidebysig 
			class System.Activities.Presentation.WorkflowViewElement GetParentViewElement(class [WindowsBase]System.Windows.DependencyObject obj)
		{
			ret
		}
		.method assembly static hidebysig 
			class [mscorlib]'System.Collections.Generic.IList`1'<object> SortFromMetaData(class [mscorlib]'System.Collections.Generic.IList`1'<object> itemsToPaste, class [mscorlib]'System.Collections.Generic.List`1'<object> metaData)
		{
			ret
		}
		.method assembly static hidebysig 
			class [mscorlib]'System.Collections.Generic.IList`1'<object> SortFromMetaDataOnly(class [mscorlib]'System.Collections.Generic.List`1'<object> metaData)
		{
			ret
		}
		.method public static hidebysig 
			void DoCut(class System.Activities.Presentation.EditingContext context)
		{
			ret
		}
		.method assembly static hidebysig 
			void DoCut(class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.ModelItem> modelItemsToCut, class System.Activities.Presentation.EditingContext context)
		{
			ret
		}
		.method public static hidebysig 
			void DoCopy(class System.Activities.Presentation.EditingContext context)
		{
			ret
		}
		.method assembly static hidebysig 
			class [System.Core]'System.Collections.Generic.HashSet`1'<class System.Activities.Presentation.Model.ModelItem> GetSelectableParentModelItems(class System.Activities.Presentation.Model.ModelItem modelItem)
		{
			ret
		}
		.method public static hidebysig 
			void DoPaste(class System.Activities.Presentation.EditingContext context)
		{
			ret
		}
		.method assembly static hidebysig 
			void DoPaste(class System.Activities.Presentation.EditingContext context, valuetype [WindowsBase]System.Windows.Point pastePoint, class System.Activities.Presentation.WorkflowViewElement pastePointReference)
		{
			ret
		}
		.method assembly static hidebysig 
			void PutCallbackOnClipBoard(class [mscorlib]'System.Func`3'<class System.Activities.Presentation.Model.ModelItem,object,object> callbackMethod, class [mscorlib]System.Type callbackResultType, object context)
		{
			ret
		}
		.method public static hidebysig 
			bool CanCopy(class System.Activities.Presentation.EditingContext context)
		{
			ret
		}
		.method public static hidebysig 
			bool CanCut(class System.Activities.Presentation.EditingContext context)
		{
			ret
		}
		.method public static hidebysig 
			bool CanPaste(class System.Activities.Presentation.EditingContext context)
		{
			ret
		}
		.field static assembly initonly class [WindowsBase]System.Windows.DependencyProperty ChildContainersProperty
		.field static assembly literal string WorkflowClipboardFormat = "WorkflowXamlFormat"
		.field static assembly literal string WorkflowClipboardFormat_TargetFramework = "WorkflowXamlFormat_TargetFramework"
	}
	.class private DefaultCommandExtensionCallback
		extends [mscorlib]System.Object
		implements System.Activities.Presentation.Hosting.IWorkflowCommandExtensionCallback
	{
		.class nested assembly sealed ChordKeyGesture
			extends [PresentationCore]System.Windows.Input.KeyGesture
		{
			.method assembly hidebysig specialname 
				instance class System.Activities.Presentation.View.DesignerView get_Owner()
			{
				ret
			}
			.method assembly hidebysig specialname 
				instance void set_Owner(class System.Activities.Presentation.View.DesignerView 'value')
			{
				ret
			}
			.method public hidebysig specialname 
				instance void .ctor(valuetype [WindowsBase]System.Windows.Input.Key key, valuetype [WindowsBase]System.Windows.Input.Key chordKey)
			{
				ret
			}
			.method public hidebysig 
				instance void ResetChordMode()
			{
				ret
			}
			.method public virtual hidebysig 
				instance bool Matches(object targetElement, class [PresentationCore]System.Windows.Input.InputEventArgs inputEventArgs)
			{
				ret
			}
			.property instance class System.Activities.Presentation.View.DesignerView Owner()
			{
				.get instance class System.Activities.Presentation.View.DesignerView System.Activities.Presentation.DefaultCommandExtensionCallback/ChordKeyGesture::get_Owner()
				.set instance void System.Activities.Presentation.DefaultCommandExtensionCallback/ChordKeyGesture::set_Owner(class System.Activities.Presentation.View.DesignerView)
			}
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void OnWorkflowCommandLoaded(class System.Activities.Presentation.Hosting.CommandInfo commandInfo)
		{
			ret
		}
		.method family hidebysig 
			instance bool ContainsGesture(class [PresentationCore]System.Windows.Input.RoutedCommand cmd, class [PresentationCore]System.Windows.Input.KeyGesture gesture)
		{
			ret
		}
	}
	.class public sealed DefaultTypeArgumentAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = { int32(4) }
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Type get_Type()
		{
			ret
		}
		.property instance class [mscorlib]System.Type Type()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.DefaultTypeArgumentAttribute::get_Type()
		}
	}
	.class private abstract sealed DeleteHelper
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			bool CanDelete(class System.Activities.Presentation.EditingContext context)
		{
			ret
		}
		.method public static hidebysig 
			void Delete(class System.Activities.Presentation.EditingContext context)
		{
			ret
		}
	}
	.class private abstract DesignObjectWrapper
		extends [mscorlib]System.Object
		implements [System]System.ComponentModel.ICustomTypeDescriptor, [System]System.ComponentModel.INotifyPropertyChanged, [mscorlib]System.IDisposable
	{
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.Model.ModelItem reflectedObject)
		{
			ret
		}
		.method assembly hidebysig 
			instance void Initialize(class System.Activities.Presentation.Model.ModelItem reflectedObject)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_ReflectedObject()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.EditingContext get_Context()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method family hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelTreeManager get_ModelTreeManager()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_Content()
		{
			ret
		}
		.method family hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.IDictionary`2'<string,class System.Activities.Presentation.PropertyEditing.PropertyValueEditor> get_CustomValueEditors()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_HasErrors()
		{
			ret
		}
		.method family virtual hidebysig newslot abstract specialname 
			instance string get_AutomationId()
		{
		}
		.method public final virtual hidebysig newslot 
			instance class [System]System.ComponentModel.AttributeCollection GetAttributes()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance string GetClassName()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance string GetComponentName()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [System]System.ComponentModel.TypeConverter GetConverter()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [System]System.ComponentModel.EventDescriptor GetDefaultEvent()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [System]System.ComponentModel.PropertyDescriptor GetDefaultProperty()
		{
			ret
		}
		.method public hidebysig 
			instance string GetValidationErrors(class [mscorlib]'System.Collections.Generic.IList`1'<string> invalidProperties)
		{
			ret
		}
		.method public hidebysig 
			instance string GetValidationErrors()
		{
			ret
		}
		.method public hidebysig 
			instance void ClearValidationErrors()
		{
			ret
		}
		.method public hidebysig 
			instance void ClearValidationErrors(class [mscorlib]'System.Collections.Generic.IEnumerable`1'<string> properties)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object GetEditor(class [mscorlib]System.Type editorBaseType)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [System]System.ComponentModel.EventDescriptorCollection GetEvents(class [mscorlib]System.Attribute[] attributes)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [System]System.ComponentModel.EventDescriptorCollection GetEvents()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [System]System.ComponentModel.PropertyDescriptorCollection GetProperties(class [mscorlib]System.Attribute[] attributes)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [System]System.ComponentModel.PropertyDescriptorCollection GetProperties()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object GetPropertyOwner(class [System]System.ComponentModel.PropertyDescriptor pd)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance bool IsPropertyValid(string propertyName)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void Dispose()
		{
			ret
		}
		.method assembly hidebysig 
			instance class System.Activities.Presentation.PropertyEditing.PropertyValueEditor GetDynamicPropertyValueEditor(string propertyName)
		{
			ret
		}
		.method assembly hidebysig 
			instance class [mscorlib]System.Type GetDynamicPropertyValueEditorType(string propertyName)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance class [mscorlib]System.Type OnGetDynamicPropertyValueEditorType(string propertyName)
		{
			ret
		}
		.method assembly hidebysig 
			instance void NotifyPropertyChanged(string propertyName)
		{
			ret
		}
		.method family hidebysig 
			instance void RaisePropertyChangedEvent(string propertyName)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnPropertyChanged(string propertyName)
		{
			ret
		}
		.method family hidebysig specialname 
			instance bool get_IsUndoRedoInProgress()
		{
			ret
		}
		.method family hidebysig 
			instance valuetype [mscorlib]System.DateTime GetTimestamp()
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnReflectedObjectPropertyChanged(string propertyName)
		{
			ret
		}
		.field static family initonly string AutomationIdProperty
		.field static family initonly string ContentProperty
		.field static family initonly string HasErrorsProperty
		.field static famorassem initonly string TimestampProperty
		.field static family initonly string ValidationErrorSuffix
		.event [System]System.ComponentModel.PropertyChangedEventHandler PropertyChanged
		{
			.addon instance void System.Activities.Presentation.DesignObjectWrapper::add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
			.removeon instance void System.Activities.Presentation.DesignObjectWrapper::remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
		}
		.property instance string AutomationId()
		{
			.get instance string System.Activities.Presentation.DesignObjectWrapper::get_AutomationId()
		}
		.property instance class System.Activities.Presentation.Model.ModelItem Content()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.DesignObjectWrapper::get_Content()
		}
		.property instance class System.Activities.Presentation.EditingContext Context()
		{
			.get instance class System.Activities.Presentation.EditingContext System.Activities.Presentation.DesignObjectWrapper::get_Context()
		}
		.property instance class [mscorlib]'System.Collections.Generic.IDictionary`2'<string,class System.Activities.Presentation.PropertyEditing.PropertyValueEditor> CustomValueEditors()
		{
			.get instance class [mscorlib]'System.Collections.Generic.IDictionary`2'<string,class System.Activities.Presentation.PropertyEditing.PropertyValueEditor> System.Activities.Presentation.DesignObjectWrapper::get_CustomValueEditors()
		}
		.property instance bool HasErrors()
		{
			.get instance bool System.Activities.Presentation.DesignObjectWrapper::get_HasErrors()
		}
		.property instance bool IsUndoRedoInProgress()
		{
			.get instance bool System.Activities.Presentation.DesignObjectWrapper::get_IsUndoRedoInProgress()
		}
		.property instance class System.Activities.Presentation.Model.ModelTreeManager ModelTreeManager()
		{
			.get instance class System.Activities.Presentation.Model.ModelTreeManager System.Activities.Presentation.DesignObjectWrapper::get_ModelTreeManager()
		}
		.property instance class System.Activities.Presentation.Model.ModelItem ReflectedObject()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.DesignObjectWrapper::get_ReflectedObject()
		}
	}
	.class private sealed DesignObjectWrapperDynamicPropertyEditor
		extends System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void ShowDialog(class System.Activities.Presentation.PropertyEditing.PropertyValue propertyValue, class [PresentationCore]System.Windows.IInputElement commandSource)
		{
			ret
		}
	}
	.class private abstract DesignTimeValidationFeature
		extends System.Activities.Presentation.Feature
	{
		.method public virtual hidebysig 
			instance void Initialize(class System.Activities.Presentation.EditingContext context, class [mscorlib]System.Type modelType)
		{
			ret
		}
		.method family virtual hidebysig newslot abstract specialname 
			instance class [mscorlib]System.Type get_ApplyTo()
		{
		}
		.method family virtual hidebysig newslot abstract specialname 
			instance class [mscorlib]'System.Collections.Generic.IList`1'<class [System.Activities]System.Activities.Validation.Constraint> get_DesignTimeConstraints()
		{
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class [mscorlib]System.Type ApplyTo()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.DesignTimeValidationFeature::get_ApplyTo()
		}
		.property instance class [mscorlib]'System.Collections.Generic.IList`1'<class [System.Activities]System.Activities.Validation.Constraint> DesignTimeConstraints()
		{
			.get instance class [mscorlib]'System.Collections.Generic.IList`1'<class [System.Activities]System.Activities.Validation.Constraint> System.Activities.Presentation.DesignTimeValidationFeature::get_DesignTimeConstraints()
		}
	}
	.class public sealed DesignerConfigurationService
		extends [mscorlib]System.Object
	{
		.method assembly hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_AnnotationEnabled()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_AnnotationEnabled(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_AutoConnectEnabled()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_AutoConnectEnabled(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_AutoSplitEnabled()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_AutoSplitEnabled(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_AutoSurroundWithSequenceEnabled()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_AutoSurroundWithSequenceEnabled(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_BackgroundValidationEnabled()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackgroundValidationEnabled(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_LoadingFromUntrustedSourceEnabled()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LoadingFromUntrustedSourceEnabled(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_MultipleItemsContextMenuEnabled()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MultipleItemsContextMenuEnabled(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_MultipleItemsDragDropEnabled()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MultipleItemsDragDropEnabled(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_NamespaceConversionEnabled()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_NamespaceConversionEnabled(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_PanModeEnabled()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_PanModeEnabled(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_RubberBandSelectionEnabled()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_RubberBandSelectionEnabled(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System]System.Runtime.Versioning.FrameworkName get_TargetFrameworkName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_TargetFrameworkName(class [System]System.Runtime.Versioning.FrameworkName 'value')
		{
			ret
		}
		.method assembly static hidebysig specialname 
			class [System]System.Runtime.Versioning.FrameworkName get_DefaultTargetFrameworkName()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance valuetype System.Activities.Presentation.WorkflowDesignerHostId get_WorkflowDesignerHostId()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_WorkflowDesignerHostId(valuetype System.Activities.Presentation.WorkflowDesignerHostId 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance bool get_IsWorkflowLoaded()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_IsWorkflowLoaded(bool 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig 
			instance void ApplyDefaultPreference()
		{
			ret
		}
		.method assembly hidebysig 
			instance void SetDefaultOfLoadingFromUntrustedSourceEnabled()
		{
			ret
		}
		.method assembly hidebysig 
			instance void Validate()
		{
			ret
		}
		.property instance bool AnnotationEnabled()
		{
			.get instance bool System.Activities.Presentation.DesignerConfigurationService::get_AnnotationEnabled()
			.set instance void System.Activities.Presentation.DesignerConfigurationService::set_AnnotationEnabled(bool)
		}
		.property instance bool AutoConnectEnabled()
		{
			.get instance bool System.Activities.Presentation.DesignerConfigurationService::get_AutoConnectEnabled()
			.set instance void System.Activities.Presentation.DesignerConfigurationService::set_AutoConnectEnabled(bool)
		}
		.property instance bool AutoSplitEnabled()
		{
			.get instance bool System.Activities.Presentation.DesignerConfigurationService::get_AutoSplitEnabled()
			.set instance void System.Activities.Presentation.DesignerConfigurationService::set_AutoSplitEnabled(bool)
		}
		.property instance bool AutoSurroundWithSequenceEnabled()
		{
			.get instance bool System.Activities.Presentation.DesignerConfigurationService::get_AutoSurroundWithSequenceEnabled()
			.set instance void System.Activities.Presentation.DesignerConfigurationService::set_AutoSurroundWithSequenceEnabled(bool)
		}
		.property instance bool BackgroundValidationEnabled()
		{
			.get instance bool System.Activities.Presentation.DesignerConfigurationService::get_BackgroundValidationEnabled()
			.set instance void System.Activities.Presentation.DesignerConfigurationService::set_BackgroundValidationEnabled(bool)
		}
		.property class [System]System.Runtime.Versioning.FrameworkName DefaultTargetFrameworkName()
		{
			.get class [System]System.Runtime.Versioning.FrameworkName System.Activities.Presentation.DesignerConfigurationService::get_DefaultTargetFrameworkName()
		}
		.property instance bool IsWorkflowLoaded()
		{
			.get instance bool System.Activities.Presentation.DesignerConfigurationService::get_IsWorkflowLoaded()
			.set instance void System.Activities.Presentation.DesignerConfigurationService::set_IsWorkflowLoaded(bool)
		}
		.property instance bool LoadingFromUntrustedSourceEnabled()
		{
			.get instance bool System.Activities.Presentation.DesignerConfigurationService::get_LoadingFromUntrustedSourceEnabled()
			.set instance void System.Activities.Presentation.DesignerConfigurationService::set_LoadingFromUntrustedSourceEnabled(bool)
		}
		.property instance bool MultipleItemsContextMenuEnabled()
		{
			.get instance bool System.Activities.Presentation.DesignerConfigurationService::get_MultipleItemsContextMenuEnabled()
			.set instance void System.Activities.Presentation.DesignerConfigurationService::set_MultipleItemsContextMenuEnabled(bool)
		}
		.property instance bool MultipleItemsDragDropEnabled()
		{
			.get instance bool System.Activities.Presentation.DesignerConfigurationService::get_MultipleItemsDragDropEnabled()
			.set instance void System.Activities.Presentation.DesignerConfigurationService::set_MultipleItemsDragDropEnabled(bool)
		}
		.property instance bool NamespaceConversionEnabled()
		{
			.get instance bool System.Activities.Presentation.DesignerConfigurationService::get_NamespaceConversionEnabled()
			.set instance void System.Activities.Presentation.DesignerConfigurationService::set_NamespaceConversionEnabled(bool)
		}
		.property instance bool PanModeEnabled()
		{
			.get instance bool System.Activities.Presentation.DesignerConfigurationService::get_PanModeEnabled()
			.set instance void System.Activities.Presentation.DesignerConfigurationService::set_PanModeEnabled(bool)
		}
		.property instance bool RubberBandSelectionEnabled()
		{
			.get instance bool System.Activities.Presentation.DesignerConfigurationService::get_RubberBandSelectionEnabled()
			.set instance void System.Activities.Presentation.DesignerConfigurationService::set_RubberBandSelectionEnabled(bool)
		}
		.property instance class [System]System.Runtime.Versioning.FrameworkName TargetFrameworkName()
		{
			.get instance class [System]System.Runtime.Versioning.FrameworkName System.Activities.Presentation.DesignerConfigurationService::get_TargetFrameworkName()
			.set instance void System.Activities.Presentation.DesignerConfigurationService::set_TargetFrameworkName(class [System]System.Runtime.Versioning.FrameworkName)
		}
		.property instance valuetype System.Activities.Presentation.WorkflowDesignerHostId WorkflowDesignerHostId()
		{
			.get instance valuetype System.Activities.Presentation.WorkflowDesignerHostId System.Activities.Presentation.DesignerConfigurationService::get_WorkflowDesignerHostId()
			.set instance void System.Activities.Presentation.DesignerConfigurationService::set_WorkflowDesignerHostId(valuetype System.Activities.Presentation.WorkflowDesignerHostId)
		}
	}
	.class private abstract sealed DesignerConfigurationServiceUtilities
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			bool IsAnnotationEnabled(class System.Activities.Presentation.EditingContext editingContext)
		{
			ret
		}
		.method public static hidebysig 
			bool IsBackgroundValidationEnabled(class System.Activities.Presentation.EditingContext editingContext)
		{
			ret
		}
	}
	.class private DesignerMetadata
		extends [mscorlib]System.Object
		implements System.Activities.Presentation.Metadata.IRegisterMetadata
	{
		.method public final virtual hidebysig newslot 
			instance void Register()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private DesignerPerfEventProvider
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig 
			instance void WorkflowDesignerApplicationIdleAfterLoad()
		{
			ret
		}
		.method public hidebysig 
			instance void WorkflowDesignerDeserializeEnd()
		{
			ret
		}
		.method public hidebysig 
			instance void WorkflowDesignerDeserializeStart()
		{
			ret
		}
		.method public hidebysig 
			instance void WorkflowDesignerDrop()
		{
			ret
		}
		.method public hidebysig 
			instance void WorkflowDesignerIdleAfterDrop()
		{
			ret
		}
		.method public hidebysig 
			instance void WorkflowDesignerLoadComplete()
		{
			ret
		}
		.method public hidebysig 
			instance void WorkflowDesignerLoadStart()
		{
			ret
		}
		.method public hidebysig 
			instance void WorkflowDesignerSerializeEnd()
		{
			ret
		}
		.method public hidebysig 
			instance void WorkflowDesignerSerializeStart()
		{
			ret
		}
		.method public hidebysig 
			instance void WorkflowDesignerExpressionEditorCompilationEnd()
		{
			ret
		}
		.method public hidebysig 
			instance void WorkflowDesignerExpressionEditorCompilationStart()
		{
			ret
		}
		.method public hidebysig 
			instance void WorkflowDesignerExpressionEditorLoaded()
		{
			ret
		}
		.method public hidebysig 
			instance void WorkflowDesignerExpressionEditorLoadStart()
		{
			ret
		}
		.method public hidebysig 
			instance void WorkflowDesignerValidationEnd()
		{
			ret
		}
		.method public hidebysig 
			instance void WorkflowDesignerValidationStart()
		{
			ret
		}
		.method public hidebysig 
			instance void FlowchartDesignerLoadEnd()
		{
			ret
		}
		.method public hidebysig 
			instance void FlowchartDesignerLoadStart()
		{
			ret
		}
		.method public hidebysig 
			instance void FreeFormPanelMeasureEnd()
		{
			ret
		}
		.method public hidebysig 
			instance void FreeFormPanelMeasureStart()
		{
			ret
		}
		.method public hidebysig 
			instance void WorkflowDesignerCopyStart()
		{
			ret
		}
		.method public hidebysig 
			instance void WorkflowDesignerCopyEnd()
		{
			ret
		}
		.method public hidebysig 
			instance void WorkflowDesignerPasteStart()
		{
			ret
		}
		.method public hidebysig 
			instance void WorkflowDesignerPasteEnd()
		{
			ret
		}
		.method public hidebysig 
			instance void DesignerTreeViewLoadChildrenStart()
		{
			ret
		}
		.method public hidebysig 
			instance void DesignerTreeViewLoadChildrenEnd()
		{
			ret
		}
		.method public hidebysig 
			instance void DesignerTreeViewUpdateStart()
		{
			ret
		}
		.method public hidebysig 
			instance void DesignerTreeViewUpdateEnd()
		{
			ret
		}
		.method public hidebysig 
			instance void DesignerTreeViewExpandStart()
		{
			ret
		}
		.method public hidebysig 
			instance void DesignerTreeViewExpandEnd()
		{
			ret
		}
		.method public hidebysig 
			instance void TypeBrowserApplicationIdleAfterShowDialog()
		{
			ret
		}
		.method public hidebysig 
			instance void TypeBrowserOkPressed()
		{
			ret
		}
		.method public hidebysig 
			instance void SelectionChangedStart()
		{
			ret
		}
		.method public hidebysig 
			instance void PropertyInspectorUpdatePropertyListStart()
		{
			ret
		}
		.method public hidebysig 
			instance void PropertyInspectorUpdatePropertyListEnd()
		{
			ret
		}
	}
	.class private sealed DesignerPerfEvents
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Activities.Presentation.DesignerPerfEvents DesignerTreeViewExpandEnd = int32(0x0000001C)
		.field static public literal valuetype System.Activities.Presentation.DesignerPerfEvents DesignerTreeViewExpandStart = int32(0x0000001B)
		.field static public literal valuetype System.Activities.Presentation.DesignerPerfEvents DesignerTreeViewLoadChildrenEnd = int32(0x00000018)
		.field static public literal valuetype System.Activities.Presentation.DesignerPerfEvents DesignerTreeViewLoadChildrenStart = int32(0x00000017)
		.field static public literal valuetype System.Activities.Presentation.DesignerPerfEvents DesignerTreeViewUpdateEnd = int32(0x0000001A)
		.field static public literal valuetype System.Activities.Presentation.DesignerPerfEvents DesignerTreeViewUpdateStart = int32(0x00000019)
		.field static public literal valuetype System.Activities.Presentation.DesignerPerfEvents FlowchartDesignerLoadEnd = int32(0x0000000F)
		.field static public literal valuetype System.Activities.Presentation.DesignerPerfEvents FlowchartDesignerLoadStart = int32(0x00000010)
		.field static public literal valuetype System.Activities.Presentation.DesignerPerfEvents FreeFormPanelMeasureEnd = int32(0x00000012)
		.field static public literal valuetype System.Activities.Presentation.DesignerPerfEvents FreeFormPanelMeasureStart = int32(0x00000011)
		.field static public literal valuetype System.Activities.Presentation.DesignerPerfEvents PropertyInspectorUpdatePropertyListEnd = int32(0x00000021)
		.field static public literal valuetype System.Activities.Presentation.DesignerPerfEvents PropertyInspectorUpdatePropertyListStart = int32(0x00000020)
		.field static public literal valuetype System.Activities.Presentation.DesignerPerfEvents SelectionChangedStart = int32(0x0000001F)
		.field static public literal valuetype System.Activities.Presentation.DesignerPerfEvents TypeBrowserApplicationIdleAfterShowDialog = int32(0x0000001D)
		.field static public literal valuetype System.Activities.Presentation.DesignerPerfEvents TypeBrowserOkPressed = int32(0x0000001E)
		.field static public literal valuetype System.Activities.Presentation.DesignerPerfEvents WorkflowDesignerApplicationIdleAfterLoad = int32(0x00000004)
		.field static public literal valuetype System.Activities.Presentation.DesignerPerfEvents WorkflowDesignerCopyEnd = int32(0x00000014)
		.field static public literal valuetype System.Activities.Presentation.DesignerPerfEvents WorkflowDesignerCopyStart = int32(0x00000013)
		.field static public literal valuetype System.Activities.Presentation.DesignerPerfEvents WorkflowDesignerDeserializeEnd = int32(0x00000003)
		.field static public literal valuetype System.Activities.Presentation.DesignerPerfEvents WorkflowDesignerDeserializeStart = int32(0x00000002)
		.field static public literal valuetype System.Activities.Presentation.DesignerPerfEvents WorkflowDesignerDrop = int32(0x00000007)
		.field static public literal valuetype System.Activities.Presentation.DesignerPerfEvents WorkflowDesignerExpressionEditorCompilationEnd = int32(0x0000000C)
		.field static public literal valuetype System.Activities.Presentation.DesignerPerfEvents WorkflowDesignerExpressionEditorCompilationStart = int32(0x0000000B)
		.field static public literal valuetype System.Activities.Presentation.DesignerPerfEvents WorkflowDesignerExpressionEditorLoadStart = int32(0x00000009)
		.field static public literal valuetype System.Activities.Presentation.DesignerPerfEvents WorkflowDesignerExpressionEditorLoaded = int32(0x0000000A)
		.field static public literal valuetype System.Activities.Presentation.DesignerPerfEvents WorkflowDesignerIdleAfterDrop = int32(0x00000008)
		.field static public literal valuetype System.Activities.Presentation.DesignerPerfEvents WorkflowDesignerLoadComplete = int32(0x00000001)
		.field static public literal valuetype System.Activities.Presentation.DesignerPerfEvents WorkflowDesignerLoadStart = int32(0x00000000)
		.field static public literal valuetype System.Activities.Presentation.DesignerPerfEvents WorkflowDesignerPasteEnd = int32(0x00000016)
		.field static public literal valuetype System.Activities.Presentation.DesignerPerfEvents WorkflowDesignerPasteStart = int32(0x00000015)
		.field static public literal valuetype System.Activities.Presentation.DesignerPerfEvents WorkflowDesignerSerializeEnd = int32(0x00000006)
		.field static public literal valuetype System.Activities.Presentation.DesignerPerfEvents WorkflowDesignerSerializeStart = int32(0x00000005)
		.field static public literal valuetype System.Activities.Presentation.DesignerPerfEvents WorkflowDesignerValidationEnd = int32(0x0000000E)
		.field static public literal valuetype System.Activities.Presentation.DesignerPerfEvents WorkflowDesignerValidationStart = int32(0x0000000D)
	}
	.class private DialogWindow
		extends [PresentationFramework]System.Windows.Window
	{
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.EditingContext get_Context()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Context(class System.Activities.Presentation.EditingContext 'value')
		{
			ret
		}
		.method family hidebysig specialname 
			instance string get_HelpKeyword()
		{
			ret
		}
		.method family hidebysig specialname 
			instance void set_HelpKeyword(string 'value')
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnSourceInitialized(class [mscorlib]System.EventArgs e)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ContextProperty
		.property instance class System.Activities.Presentation.EditingContext Context()
		{
			.get instance class System.Activities.Presentation.EditingContext System.Activities.Presentation.DialogWindow::get_Context()
			.set instance void System.Activities.Presentation.DialogWindow::set_Context(class System.Activities.Presentation.EditingContext)
		}
		.property instance string HelpKeyword()
		{
			.get instance string System.Activities.Presentation.DialogWindow::get_HelpKeyword()
			.set instance void System.Activities.Presentation.DialogWindow::set_HelpKeyword(string)
		}
	}
	.class private 'DictionaryItemsCollection`2'<'TKey', 'TValue'>
		extends class [mscorlib]'System.Collections.ObjectModel.Collection`1'<class 'System.Activities.Presentation.ModelItemKeyValuePair`2'<!0,!1>>
		implements System.Activities.Presentation.Model.IItemsCollection
	{
		.method public final virtual hidebysig newslot specialname 
			instance bool get_ShouldUpdateDictionary()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_ShouldUpdateDictionary(bool 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance class System.Activities.Presentation.Model.ModelItemDictionaryImpl get_ModelDictionary()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_ModelDictionary(class System.Activities.Presentation.Model.ModelItemDictionaryImpl 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(object dictionary)
		{
			ret
		}
		.method assembly hidebysig 
			instance void PostUpdateKey()
		{
			ret
		}
		.method assembly hidebysig 
			instance void PreUpdateKey(!0 oldKey, !0 newKey)
		{
			ret
		}
		.method assembly hidebysig 
			instance void UpdateValue(!0 key, !1 'value')
		{
			ret
		}
		.method family virtual hidebysig 
			instance void ClearItems()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void InsertItem(int32 index, class 'System.Activities.Presentation.ModelItemKeyValuePair`2'<!0,!1> item)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void RemoveItem(int32 index)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void SetItem(int32 index, class 'System.Activities.Presentation.ModelItemKeyValuePair`2'<!0,!1> item)
		{
			ret
		}
		.property instance class System.Activities.Presentation.Model.ModelItemDictionaryImpl ModelDictionary()
		{
			.get instance class System.Activities.Presentation.Model.ModelItemDictionaryImpl 'System.Activities.Presentation.DictionaryItemsCollection`2'::get_ModelDictionary()
			.set instance void 'System.Activities.Presentation.DictionaryItemsCollection`2'::set_ModelDictionary(class System.Activities.Presentation.Model.ModelItemDictionaryImpl)
		}
		.property instance bool ShouldUpdateDictionary()
		{
			.get instance bool 'System.Activities.Presentation.DictionaryItemsCollection`2'::get_ShouldUpdateDictionary()
			.set instance void 'System.Activities.Presentation.DictionaryItemsCollection`2'::set_ShouldUpdateDictionary(bool)
		}
	}
	.class private DockedAnnotationDecorator
		extends [PresentationFramework]System.Windows.Controls.Decorator
	{
		.method family virtual hidebysig 
			instance valuetype [WindowsBase]System.Windows.Size MeasureOverride(valuetype [WindowsBase]System.Windows.Size availableSize)
		{
			ret
		}
		.method family virtual hidebysig 
			instance valuetype [WindowsBase]System.Windows.Size ArrangeOverride(valuetype [WindowsBase]System.Windows.Size finalSize)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public abstract sealed DragDropHelper
		extends [mscorlib]System.Object
	{
		.class nested assembly sealed ViewElementDragShadow
			extends [PresentationFramework]System.Windows.Documents.Adorner
		{
			.method public hidebysig specialname 
				instance void .ctor(class [PresentationCore]System.Windows.UIElement owner, class System.Activities.Presentation.WorkflowViewElement viewElement, valuetype [WindowsBase]System.Windows.Point offset, float64 scaleFactor)
			{
				ret
			}
			.method public hidebysig specialname 
				instance void .ctor(class [PresentationCore]System.Windows.UIElement owner, class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.WorkflowViewElement> viewElements, valuetype [WindowsBase]System.Windows.Point offset, float64 scaleFactor)
			{
				ret
			}
			.method assembly hidebysig 
				instance void UpdatePosition(float64 x, float64 y)
			{
				ret
			}
			.method public virtual hidebysig 
				instance class [PresentationCore]System.Windows.Media.GeneralTransform GetDesiredTransform(class [PresentationCore]System.Windows.Media.GeneralTransform transform)
			{
				ret
			}
			.method family virtual hidebysig 
				instance class [PresentationCore]System.Windows.Media.Visual GetVisualChild(int32 index)
			{
				ret
			}
			.method family virtual hidebysig specialname 
				instance int32 get_VisualChildrenCount()
			{
				ret
			}
			.method family virtual hidebysig 
				instance valuetype [WindowsBase]System.Windows.Size ArrangeOverride(valuetype [WindowsBase]System.Windows.Size finalSize)
			{
				ret
			}
			.method family virtual hidebysig 
				instance valuetype [WindowsBase]System.Windows.Size MeasureOverride(valuetype [WindowsBase]System.Windows.Size constraint)
			{
				ret
			}
			.property instance int32 VisualChildrenCount()
			{
				.get instance int32 System.Activities.Presentation.DragDropHelper/ViewElementDragShadow::get_VisualChildrenCount()
			}
		}
		.method public static hidebysig 
			void SetCompositeView(class System.Activities.Presentation.WorkflowViewElement workflowViewElement, class [PresentationCore]System.Windows.UIElement dragSource)
		{
			ret
		}
		.method public static hidebysig 
			class [PresentationCore]System.Windows.UIElement GetCompositeView(class System.Activities.Presentation.WorkflowViewElement workflowViewElement)
		{
			ret
		}
		.method assembly static hidebysig 
			class [PresentationCore]System.Windows.DataObject DoDragMoveImpl(class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.WorkflowViewElement> draggedViewElements, valuetype [WindowsBase]System.Windows.Point referencePoint)
		{
			ret
		}
		.method public static hidebysig 
			valuetype [PresentationCore]System.Windows.DragDropEffects DoDragMove(class System.Activities.Presentation.WorkflowViewElement draggedViewElement, valuetype [WindowsBase]System.Windows.Point referencePoint)
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = { string('This method does not support dragging multiple items. Use \"public static IEnumerable<WorkflowViewElement> DoDragMove(IEnumerable<WorkflowViewElement> draggedViewElements, Point referencePoint)\" instead.') }
			ret
		}
		.method public static hidebysig 
			bool AllowDrop(class [PresentationCore]System.Windows.IDataObject draggedDataObject, class System.Activities.Presentation.EditingContext context, class [mscorlib]System.Type[] allowedItemTypes)
		{
			.param [3]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method assembly static hidebysig 
			bool AllowDrop(class [mscorlib]System.Type draggedType, class [mscorlib]System.Type allowedItemType)
		{
			ret
		}
		.method assembly static hidebysig 
			class [mscorlib]'System.Collections.Generic.List`1'<class [mscorlib]System.Type> GetDraggedTypes(class [PresentationCore]System.Windows.IDataObject draggedDataObject)
		{
			ret
		}
		.method assembly static hidebysig 
			bool IsDraggingFromToolbox(class [PresentationCore]System.Windows.DragEventArgs e)
		{
			ret
		}
		.method public static hidebysig 
			class [mscorlib]'System.Collections.Generic.IEnumerable`1'<object> GetDroppedObjects(class [WindowsBase]System.Windows.DependencyObject dropTarget, class [PresentationCore]System.Windows.DragEventArgs e, class System.Activities.Presentation.EditingContext context)
		{
			ret
		}
		.method assembly static hidebysig 
			void ValidateItemsAreOnView(class [mscorlib]'System.Collections.Generic.IList`1'<class System.Activities.Presentation.Model.ModelItem> items, class [mscorlib]'System.Collections.Generic.ICollection`1'<class System.Activities.Presentation.Model.ModelItem> modelItemsOnView)
		{
			ret
		}
		.method public static hidebysig 
			object GetDroppedObject(class [WindowsBase]System.Windows.DependencyObject dropTarget, class [PresentationCore]System.Windows.DragEventArgs e, class System.Activities.Presentation.EditingContext context)
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = { string('This method does not support dropping multiple items. Use \"public static IEnumerable<object> GetDroppedObjects(DependencyObject dropTarget, DragEventArgs e, EditingContext context)\" instead.') }
			ret
		}
		.method assembly static hidebysig 
			object GetDroppedObjectInstance(class [WindowsBase]System.Windows.DependencyObject dropTarget, class System.Activities.Presentation.EditingContext context, class [mscorlib]System.Type 'type', class [PresentationCore]System.Windows.IDataObject dataObject)
		{
			ret
		}
		.method public static hidebysig 
			class System.Activities.Presentation.Model.ModelItem GetDraggedModelItem(class [PresentationCore]System.Windows.DragEventArgs e)
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = { string('This method does not support dragging multiple items. Use \"public static IEnumerable<ModelItem> GetDraggedModelItems(DragEventArgs e)\" instead.') }
			ret
		}
		.method assembly static hidebysig 
			class System.Activities.Presentation.Model.ModelItem GetDraggedModelItemInternal(class [PresentationCore]System.Windows.DragEventArgs e)
		{
			ret
		}
		.method public static hidebysig 
			class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> GetDraggedModelItems(class [PresentationCore]System.Windows.DragEventArgs e)
		{
			ret
		}
		.method assembly static hidebysig 
			bool AreListsIdenticalExceptOrder<'T'>(class [mscorlib]'System.Collections.Generic.IList`1'<!!0> sourceList, class [mscorlib]'System.Collections.Generic.IList`1'<!!0> destinationList)
		{
			ret
		}
		.method assembly static hidebysig 
			class [mscorlib]'System.Collections.Generic.List`1'<object> SortSelectedObjects(class [mscorlib]'System.Collections.Generic.IEnumerable`1'<object> selectedObjects)
		{
			ret
		}
		.method public static hidebysig 
			class System.Activities.Presentation.ICompositeView GetCompositeView(class [PresentationCore]System.Windows.DragEventArgs e)
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = { string('This method does not support dragging multiple items. Use \"public static UIElement GetCompositeView(WorkflowViewElement workflowViewElement)\" instead.') }
			ret
		}
		.method public static hidebysig 
			valuetype [WindowsBase]System.Windows.Point GetDragDropAnchorPoint(class [PresentationCore]System.Windows.DragEventArgs e)
		{
			ret
		}
		.method public static hidebysig 
			void SetDragDropCompletedEffects(class [PresentationCore]System.Windows.DragEventArgs e, valuetype [PresentationCore]System.Windows.DragDropEffects completedEffects)
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = { string('This method does not support dragging multiple items. Consider using \"public static void SetDragDropMovedViewElements(DragEventArgs e, IEnumerable<WorkflowViewElement> movedViewElements)\" instead.') }
			ret
		}
		.method public static hidebysig 
			valuetype [PresentationCore]System.Windows.DragDropEffects GetDragDropCompletedEffects(class [PresentationCore]System.Windows.DataObject data)
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = { string('This method does not support dragging multiple items. Consider using \"public static IEnumerable<WorkflowViewElement> GetDragDropMovedViewElements(DataObject data)\" instead.') }
			ret
		}
		.method assembly static hidebysig 
			void SetDragDropMovedViewElements(class [PresentationCore]System.Windows.DragEventArgs e, class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.WorkflowViewElement> movedViewElements)
		{
			ret
		}
		.method assembly static hidebysig 
			class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.WorkflowViewElement> GetDragDropMovedViewElements(class [PresentationCore]System.Windows.DataObject data)
		{
			ret
		}
		.method assembly static hidebysig 
			int32 GetDraggedObjectCount(class [PresentationCore]System.Windows.DragEventArgs e)
		{
			ret
		}
		.method assembly static hidebysig 
			class [mscorlib]'System.Collections.Generic.Dictionary`2'<class System.Activities.Presentation.WorkflowViewElement,valuetype [WindowsBase]System.Windows.Point> GetViewElementRelativeLocations(class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.WorkflowViewElement> viewElements)
		{
			ret
		}
		.method assembly static hidebysig 
			class [mscorlib]'System.Collections.Generic.Dictionary`2'<class System.Activities.Presentation.WorkflowViewElement,valuetype [WindowsBase]System.Windows.Point> GetDraggedViewElementRelativeLocations(class [PresentationCore]System.Windows.DragEventArgs e)
		{
			ret
		}
		.method assembly static hidebysig 
			class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> GetModelItemsToDrag(class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> modelItems)
		{
			ret
		}
		.field static public initonly string CompletedEffectsFormat
		.field static public initonly string CompositeViewFormat
		.field static public initonly string DragAnchorPointFormat
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty DragSourceProperty
		.field static public initonly string ModelItemDataFormat
		.field static assembly initonly string ModelItemsDataFormat
		.field static assembly initonly string MovedViewElementsFormat
		.field static public initonly string WorkflowItemTypeNameFormat
	}
	.class private DropAnimation
		extends [PresentationCore]System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames
		implements [System.Xaml]System.Windows.Markup.IComponentConnector
	{
		.method assembly hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void InitializeComponent()
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Windows.Markup.IComponentConnector.Connect(int32 connectionId, object target)
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.override [System.Xaml]System.Windows.Markup.IComponentConnector::Connect
			ret
		}
	}
	.class private abstract sealed DynamicActivityPropertyUtilities
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			class [System.Activities]System.Activities.DynamicActivityProperty Find(class System.Activities.Presentation.Model.ModelItemCollection properties, string propertyName)
		{
			ret
		}
	}
	.class public EditingContext
		extends [mscorlib]System.Object
		implements [mscorlib]System.IDisposable
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_Disposing(class [mscorlib]System.EventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void remove_Disposing(class [mscorlib]System.EventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.ContextItemManager get_Items()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.ServiceManager get_Services()
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance class System.Activities.Presentation.ContextItemManager CreateContextItemManager()
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance class System.Activities.Presentation.ServiceManager CreateServiceManager()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Dispose()
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.event [mscorlib]System.EventHandler Disposing
		{
			.addon instance void System.Activities.Presentation.EditingContext::add_Disposing(class [mscorlib]System.EventHandler)
			.removeon instance void System.Activities.Presentation.EditingContext::remove_Disposing(class [mscorlib]System.EventHandler)
		}
		.property instance class System.Activities.Presentation.ContextItemManager Items()
		{
			.get instance class System.Activities.Presentation.ContextItemManager System.Activities.Presentation.EditingContext::get_Items()
		}
		.property instance class System.Activities.Presentation.ServiceManager Services()
		{
			.get instance class System.Activities.Presentation.ServiceManager System.Activities.Presentation.EditingContext::get_Services()
		}
	}
	.class private abstract sealed EditingContextUtilities
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			bool IsReadOnly(class System.Activities.Presentation.EditingContext editingContext)
		{
			ret
		}
		.method public static hidebysig 
			class System.Activities.Presentation.Model.ModelItem GetSingleSelectedModelItem(class System.Activities.Presentation.EditingContext editingContext)
		{
			ret
		}
	}
	.class private EditingScopeUndoUnit
		extends System.Activities.Presentation.UndoUnit
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.EditingContext context, class System.Activities.Presentation.Model.ModelTreeManager modelTreeManager, class System.Activities.Presentation.Model.EditingScope editingScope)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Redo()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Undo()
		{
			ret
		}
	}
	.class private abstract sealed EnumValidator
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			bool IsValid(valuetype System.Activities.Presentation.OrderTokenPrecedence 'value')
		{
			ret
		}
		.method public static hidebysig 
			bool IsValid(valuetype System.Activities.Presentation.OrderTokenConflictResolution 'value')
		{
			ret
		}
	}
	.class private ErrorActivity
		extends [System.Activities]System.Activities.Activity
	{
		.custom instance void [System]System.ComponentModel.DesignerAttribute::.ctor(class [mscorlib]System.Type) = { type(System.Activities.Presentation.ErrorActivity/ErrorActivityView) }
		.class nested assembly ErrorActivityView
			extends System.Activities.Presentation.WorkflowViewElement
		{
			.method public hidebysig specialname 
				instance void .ctor()
			{
				ret
			}
		}
		.class nested assembly NodeListLoader
			extends [System.Xaml]System.Xaml.XamlDeferringLoader
		{
			.method public virtual hidebysig 
				instance object Load(class [System.Xaml]System.Xaml.XamlReader xamlReader, class [mscorlib]System.IServiceProvider serviceProvider)
			{
				ret
			}
			.method public virtual hidebysig 
				instance class [System.Xaml]System.Xaml.XamlReader Save(object 'value', class [mscorlib]System.IServiceProvider serviceProvider)
			{
				ret
			}
			.method public hidebysig specialname 
				instance void .ctor()
			{
				ret
			}
		}
		.method public hidebysig specialname 
			instance class [System.Xaml]System.Xaml.XamlNodeList get_ErrorNodes()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_ErrorNodes(class [System.Xaml]System.Xaml.XamlNodeList 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly static hidebysig 
			bool GetHasErrorActivities(object target)
		{
			ret
		}
		.method assembly static hidebysig 
			void SetHasErrorActivities(object target, bool 'value')
		{
			ret
		}
		.method assembly static hidebysig 
			void WriteNodeList(class [System.Xaml]System.Xaml.XamlWriter writer, class [System.Xaml]System.Xaml.XamlNodeList nodeList)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.field static assembly literal string ErrorNodesProperty = "ErrorNodes"
		.property instance class [System.Xaml]System.Xaml.XamlNodeList ErrorNodes()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.get instance class [System.Xaml]System.Xaml.XamlNodeList System.Activities.Presentation.ErrorActivity::get_ErrorNodes()
			.set instance void System.Activities.Presentation.ErrorActivity::set_ErrorNodes(class [System.Xaml]System.Xaml.XamlNodeList)
		}
	}
	.class private 'ErrorActivity`1'<'T'>
		extends class [System.Activities]'System.Activities.Activity`1'<!0>
	{
		.custom instance void [System]System.ComponentModel.DesignerAttribute::.ctor(class [mscorlib]System.Type) = { type(System.Activities.Presentation.ErrorActivity/ErrorActivityView) }
		.method public hidebysig specialname 
			instance class [System.Xaml]System.Xaml.XamlNodeList get_ErrorNodes()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_ErrorNodes(class [System.Xaml]System.Xaml.XamlNodeList 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class [System.Xaml]System.Xaml.XamlNodeList ErrorNodes()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.get instance class [System.Xaml]System.Xaml.XamlNodeList 'System.Activities.Presentation.ErrorActivity`1'::get_ErrorNodes()
			.set instance void 'System.Activities.Presentation.ErrorActivity`1'::set_ErrorNodes(class [System.Xaml]System.Xaml.XamlNodeList)
		}
	}
	.class private abstract sealed ErrorReporting
		extends [mscorlib]System.Object
	{
		.method assembly static hidebysig specialname 
			class System.Activities.Presentation.View.DesignerView get_ActiveDesignerView()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			void set_ActiveDesignerView(class System.Activities.Presentation.View.DesignerView 'value')
		{
			ret
		}
		.method public static hidebysig 
			void ShowErrorMessage(string message)
		{
			ret
		}
		.method public static hidebysig 
			void ShowAlertMessage(string message)
		{
			ret
		}
		.method public static hidebysig 
			void ShowErrorMessage(string message, string details)
		{
			ret
		}
		.method public static hidebysig 
			void ShowErrorMessage(string message, bool includeStackTrace)
		{
			ret
		}
		.method public static hidebysig 
			void ShowAlertMessage(string message, bool includeStackTrace)
		{
			ret
		}
		.method public static hidebysig 
			void ShowErrorMessage(class [mscorlib]System.Exception err)
		{
			ret
		}
		.property class System.Activities.Presentation.View.DesignerView ActiveDesignerView()
		{
			.get class System.Activities.Presentation.View.DesignerView System.Activities.Presentation.ErrorReporting::get_ActiveDesignerView()
			.set void System.Activities.Presentation.ErrorReporting::set_ActiveDesignerView(class System.Activities.Presentation.View.DesignerView)
		}
	}
	.class private ExpandButtonVisibilityConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IMultiValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object[] values, class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object[] ConvertBack(object 'value', class [mscorlib]System.Type[] targetTypes, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public static hidebysig 
			valuetype [PresentationCore]System.Windows.Visibility GetExpandCollapseButtonVisibility(class System.Activities.Presentation.WorkflowViewElement viewElement)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private ExpandCollapseIsCheckedConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IMultiValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object[] values, class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object[] ConvertBack(object 'value', class [mscorlib]System.Type[] targetTypes, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private abstract sealed ExpressionHelper
		extends [mscorlib]System.Object
	{
		.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
		.method assembly static hidebysig 
			string GetExpressionString(class [System.Activities]System.Activities.Activity expression)
		{
			ret
		}
		.method assembly static hidebysig 
			string GetExpressionString(class [System.Activities]System.Activities.Activity expression, class System.Activities.Presentation.Model.ModelItem owner)
		{
			ret
		}
		.method assembly static hidebysig 
			string GetExpressionString(class [System.Activities]System.Activities.Activity expression, class System.Activities.Presentation.View.ParserContext context)
		{
			ret
		}
		.method assembly static hidebysig 
			class [System.Activities]System.Activities.ActivityWithResult TryCreateLiteral(class [mscorlib]System.Type 'type', string expressionText, class System.Activities.Presentation.View.ParserContext context)
		{
			ret
		}
		.method assembly static hidebysig 
			bool CanTypeBeSerializedAsLiteral(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method assembly static hidebysig 
			bool IsExpression(class [System.Activities]System.Activities.Activity activity)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
		.method assembly static hidebysig 
			bool IsGenericLocationExpressionType(class [System.Activities]System.Activities.ActivityWithResult expression)
		{
			ret
		}
		.method assembly static hidebysig 
			bool TryMorphExpression(class [System.Activities]System.Activities.ActivityWithResult originalExpression, bool isLocation, class [mscorlib]System.Type targetType, class System.Activities.Presentation.EditingContext context, [out] class [System.Activities]System.Activities.ActivityWithResult& morphedExpression)
		{
			ret
		}
		.method assembly static hidebysig 
			bool TryInferReturnType(class [System.Activities]System.Activities.ActivityWithResult expression, class System.Activities.Presentation.EditingContext context, [out] class [mscorlib]System.Type& returnType)
		{
			ret
		}
		.method assembly static hidebysig 
			string GetRootEditorSetting(class System.Activities.Presentation.Model.ModelTreeManager modelTreeManager, class [System]System.Runtime.Versioning.FrameworkName targetFramework)
		{
			ret
		}
	}
	.class private ExpressionSelection
		extends System.Activities.Presentation.ContextItem
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.Model.ModelItem modelItem)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_ModelItem()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]System.Type get_ItemType()
		{
			ret
		}
		.property instance class [mscorlib]System.Type ItemType()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.ExpressionSelection::get_ItemType()
		}
		.property instance class System.Activities.Presentation.Model.ModelItem ModelItem()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.ExpressionSelection::get_ModelItem()
		}
	}
	.class private abstract Feature
		extends [mscorlib]System.Object
	{
		.method public virtual hidebysig newslot abstract 
			instance void Initialize(class System.Activities.Presentation.EditingContext context, class [mscorlib]System.Type modelType)
		{
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private sealed FeatureAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = { int32(4) property bool AllowMultiple = bool(true) }
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Type get_Type()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance object get_TypeId()
		{
			ret
		}
		.property instance class [mscorlib]System.Type Type()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.FeatureAttribute::get_Type()
		}
		.property instance object TypeId()
		{
			.get instance object System.Activities.Presentation.FeatureAttribute::get_TypeId()
		}
	}
	.class private FeatureManager
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.EditingContext context)
		{
			ret
		}
		.method public hidebysig 
			instance void InitializeFeature(class [mscorlib]System.Type modelType)
		{
			ret
		}
	}
	.class private abstract sealed FxTrace
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			void UpdateEventDefinitions(valuetype [System.ServiceModel.Internals]System.Runtime.Diagnostics.EventDescriptor[] eventDescriptors, uint16[] end2EndEvents)
		{
			ret
		}
		.method public static hidebysig 
			bool IsEventEnabled(int32 index)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool get_ShouldTraceCritical()
		{
			ret
		}
		.method public static hidebysig specialname 
			bool get_TracingEnabled()
		{
			ret
		}
		.method public static hidebysig specialname 
			bool get_ShouldTraceError()
		{
			ret
		}
		.method public static hidebysig specialname 
			bool get_ShouldTraceInformation()
		{
			ret
		}
		.method public static hidebysig specialname 
			bool get_ShouldTraceVerbose()
		{
			ret
		}
		.method public static hidebysig specialname 
			bool get_ShouldTraceWarning()
		{
			ret
		}
		.method public static hidebysig specialname 
			bool get_ShouldTraceCriticalToTraceSource()
		{
			ret
		}
		.method public static hidebysig specialname 
			bool get_ShouldTraceErrorToTraceSource()
		{
			ret
		}
		.method public static hidebysig specialname 
			bool get_ShouldTraceInformationToTraceSource()
		{
			ret
		}
		.method public static hidebysig specialname 
			bool get_ShouldTraceVerboseToTraceSource()
		{
			ret
		}
		.method public static hidebysig specialname 
			bool get_ShouldTraceWarningToTraceSource()
		{
			ret
		}
		.method public static hidebysig specialname 
			class [System.ServiceModel.Internals]System.Runtime.ExceptionTrace get_Exception()
		{
			ret
		}
		.method public static hidebysig specialname 
			class [System.ServiceModel.Internals]System.Runtime.Diagnostics.EtwDiagnosticTrace get_Trace()
		{
			ret
		}
		.method public static hidebysig specialname 
			class [System.ServiceModel.Internals]System.Runtime.Diagnostics.EventLogger get_EventLog()
		{
			ret
		}
		.property class [System.ServiceModel.Internals]System.Runtime.Diagnostics.EventLogger EventLog()
		{
			.get class [System.ServiceModel.Internals]System.Runtime.Diagnostics.EventLogger System.Activities.Presentation.FxTrace::get_EventLog()
		}
		.property class [System.ServiceModel.Internals]System.Runtime.ExceptionTrace Exception()
		{
			.get class [System.ServiceModel.Internals]System.Runtime.ExceptionTrace System.Activities.Presentation.FxTrace::get_Exception()
		}
		.property bool ShouldTraceCritical()
		{
			.get bool System.Activities.Presentation.FxTrace::get_ShouldTraceCritical()
		}
		.property bool ShouldTraceCriticalToTraceSource()
		{
			.get bool System.Activities.Presentation.FxTrace::get_ShouldTraceCriticalToTraceSource()
		}
		.property bool ShouldTraceError()
		{
			.get bool System.Activities.Presentation.FxTrace::get_ShouldTraceError()
		}
		.property bool ShouldTraceErrorToTraceSource()
		{
			.get bool System.Activities.Presentation.FxTrace::get_ShouldTraceErrorToTraceSource()
		}
		.property bool ShouldTraceInformation()
		{
			.get bool System.Activities.Presentation.FxTrace::get_ShouldTraceInformation()
		}
		.property bool ShouldTraceInformationToTraceSource()
		{
			.get bool System.Activities.Presentation.FxTrace::get_ShouldTraceInformationToTraceSource()
		}
		.property bool ShouldTraceVerbose()
		{
			.get bool System.Activities.Presentation.FxTrace::get_ShouldTraceVerbose()
		}
		.property bool ShouldTraceVerboseToTraceSource()
		{
			.get bool System.Activities.Presentation.FxTrace::get_ShouldTraceVerboseToTraceSource()
		}
		.property bool ShouldTraceWarning()
		{
			.get bool System.Activities.Presentation.FxTrace::get_ShouldTraceWarning()
		}
		.property bool ShouldTraceWarningToTraceSource()
		{
			.get bool System.Activities.Presentation.FxTrace::get_ShouldTraceWarningToTraceSource()
		}
		.property class [System.ServiceModel.Internals]System.Runtime.Diagnostics.EtwDiagnosticTrace Trace()
		{
			.get class [System.ServiceModel.Internals]System.Runtime.Diagnostics.EtwDiagnosticTrace System.Activities.Presentation.FxTrace::get_Trace()
		}
		.property bool TracingEnabled()
		{
			.get bool System.Activities.Presentation.FxTrace::get_TracingEnabled()
		}
	}
	.class private sealed GenericTypeParameterConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(bool useFullName)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object Convert(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
	}
	.class private abstract sealed HelpKeywords
		extends [mscorlib]System.Object
	{
		.field static public literal string ActivityTypeResolver = "ActivityTypeResolver"
		.field static public literal string AddCorrelationInitializersDialog = "AddCorrelationInitializers"
		.field static public literal string CorrelatesOnDefinitionDialog = "CorrelatesOnDefinition"
		.field static public literal string DynamicArgumentDialog = "AddParameters"
		.field static public literal string ErrorView = "System.Activities.Presentation.View.ErrorView"
		.field static public literal string ExpressionEditorPage = "System.Activities.Presentation.View.ExpressionTextBox"
		.field static public literal string HomePage = "DefaultWorkflowDesigner"
		.field static public literal string InitializeCorrelationDialog = "InitializeCorrelation"
		.field static public literal string MessageContentDialog = "MessageContent"
		.field static public literal string TypeBrowser = "TypeBrowser"
		.field static public literal string TypeCollectionEditor = "TypeCollectionEditor"
		.field static public literal string UriBuilderDialog = "UriBuilder"
	}
	.class private interface abstract IActivityDelegateFactory
	{
		.method public virtual hidebysig newslot abstract specialname 
			instance class [mscorlib]System.Type get_DelegateType()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [System.Activities]System.Activities.ActivityDelegate Create()
		{
		}
		.property instance class [mscorlib]System.Type DelegateType()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.IActivityDelegateFactory::get_DelegateType()
		}
	}
	.class public interface abstract IActivityTemplateFactory
	{
		.method public virtual hidebysig newslot abstract 
			instance class [System.Activities]System.Activities.Activity Create(class [WindowsBase]System.Windows.DependencyObject target)
		{
		}
	}
	.class public interface abstract 'IActivityTemplateFactory`1'<class 'T'>
	{
		.method public virtual hidebysig newslot abstract 
			instance !0 Create(class [WindowsBase]System.Windows.DependencyObject target, class [PresentationCore]System.Windows.IDataObject dataObject)
		{
		}
	}
	.class public interface abstract IActivityToolboxService
	{
		.method public virtual hidebysig newslot abstract 
			instance void AddCategory(string categoryName)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void RemoveCategory(string categoryName)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void AddItem(string qualifiedTypeName, string categoryName)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void RemoveItem(string qualifiedTypeName, string categoryName)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]'System.Collections.Generic.IList`1'<string> EnumCategories()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]'System.Collections.Generic.IList`1'<string> EnumItems(string categoryName)
		{
		}
	}
	.class public interface abstract ICompositeView
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnItemMoved(class System.Activities.Presentation.Model.ModelItem modelItem)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance object OnItemsCut(class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.ModelItem> itemsToCut)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance object OnItemsCopied(class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.ModelItem> itemsToCopy)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void OnItemsPasted(class [mscorlib]'System.Collections.Generic.List`1'<object> itemsToPaste, class [mscorlib]'System.Collections.Generic.List`1'<object> metadata, valuetype [WindowsBase]System.Windows.Point pastePoint, class System.Activities.Presentation.WorkflowViewElement pastePointReference)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void OnItemsDelete(class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.ModelItem> itemsToDelete)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool CanPasteItems(class [mscorlib]'System.Collections.Generic.List`1'<object> itemsToPaste)
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_IsDefaultContainer()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.Activities.Presentation.View.TypeResolvingOptions get_DroppingTypeResolvingOptions()
		{
		}
		.property instance class System.Activities.Presentation.View.TypeResolvingOptions DroppingTypeResolvingOptions()
		{
			.get instance class System.Activities.Presentation.View.TypeResolvingOptions System.Activities.Presentation.ICompositeView::get_DroppingTypeResolvingOptions()
		}
		.property instance bool IsDefaultContainer()
		{
			.get instance bool System.Activities.Presentation.ICompositeView::get_IsDefaultContainer()
		}
	}
	.class public interface abstract ICompositeViewEvents
	{
		.method public virtual hidebysig newslot abstract 
			instance void RegisterDefaultCompositeView(class System.Activities.Presentation.ICompositeView container)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void UnregisterDefaultCompositeView(class System.Activities.Presentation.ICompositeView container)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void RegisterCompositeView(class System.Activities.Presentation.ICompositeView container)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void UnregisterCompositeView(class System.Activities.Presentation.ICompositeView container)
		{
		}
	}
	.class private interface abstract IExpandChild
	{
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_ExpandedChild()
		{
		}
		.property instance class System.Activities.Presentation.Model.ModelItem ExpandedChild()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.IExpandChild::get_ExpandedChild()
		}
	}
	.class public interface abstract IIntegratedHelpService
	{
		.method public virtual hidebysig newslot abstract 
			instance void AddContextAttribute(string name, string 'value', valuetype [System]System.ComponentModel.Design.HelpKeywordType keywordType)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void RemoveContextAttribute(string name, string 'value')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void ShowHelpFromKeyword(string helpKeyword)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void ShowHelpFromUrl(string helpUrl)
		{
		}
	}
	.class public interface abstract IModalService
	{
		.method public virtual hidebysig newslot abstract 
			instance void SetModalState(bool isModal)
		{
		}
	}
	.class public interface abstract IMultipleDragEnabledCompositeView
		implements System.Activities.Presentation.ICompositeView
	{
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.ModelItem> SortSelectedItems(class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.ModelItem> selectedItems)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void OnItemsMoved(class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.ModelItem> movedItems)
		{
		}
	}
	.class private interface abstract IUndoEngineOperations
	{
		.method public virtual hidebysig newslot abstract 
			instance void AddUndoUnitCore(class System.Activities.Presentation.UndoUnit unit)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool UndoCore()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool RedoCore()
		{
		}
	}
	.class public interface abstract IWorkflowDesignerStorageService
	{
		.method public virtual hidebysig newslot abstract 
			instance void AddData(string key, object 'value')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void RemoveData(string key)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance object GetData(string key)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetData(string key, object 'value')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool ContainsKey(string key)
		{
		}
	}
	.class public interface abstract IXamlLoadErrorService
	{
		.method public virtual hidebysig newslot abstract 
			instance void ShowXamlLoadErrors(class [mscorlib]'System.Collections.Generic.IList`1'<class System.Activities.Presentation.XamlLoadErrorInfo> errors)
		{
		}
	}
	.class private sealed InsertionPosition
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Activities.Presentation.InsertionPosition After = int32(0x00000001)
		.field static public literal valuetype System.Activities.Presentation.InsertionPosition Before = int32(0x00000000)
		.field static public literal valuetype System.Activities.Presentation.InsertionPosition None = int32(0x00000002)
	}
	.class private abstract sealed LocalAppContextSwitches
		extends [mscorlib]System.Object
	{
		.method public static hidebysig specialname 
			bool get_UseLegacyAccessibilityFeatures()
			aggressiveinlining 
		{
			ret
		}
		.method public static hidebysig specialname 
			bool get_UseLegacyAccessibilityFeatures2()
			aggressiveinlining 
		{
			ret
		}
		.method public static hidebysig specialname 
			bool get_UseLegacyAccessibilityFeatures3()
			aggressiveinlining 
		{
			ret
		}
		.field static assembly literal string UseLegacyAccessibilityFeatures2SwitchName = "Switch.UseLegacyAccessibilityFeatures.2"
		.field static assembly literal string UseLegacyAccessibilityFeatures3SwitchName = "Switch.UseLegacyAccessibilityFeatures.3"
		.field static assembly literal string UseLegacyAccessibilityFeaturesSwitchName = "Switch.UseLegacyAccessibilityFeatures"
		.property bool UseLegacyAccessibilityFeatures()
		{
			.get bool System.Activities.Presentation.LocalAppContextSwitches::get_UseLegacyAccessibilityFeatures()
		}
		.property bool UseLegacyAccessibilityFeatures2()
		{
			.get bool System.Activities.Presentation.LocalAppContextSwitches::get_UseLegacyAccessibilityFeatures2()
		}
		.property bool UseLegacyAccessibilityFeatures3()
		{
			.get bool System.Activities.Presentation.LocalAppContextSwitches::get_UseLegacyAccessibilityFeatures3()
		}
	}
	.class private MiniMapControl
		extends [PresentationFramework]System.Windows.Controls.UserControl
		implements [System.Xaml]System.Windows.Markup.IComponentConnector
	{
		.class nested assembly LookupWindow
			extends [mscorlib]System.Object
		{
			.method public hidebysig specialname 
				instance void .ctor(class System.Activities.Presentation.MiniMapControl/MiniMapViewController parent, class [PresentationFramework]System.Windows.Shapes.Rectangle lookupWindowRectangle)
			{
				ret
			}
			.method public hidebysig specialname 
				instance float64 get_Left()
			{
				ret
			}
			.method public hidebysig specialname 
				instance void set_Left(float64 'value')
			{
				ret
			}
			.method public hidebysig specialname 
				instance float64 get_Top()
			{
				ret
			}
			.method public hidebysig specialname 
				instance void set_Top(float64 'value')
			{
				ret
			}
			.method public hidebysig specialname 
				instance float64 get_Width()
			{
				ret
			}
			.method public hidebysig specialname 
				instance void set_Width(float64 'value')
			{
				ret
			}
			.method public hidebysig specialname 
				instance float64 get_Height()
			{
				ret
			}
			.method public hidebysig specialname 
				instance void set_Height(float64 'value')
			{
				ret
			}
			.method public hidebysig specialname 
				instance float64 get_MapCenterXPoint()
			{
				ret
			}
			.method public hidebysig specialname 
				instance float64 get_MapCenterYPoint()
			{
				ret
			}
			.method public hidebysig specialname 
				instance float64 get_MousePositionX()
			{
				ret
			}
			.method public hidebysig specialname 
				instance float64 get_MousePositionY()
			{
				ret
			}
			.method public hidebysig specialname 
				instance bool get_IsSelected()
			{
				.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
				ret
			}
			.method public hidebysig 
				instance void SetPosition(float64 left, float64 top)
			{
				ret
			}
			.method public hidebysig 
				instance void SetSize(float64 width, float64 height)
			{
				ret
			}
			.method public hidebysig 
				instance bool Select(object clickedItem, valuetype [WindowsBase]System.Windows.Point clickedPosition)
			{
				ret
			}
			.method public hidebysig 
				instance void Unselect()
			{
				ret
			}
			.method public hidebysig 
				instance void Center(float64 x, float64 y)
			{
				ret
			}
			.method public hidebysig 
				instance void Refresh(bool unselect)
			{
				ret
			}
			.property instance float64 Height()
			{
				.get instance float64 System.Activities.Presentation.MiniMapControl/LookupWindow::get_Height()
				.set instance void System.Activities.Presentation.MiniMapControl/LookupWindow::set_Height(float64)
			}
			.property instance bool IsSelected()
			{
				.get instance bool System.Activities.Presentation.MiniMapControl/LookupWindow::get_IsSelected()
			}
			.property instance float64 Left()
			{
				.get instance float64 System.Activities.Presentation.MiniMapControl/LookupWindow::get_Left()
				.set instance void System.Activities.Presentation.MiniMapControl/LookupWindow::set_Left(float64)
			}
			.property instance float64 MapCenterXPoint()
			{
				.get instance float64 System.Activities.Presentation.MiniMapControl/LookupWindow::get_MapCenterXPoint()
			}
			.property instance float64 MapCenterYPoint()
			{
				.get instance float64 System.Activities.Presentation.MiniMapControl/LookupWindow::get_MapCenterYPoint()
			}
			.property instance float64 MousePositionX()
			{
				.get instance float64 System.Activities.Presentation.MiniMapControl/LookupWindow::get_MousePositionX()
			}
			.property instance float64 MousePositionY()
			{
				.get instance float64 System.Activities.Presentation.MiniMapControl/LookupWindow::get_MousePositionY()
			}
			.property instance float64 Top()
			{
				.get instance float64 System.Activities.Presentation.MiniMapControl/LookupWindow::get_Top()
				.set instance void System.Activities.Presentation.MiniMapControl/LookupWindow::set_Top(float64)
			}
			.property instance float64 Width()
			{
				.get instance float64 System.Activities.Presentation.MiniMapControl/LookupWindow::get_Width()
				.set instance void System.Activities.Presentation.MiniMapControl/LookupWindow::set_Width(float64)
			}
		}
		.class nested assembly MiniMapViewController
			extends [mscorlib]System.Object
		{
			.method public hidebysig specialname 
				instance void .ctor(class [PresentationFramework]System.Windows.Controls.Canvas lookupCanvas, class [PresentationFramework]System.Windows.Shapes.Rectangle lookupWindowRectangle, class [PresentationFramework]System.Windows.Controls.Grid contentGrid)
			{
				ret
			}
			.method public hidebysig specialname 
				instance class [PresentationFramework]System.Windows.Controls.ScrollViewer get_MapSource()
			{
				ret
			}
			.method public hidebysig specialname 
				instance void set_MapSource(class [PresentationFramework]System.Windows.Controls.ScrollViewer 'value')
			{
				ret
			}
			.method public hidebysig specialname 
				instance float64 get_MapWidth()
			{
				ret
			}
			.method public hidebysig specialname 
				instance float64 get_MapHeight()
			{
				ret
			}
			.method assembly hidebysig specialname 
				instance class System.Activities.Presentation.MiniMapControl/LookupWindow get_LookupWindow()
			{
				ret
			}
			.method public hidebysig 
				instance void CenterView(class [PresentationCore]System.Windows.Input.MouseEventArgs args)
			{
				ret
			}
			.method public hidebysig 
				instance void MapViewSizeChanged(class [PresentationCore]System.Windows.SizeChangedInfo sizeInfo)
			{
				ret
			}
			.method public hidebysig 
				instance bool StartMapLookupDrag(class [PresentationCore]System.Windows.Input.MouseEventArgs args)
			{
				ret
			}
			.method public hidebysig 
				instance void StopMapLookupDrag()
			{
				ret
			}
			.method public hidebysig 
				instance void DoMapLookupDrag(class [PresentationCore]System.Windows.Input.MouseEventArgs args)
			{
				ret
			}
			.property instance class System.Activities.Presentation.MiniMapControl/LookupWindow LookupWindow()
			{
				.get instance class System.Activities.Presentation.MiniMapControl/LookupWindow System.Activities.Presentation.MiniMapControl/MiniMapViewController::get_LookupWindow()
			}
			.property instance float64 MapHeight()
			{
				.get instance float64 System.Activities.Presentation.MiniMapControl/MiniMapViewController::get_MapHeight()
			}
			.property instance class [PresentationFramework]System.Windows.Controls.ScrollViewer MapSource()
			{
				.get instance class [PresentationFramework]System.Windows.Controls.ScrollViewer System.Activities.Presentation.MiniMapControl/MiniMapViewController::get_MapSource()
				.set instance void System.Activities.Presentation.MiniMapControl/MiniMapViewController::set_MapSource(class [PresentationFramework]System.Windows.Controls.ScrollViewer)
			}
			.property instance float64 MapWidth()
			{
				.get instance float64 System.Activities.Presentation.MiniMapControl/MiniMapViewController::get_MapWidth()
			}
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationFramework]System.Windows.Controls.ScrollViewer get_MapSource()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MapSource(class [PresentationFramework]System.Windows.Controls.ScrollViewer 'value')
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnMouseLeftButtonDown(class [PresentationCore]System.Windows.Input.MouseButtonEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnMouseMove(class [PresentationCore]System.Windows.Input.MouseEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnMouseLeftButtonUp(class [PresentationCore]System.Windows.Input.MouseButtonEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnMouseDoubleClick(class [PresentationCore]System.Windows.Input.MouseButtonEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnRenderSizeChanged(class [PresentationCore]System.Windows.SizeChangedInfo sizeInfo)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void InitializeComponent()
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Windows.Markup.IComponentConnector.Connect(int32 connectionId, object target)
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.override [System.Xaml]System.Windows.Markup.IComponentConnector::Connect
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty MapSourceProperty
		.field assembly class [PresentationFramework]System.Windows.Controls.Grid contentGrid
		.field assembly class System.Activities.Presentation.MiniMapControl controlRoot
		.field assembly class [PresentationFramework]System.Windows.Controls.Canvas lookupCanvas
		.field assembly class [PresentationFramework]System.Windows.Shapes.Rectangle lookupWindow
		.property instance class [PresentationFramework]System.Windows.Controls.ScrollViewer MapSource()
		{
			.get instance class [PresentationFramework]System.Windows.Controls.ScrollViewer System.Activities.Presentation.MiniMapControl::get_MapSource()
			.set instance void System.Activities.Presentation.MiniMapControl::set_MapSource(class [PresentationFramework]System.Windows.Controls.ScrollViewer)
		}
	}
	.class private 'ModelItemKeyValuePair`2'<'TKey', 'TValue'>
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(!0 key, !1 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance !0 get_Key()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Key(!0 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance !1 get_Value()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Value(!1 'value')
		{
			ret
		}
		.field assembly class 'System.Activities.Presentation.DictionaryItemsCollection`2'<!0,!1> collection
		.property instance !0 Key()
		{
			.get instance !0 'System.Activities.Presentation.ModelItemKeyValuePair`2'::get_Key()
			.set instance void 'System.Activities.Presentation.ModelItemKeyValuePair`2'::set_Key(!0)
		}
		.property instance !1 Value()
		{
			.get instance !1 'System.Activities.Presentation.ModelItemKeyValuePair`2'::get_Value()
			.set instance void 'System.Activities.Presentation.ModelItemKeyValuePair`2'::set_Value(!1)
		}
	}
	.class private MultiTargetingXamlSchemaContext
		extends [System.Xaml]System.Xaml.XamlSchemaContext
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.Hosting.MultiTargetingSupportService multiTargetingService)
		{
			ret
		}
		.method family virtual hidebysig 
			instance class [System.Xaml]System.Xaml.XamlType GetXamlType(string xamlNamespace, string name, class [System.Xaml]System.Xaml.XamlType[] typeArguments)
		{
			.param [3]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
	}
	.class private NamespaceData
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance string get_Namespace()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_Namespace(string 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public virtual hidebysig 
			instance string ToString()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance string Namespace()
		{
			.get instance string System.Activities.Presentation.NamespaceData::get_Namespace()
			.set instance void System.Activities.Presentation.NamespaceData::set_Namespace(string)
		}
	}
	.class private abstract sealed NamespaceHelper
		extends [mscorlib]System.Object
	{
		.method assembly static hidebysig 
			class [mscorlib]'System.Collections.Generic.IList`1'<string> GetTextExpressionNamespaces(object root, [out] class [mscorlib]'System.Collections.Generic.IList`1'<class [System.Activities]System.Activities.Expressions.AssemblyReference>& references)
		{
			ret
		}
		.method assembly static hidebysig 
			void SetTextExpressionNamespaces(object root, class [mscorlib]'System.Collections.Generic.IList`1'<string> namespaces, class [mscorlib]'System.Collections.Generic.IList`1'<class [System.Activities]System.Activities.Expressions.AssemblyReference> references)
		{
			ret
		}
		.method assembly static hidebysig 
			void SetVisualBasicSettings(object root, class [System.Activities]Microsoft.VisualBasic.Activities.VisualBasicSettings settings)
		{
			ret
		}
		.method assembly static hidebysig 
			void ConvertToTextExpressionImports(class [System.Activities]Microsoft.VisualBasic.Activities.VisualBasicSettings settings, [out] class [mscorlib]'System.Collections.Generic.IList`1'<string>& importedNamespace, [out] class [mscorlib]'System.Collections.Generic.IList`1'<class [System.Activities]System.Activities.Expressions.AssemblyReference>& references)
		{
			ret
		}
		.method assembly static hidebysig 
			void ConvertToVBSettings(class [mscorlib]'System.Collections.Generic.IList`1'<string> importedNamespaces, class [mscorlib]'System.Collections.Generic.IList`1'<class [System.Activities]System.Activities.Expressions.AssemblyReference> references, class System.Activities.Presentation.EditingContext context, [out] class [System.Activities]Microsoft.VisualBasic.Activities.VisualBasicSettings& settings)
		{
			ret
		}
	}
	.class private abstract NamespaceList
		extends [mscorlib]System.Object
		implements [mscorlib]System.Collections.IList, [mscorlib]System.Collections.ICollection, [mscorlib]System.Collections.IEnumerable
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = { string('Item') }
		.method family hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.NamespaceData> get_UniqueNamespaces()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.Dictionary`2'<string,class [mscorlib]'System.Collections.Generic.List`1'<string>> get_AvailableNamespaces()
		{
			ret
		}
		.method assembly hidebysig 
			instance int32 Lookup(string ns)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance int32 Add(object 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Clear()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool Contains(object 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance int32 IndexOf(object 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Insert(int32 index, object 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_IsFixedSize()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_IsReadOnly()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Remove(object 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void RemoveAt(int32 index)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance object get_Item(int32 index)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_Item(int32 index, object 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void CopyTo(class [mscorlib]System.Array 'array', int32 index)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance int32 get_Count()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_IsSynchronized()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance object get_SyncRoot()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IEnumerator GetEnumerator()
		{
			ret
		}
		.method public hidebysig 
			instance void UpdateAssemblyInfo(string importedNamespace)
		{
			ret
		}
		.method family virtual hidebysig newslot abstract 
			instance void AddCore(class System.Activities.Presentation.NamespaceData ns)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void ClearCore()
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void InsertCore(int32 index, class System.Activities.Presentation.NamespaceData ns)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void RemoveNamespaceFromSet(string ns)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void SetValueAt(int32 index, class System.Activities.Presentation.NamespaceData ns)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void UpdateAssemblyInfoCore(string importedNamespace)
		{
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class [mscorlib]'System.Collections.Generic.Dictionary`2'<string,class [mscorlib]'System.Collections.Generic.List`1'<string>> AvailableNamespaces()
		{
			.get instance class [mscorlib]'System.Collections.Generic.Dictionary`2'<string,class [mscorlib]'System.Collections.Generic.List`1'<string>> System.Activities.Presentation.NamespaceList::get_AvailableNamespaces()
		}
		.property instance int32 Count()
		{
			.get instance int32 System.Activities.Presentation.NamespaceList::get_Count()
		}
		.property instance bool IsFixedSize()
		{
			.get instance bool System.Activities.Presentation.NamespaceList::get_IsFixedSize()
		}
		.property instance bool IsReadOnly()
		{
			.get instance bool System.Activities.Presentation.NamespaceList::get_IsReadOnly()
		}
		.property instance bool IsSynchronized()
		{
			.get instance bool System.Activities.Presentation.NamespaceList::get_IsSynchronized()
		}
		.property instance object Item(int32)
		{
			.get instance object System.Activities.Presentation.NamespaceList::get_Item(int32)
			.set instance void System.Activities.Presentation.NamespaceList::set_Item(int32, object)
		}
		.property instance object SyncRoot()
		{
			.get instance object System.Activities.Presentation.NamespaceList::get_SyncRoot()
		}
		.property instance class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.NamespaceData> UniqueNamespaces()
		{
			.get instance class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.NamespaceData> System.Activities.Presentation.NamespaceList::get_UniqueNamespaces()
		}
	}
	.class private NamespaceListPropertyDescriptor
		extends [System]System.ComponentModel.PropertyDescriptor
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'instance')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]System.Type get_ComponentType()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_IsReadOnly()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]System.Type get_PropertyType()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_IsBrowsable()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool CanResetValue(object component)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object GetValue(object component)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void ResetValue(object component)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void SetValue(object component, object 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool ShouldSerializeValue(object component)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void FillAttributes(class [mscorlib]System.Collections.IList attributeList)
		{
			ret
		}
		.field static public literal string AvailableNamespacesPropertyName = "AvailableNamespaces"
		.field static public literal string ImportCollectionPropertyName = "Imports"
		.field static public literal string NamespacePropertyName = "Namespace"
		.property instance class [mscorlib]System.Type ComponentType()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.NamespaceListPropertyDescriptor::get_ComponentType()
		}
		.property instance bool IsBrowsable()
		{
			.get instance bool System.Activities.Presentation.NamespaceListPropertyDescriptor::get_IsBrowsable()
		}
		.property instance bool IsReadOnly()
		{
			.get instance bool System.Activities.Presentation.NamespaceListPropertyDescriptor::get_IsReadOnly()
		}
		.property instance class [mscorlib]System.Type PropertyType()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.NamespaceListPropertyDescriptor::get_PropertyType()
		}
	}
	.class private abstract sealed NamespaceSettingsHandler
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			void PreviewLoadRoot(object sender, class System.Activities.Presentation.WorkflowDesigner/PreviewLoadEventArgs args)
		{
			ret
		}
	}
	.class private NonTextualExpressionMorphHelper
		extends System.Activities.Presentation.Expressions.ExpressionMorphHelper
	{
		.method public virtual hidebysig 
			instance bool TryMorphExpression(class [System.Activities]System.Activities.ActivityWithResult expression, bool isLocationExpression, class [mscorlib]System.Type newType, class System.Activities.Presentation.EditingContext context, [out] class [System.Activities]System.Activities.ActivityWithResult& newExpression)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private sealed NotConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private sealed NullToBooleanConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed ObjectReferenceService
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.EditingContext context)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_SourceLocationUpdated(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.SourceLocationUpdatedEventArgs> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void remove_SourceLocationUpdated(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.SourceLocationUpdatedEventArgs> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance valuetype [mscorlib]System.Guid AcquireObjectReference(int32 startLine, int32 startColumn, int32 endLine, int32 endColumn)
		{
			ret
		}
		.method public hidebysig 
			instance valuetype [mscorlib]System.Guid AcquireObjectReference(object obj)
		{
			ret
		}
		.method public hidebysig 
			instance void ReleaseObjectReference(valuetype [mscorlib]System.Guid objectReferenceId)
		{
			ret
		}
		.method public hidebysig 
			instance bool TryGetObject(valuetype [mscorlib]System.Guid objectReferenceId, [out] object& obj)
		{
			ret
		}
		.method assembly hidebysig 
			instance void OnSaveCompleted()
		{
			ret
		}
		.event class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.SourceLocationUpdatedEventArgs> SourceLocationUpdated
		{
			.addon instance void System.Activities.Presentation.ObjectReferenceService::add_SourceLocationUpdated(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.SourceLocationUpdatedEventArgs>)
			.removeon instance void System.Activities.Presentation.ObjectReferenceService::remove_SourceLocationUpdated(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.SourceLocationUpdatedEventArgs>)
		}
	}
	.class private abstract OrderToken
		extends [mscorlib]System.Object
		implements class [mscorlib]'System.IComparable`1'<class System.Activities.Presentation.OrderToken>
	{
		.method family hidebysig specialname 
			instance void .ctor(valuetype System.Activities.Presentation.OrderTokenPrecedence precedence, class System.Activities.Presentation.OrderToken reference, valuetype System.Activities.Presentation.OrderTokenConflictResolution conflictResolution)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance int32 CompareTo(class System.Activities.Presentation.OrderToken other)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance int32 ResolveConflict(class System.Activities.Presentation.OrderToken left, class System.Activities.Presentation.OrderToken right)
		{
			ret
		}
	}
	.class private sealed OrderTokenConflictResolution
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Activities.Presentation.OrderTokenConflictResolution Lose = int32(0x00000001)
		.field static public literal valuetype System.Activities.Presentation.OrderTokenConflictResolution Win = int32(0x00000000)
	}
	.class private sealed OrderTokenPrecedence
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Activities.Presentation.OrderTokenPrecedence After = int32(0x00000001)
		.field static public literal valuetype System.Activities.Presentation.OrderTokenPrecedence Before = int32(0x00000000)
	}
	.class private sealed PropertyDescriptorData
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance class [mscorlib]System.Type get_OwnerType()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_OwnerType(class [mscorlib]System.Type 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_PropertyName()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_PropertyName(string 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Type get_PropertyType()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_PropertyType(class [mscorlib]System.Type 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Func`2'<class System.Activities.Presentation.DesignObjectWrapper,object> get_PropertyGetter()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_PropertyGetter(class [mscorlib]'System.Func`2'<class System.Activities.Presentation.DesignObjectWrapper,object> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Action`2'<class System.Activities.Presentation.DesignObjectWrapper,object> get_PropertySetter()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_PropertySetter(class [mscorlib]'System.Action`2'<class System.Activities.Presentation.DesignObjectWrapper,object> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Func`4'<class System.Activities.Presentation.DesignObjectWrapper,object,class [mscorlib]'System.Collections.Generic.List`1'<string>,bool> get_PropertyValidator()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_PropertyValidator(class [mscorlib]'System.Func`4'<class System.Activities.Presentation.DesignObjectWrapper,object,class [mscorlib]'System.Collections.Generic.List`1'<string>,bool> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Attribute[] get_PropertyAttributes()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_PropertyAttributes(class [mscorlib]System.Attribute[] 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class [mscorlib]System.Type OwnerType()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.PropertyDescriptorData::get_OwnerType()
			.set instance void System.Activities.Presentation.PropertyDescriptorData::set_OwnerType(class [mscorlib]System.Type)
		}
		.property instance class [mscorlib]System.Attribute[] PropertyAttributes()
		{
			.get instance class [mscorlib]System.Attribute[] System.Activities.Presentation.PropertyDescriptorData::get_PropertyAttributes()
			.set instance void System.Activities.Presentation.PropertyDescriptorData::set_PropertyAttributes(class [mscorlib]System.Attribute[])
		}
		.property instance class [mscorlib]'System.Func`2'<class System.Activities.Presentation.DesignObjectWrapper,object> PropertyGetter()
		{
			.get instance class [mscorlib]'System.Func`2'<class System.Activities.Presentation.DesignObjectWrapper,object> System.Activities.Presentation.PropertyDescriptorData::get_PropertyGetter()
			.set instance void System.Activities.Presentation.PropertyDescriptorData::set_PropertyGetter(class [mscorlib]'System.Func`2'<class System.Activities.Presentation.DesignObjectWrapper,object>)
		}
		.property instance string PropertyName()
		{
			.get instance string System.Activities.Presentation.PropertyDescriptorData::get_PropertyName()
			.set instance void System.Activities.Presentation.PropertyDescriptorData::set_PropertyName(string)
		}
		.property instance class [mscorlib]'System.Action`2'<class System.Activities.Presentation.DesignObjectWrapper,object> PropertySetter()
		{
			.get instance class [mscorlib]'System.Action`2'<class System.Activities.Presentation.DesignObjectWrapper,object> System.Activities.Presentation.PropertyDescriptorData::get_PropertySetter()
			.set instance void System.Activities.Presentation.PropertyDescriptorData::set_PropertySetter(class [mscorlib]'System.Action`2'<class System.Activities.Presentation.DesignObjectWrapper,object>)
		}
		.property instance class [mscorlib]System.Type PropertyType()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.PropertyDescriptorData::get_PropertyType()
			.set instance void System.Activities.Presentation.PropertyDescriptorData::set_PropertyType(class [mscorlib]System.Type)
		}
		.property instance class [mscorlib]'System.Func`4'<class System.Activities.Presentation.DesignObjectWrapper,object,class [mscorlib]'System.Collections.Generic.List`1'<string>,bool> PropertyValidator()
		{
			.get instance class [mscorlib]'System.Func`4'<class System.Activities.Presentation.DesignObjectWrapper,object,class [mscorlib]'System.Collections.Generic.List`1'<string>,bool> System.Activities.Presentation.PropertyDescriptorData::get_PropertyValidator()
			.set instance void System.Activities.Presentation.PropertyDescriptorData::set_PropertyValidator(class [mscorlib]'System.Func`4'<class System.Activities.Presentation.DesignObjectWrapper,object,class [mscorlib]'System.Collections.Generic.List`1'<string>,bool>)
		}
	}
	.class private abstract sealed PropertyReferenceUtilities
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			string GetPropertyReference(object 'instance', string targetProperty)
		{
			ret
		}
		.method public static hidebysig 
			void SetPropertyReference(object 'instance', string targetProperty, string sourceProperty)
		{
			ret
		}
	}
	.class public sealed PublishServiceCallback
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance object Invoke(class [mscorlib]System.Type serviceType)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(class [mscorlib]System.Type serviceType, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance object EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public sealed 'PublishServiceCallback`1'<'TServiceType'>
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance !0 Invoke()
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance !0 EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class private abstract sealed RetriableClipboard
		extends [mscorlib]System.Object
	{
		.method assembly static hidebysig 
			class [PresentationCore]System.Windows.IDataObject GetDataObject()
		{
			ret
		}
		.method assembly static hidebysig 
			void SetDataObject(object data, bool copy)
		{
			ret
		}
		.method assembly static hidebysig 
			void SetImage(class [PresentationCore]System.Windows.Media.Imaging.BitmapSource image)
		{
			ret
		}
	}
	.class private RootModelTypeDescriptionProvider
		extends [System]System.ComponentModel.TypeDescriptionProvider
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'instance')
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [System]System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor(class [mscorlib]System.Type objectType, object 'instance')
		{
			ret
		}
	}
	.class private RootModelTypeDescriptor
		extends [System]System.ComponentModel.CustomTypeDescriptor
	{
		.method public hidebysig specialname 
			instance void .ctor(class [System]System.ComponentModel.ICustomTypeDescriptor parent, object root)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [System]System.ComponentModel.PropertyDescriptorCollection GetProperties()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [System]System.ComponentModel.PropertyDescriptorCollection GetProperties(class [mscorlib]System.Attribute[] attributes)
		{
			ret
		}
	}
	.class private SR
		extends [mscorlib]System.Object
	{
		.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
		.method assembly hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			class [mscorlib]System.Resources.ResourceManager get_ResourceManager()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			class [mscorlib]System.Globalization.CultureInfo get_Culture()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			void set_Culture(class [mscorlib]System.Globalization.CultureInfo 'value')
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_ActivityLoadError()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_AddAnnotationDescription()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_AddAnnotationTitle()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_ArgumentAccessorGetterThrewException()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_ArgumentAccessorSetterThrewException()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_AttachedPropertyNameShouldNotBeEmpty()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_BoundsMustBeNonZero()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_CannotConstructConnectionSegment()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_CannotCreateInstance()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_CannotGetArgumentAccessorsForActivity()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_CannotMorphExpression()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_CannotPreserveDefaultValue()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_CannotResolveNamespace()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_CantEnableAnnotationBefore45()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_ChildValidationError()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_CollectionAddEditingScopeDescription()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_CollectionClearEditingScopeDescription()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_CollectionIsReadOnly()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_CollectionRemoveEditingScopeDescription()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_CouldNotChangeValueAfterInitialization()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_CouldNotGenerateView()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_CouldNotSetPropertyAfterLoad()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_CutCopyErrorActivityMessage()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_CutCopyRequiresDesignerView()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_CutOperationEditingScopeDescription()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_DefaultHelpUrl()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_DeleteAllAnnotationMessage()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_DeleteAllAnnotationsDescription()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_DeleteAnnotationDescription()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_DeleteAnnotationTitle()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_DeleteOperationEditingScopeDescription()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_DesignTimeValidationFeatureOnlyAppliesToType()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_DictionaryAddEditingScopeDescription()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_DictionaryClearEditingScopeDescription()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_DictionaryEditEditingScopeDescription()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_DictionaryRemoveEditingScopeDescription()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_DraggingMulitpleItemsError()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_DuplicateArgumentName()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_DuplicateIdentifier()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_DuplicateKey()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_DuplicateMember()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_DuplicateName()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_DuplicateVariableName()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_EditAnnotationTitle()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_ElementRepresentationExpected()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_ElementRepresentationExpectedAt()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_EmptyArgumentName()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_EmptyVariableName()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_Error_BadOutputFromSortSelectedItems()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_Error_CantFindItemInWIsP()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_Error_ItemNotOnView()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_Error_MovingMoreThanOneItemsFromICompositeView()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_ExpressionActivityEditorRequiresDefaultConstructor()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_ExpressionDefaultText()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_ExpressionTypeDonnotMatch()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_InvalidConstructorCall()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_InvalidExpressionEditorName()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_InvalidExpressionEditorNameToSet()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_InvalidExpressionEditorType()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_InvalidExpressionMorphHelperType()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_InvalidFlagName()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_InvalidIdentifier()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_InvalidNestedModelItemBeginEditExceptionMessage()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_InvalidXamlMemberName()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_KeyNotFound()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_MemberCanOnlyBeSetOnce()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_MemberOnBadTargetType()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_ModelItemPathArrayShouldNotBeEmpty()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_MoveEditingScopeDescription()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_NamespaceListArgumentMustBeNamespaceData()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_NamespaceListNoDuplicate()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_NoDefaultCtorError()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_NonRegisteredExpressionEditor()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_NonSupportedDynamicArgumentKeyType()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_NonSupportedDynamicArgumentType()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_NonSupportedModelItemCollectionOrDictionary()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_NonSupportedModelPropertyPathExpanderConverterConvertBack()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_NoTextInCollection()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_NoTextInProperty()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_NotifyAnnotationTextChangedDescription()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_NotSupportedFrameworkIdentifier()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_NotSupportedFrameworkProfile()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_NotSupportedFrameworkVersion()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_NotSupportedToolboxTypeFormatString()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_NoTypeConverter()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_PasteUndoDescription()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_PromotedPropertyNotFound()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_PropertyChangeEditingScopeDescription()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_PropertyDoesntExistFormatString()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_PropertyIsReadOnly()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_PropertyReferenceChangeEditingScopeDescription()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_SearchHintText()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_SeeErrorWindow()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_SourceReferenceIdNotFoundInWorkflow()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_ToolboxItemFrozenDescription()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_TypeBrowserError()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_TypeBrowserErrorMessageTitle()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_TypeDoesNotInheritFromActivity()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_TypeResolverError()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_TypeResolverErrorMessageTitle()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_TypeResolverWindowTitle()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_TypeResolvingOptionsArgumentExceptionMessage()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_UnassignableCollection()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_UnassignableObject()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_UndoEngine_NotDisposedBookmark()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_UndoEngine_OperationNotAllowed()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_UnknownContent()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_UnresolvedGenericType()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_UnresolvedMember()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_UnresolvedName()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_UnresolvedTypeInAssembly()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_UnresolvedTypeInNamespace()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_UnsupportedExpressionHintText()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_UntrustedSourceDetected()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_UpdateDynamicArgumentsDescription()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_ValidationDisabledWarning()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_ViewStateUndoUnitDescription()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_WarningFormat()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_WorkflowDesignerErrorPresenterTitle()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_WorkflowDesignerLoadShouldBeCalledFirst()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_WorkflowDesignerLoadShouldBeCalledOnlyOnce()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_WorkflowDesignerTextShouldNotBeNull()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_WrapInSequenceDescription()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_BreadCrumbObjectSeparator()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_ConnectorOfActivitiesAutomationName()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_ConnectorWithLabelAutomationName()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_DesignerContextMenuAutomationName()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_ZoomPickerEditorAutomationName()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_ExpandAllCollapseAllHelpTextFormat()
		{
			ret
		}
		.property string ActivityLoadError()
		{
			.get string 'System.Activities.Presentation.SR'::get_ActivityLoadError()
		}
		.property string AddAnnotationDescription()
		{
			.get string 'System.Activities.Presentation.SR'::get_AddAnnotationDescription()
		}
		.property string AddAnnotationTitle()
		{
			.get string 'System.Activities.Presentation.SR'::get_AddAnnotationTitle()
		}
		.property string ArgumentAccessorGetterThrewException()
		{
			.get string 'System.Activities.Presentation.SR'::get_ArgumentAccessorGetterThrewException()
		}
		.property string ArgumentAccessorSetterThrewException()
		{
			.get string 'System.Activities.Presentation.SR'::get_ArgumentAccessorSetterThrewException()
		}
		.property string AttachedPropertyNameShouldNotBeEmpty()
		{
			.get string 'System.Activities.Presentation.SR'::get_AttachedPropertyNameShouldNotBeEmpty()
		}
		.property string BoundsMustBeNonZero()
		{
			.get string 'System.Activities.Presentation.SR'::get_BoundsMustBeNonZero()
		}
		.property string BreadCrumbObjectSeparator()
		{
			.get string 'System.Activities.Presentation.SR'::get_BreadCrumbObjectSeparator()
		}
		.property string CannotConstructConnectionSegment()
		{
			.get string 'System.Activities.Presentation.SR'::get_CannotConstructConnectionSegment()
		}
		.property string CannotCreateInstance()
		{
			.get string 'System.Activities.Presentation.SR'::get_CannotCreateInstance()
		}
		.property string CannotGetArgumentAccessorsForActivity()
		{
			.get string 'System.Activities.Presentation.SR'::get_CannotGetArgumentAccessorsForActivity()
		}
		.property string CannotMorphExpression()
		{
			.get string 'System.Activities.Presentation.SR'::get_CannotMorphExpression()
		}
		.property string CannotPreserveDefaultValue()
		{
			.get string 'System.Activities.Presentation.SR'::get_CannotPreserveDefaultValue()
		}
		.property string CannotResolveNamespace()
		{
			.get string 'System.Activities.Presentation.SR'::get_CannotResolveNamespace()
		}
		.property string CantEnableAnnotationBefore45()
		{
			.get string 'System.Activities.Presentation.SR'::get_CantEnableAnnotationBefore45()
		}
		.property string ChildValidationError()
		{
			.get string 'System.Activities.Presentation.SR'::get_ChildValidationError()
		}
		.property string CollectionAddEditingScopeDescription()
		{
			.get string 'System.Activities.Presentation.SR'::get_CollectionAddEditingScopeDescription()
		}
		.property string CollectionClearEditingScopeDescription()
		{
			.get string 'System.Activities.Presentation.SR'::get_CollectionClearEditingScopeDescription()
		}
		.property string CollectionIsReadOnly()
		{
			.get string 'System.Activities.Presentation.SR'::get_CollectionIsReadOnly()
		}
		.property string CollectionRemoveEditingScopeDescription()
		{
			.get string 'System.Activities.Presentation.SR'::get_CollectionRemoveEditingScopeDescription()
		}
		.property string ConnectorOfActivitiesAutomationName()
		{
			.get string 'System.Activities.Presentation.SR'::get_ConnectorOfActivitiesAutomationName()
		}
		.property string ConnectorWithLabelAutomationName()
		{
			.get string 'System.Activities.Presentation.SR'::get_ConnectorWithLabelAutomationName()
		}
		.property string CouldNotChangeValueAfterInitialization()
		{
			.get string 'System.Activities.Presentation.SR'::get_CouldNotChangeValueAfterInitialization()
		}
		.property string CouldNotGenerateView()
		{
			.get string 'System.Activities.Presentation.SR'::get_CouldNotGenerateView()
		}
		.property string CouldNotSetPropertyAfterLoad()
		{
			.get string 'System.Activities.Presentation.SR'::get_CouldNotSetPropertyAfterLoad()
		}
		.property class [mscorlib]System.Globalization.CultureInfo Culture()
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(2) }
			.get class [mscorlib]System.Globalization.CultureInfo 'System.Activities.Presentation.SR'::get_Culture()
			.set void 'System.Activities.Presentation.SR'::set_Culture(class [mscorlib]System.Globalization.CultureInfo)
		}
		.property string CutCopyErrorActivityMessage()
		{
			.get string 'System.Activities.Presentation.SR'::get_CutCopyErrorActivityMessage()
		}
		.property string CutCopyRequiresDesignerView()
		{
			.get string 'System.Activities.Presentation.SR'::get_CutCopyRequiresDesignerView()
		}
		.property string CutOperationEditingScopeDescription()
		{
			.get string 'System.Activities.Presentation.SR'::get_CutOperationEditingScopeDescription()
		}
		.property string DefaultHelpUrl()
		{
			.get string 'System.Activities.Presentation.SR'::get_DefaultHelpUrl()
		}
		.property string DeleteAllAnnotationMessage()
		{
			.get string 'System.Activities.Presentation.SR'::get_DeleteAllAnnotationMessage()
		}
		.property string DeleteAllAnnotationsDescription()
		{
			.get string 'System.Activities.Presentation.SR'::get_DeleteAllAnnotationsDescription()
		}
		.property string DeleteAnnotationDescription()
		{
			.get string 'System.Activities.Presentation.SR'::get_DeleteAnnotationDescription()
		}
		.property string DeleteAnnotationTitle()
		{
			.get string 'System.Activities.Presentation.SR'::get_DeleteAnnotationTitle()
		}
		.property string DeleteOperationEditingScopeDescription()
		{
			.get string 'System.Activities.Presentation.SR'::get_DeleteOperationEditingScopeDescription()
		}
		.property string DesignTimeValidationFeatureOnlyAppliesToType()
		{
			.get string 'System.Activities.Presentation.SR'::get_DesignTimeValidationFeatureOnlyAppliesToType()
		}
		.property string DesignerContextMenuAutomationName()
		{
			.get string 'System.Activities.Presentation.SR'::get_DesignerContextMenuAutomationName()
		}
		.property string DictionaryAddEditingScopeDescription()
		{
			.get string 'System.Activities.Presentation.SR'::get_DictionaryAddEditingScopeDescription()
		}
		.property string DictionaryClearEditingScopeDescription()
		{
			.get string 'System.Activities.Presentation.SR'::get_DictionaryClearEditingScopeDescription()
		}
		.property string DictionaryEditEditingScopeDescription()
		{
			.get string 'System.Activities.Presentation.SR'::get_DictionaryEditEditingScopeDescription()
		}
		.property string DictionaryRemoveEditingScopeDescription()
		{
			.get string 'System.Activities.Presentation.SR'::get_DictionaryRemoveEditingScopeDescription()
		}
		.property string DraggingMulitpleItemsError()
		{
			.get string 'System.Activities.Presentation.SR'::get_DraggingMulitpleItemsError()
		}
		.property string DuplicateArgumentName()
		{
			.get string 'System.Activities.Presentation.SR'::get_DuplicateArgumentName()
		}
		.property string DuplicateIdentifier()
		{
			.get string 'System.Activities.Presentation.SR'::get_DuplicateIdentifier()
		}
		.property string DuplicateKey()
		{
			.get string 'System.Activities.Presentation.SR'::get_DuplicateKey()
		}
		.property string DuplicateMember()
		{
			.get string 'System.Activities.Presentation.SR'::get_DuplicateMember()
		}
		.property string DuplicateName()
		{
			.get string 'System.Activities.Presentation.SR'::get_DuplicateName()
		}
		.property string DuplicateVariableName()
		{
			.get string 'System.Activities.Presentation.SR'::get_DuplicateVariableName()
		}
		.property string EditAnnotationTitle()
		{
			.get string 'System.Activities.Presentation.SR'::get_EditAnnotationTitle()
		}
		.property string ElementRepresentationExpected()
		{
			.get string 'System.Activities.Presentation.SR'::get_ElementRepresentationExpected()
		}
		.property string ElementRepresentationExpectedAt()
		{
			.get string 'System.Activities.Presentation.SR'::get_ElementRepresentationExpectedAt()
		}
		.property string EmptyArgumentName()
		{
			.get string 'System.Activities.Presentation.SR'::get_EmptyArgumentName()
		}
		.property string EmptyVariableName()
		{
			.get string 'System.Activities.Presentation.SR'::get_EmptyVariableName()
		}
		.property string Error_BadOutputFromSortSelectedItems()
		{
			.get string 'System.Activities.Presentation.SR'::get_Error_BadOutputFromSortSelectedItems()
		}
		.property string Error_CantFindItemInWIsP()
		{
			.get string 'System.Activities.Presentation.SR'::get_Error_CantFindItemInWIsP()
		}
		.property string Error_ItemNotOnView()
		{
			.get string 'System.Activities.Presentation.SR'::get_Error_ItemNotOnView()
		}
		.property string Error_MovingMoreThanOneItemsFromICompositeView()
		{
			.get string 'System.Activities.Presentation.SR'::get_Error_MovingMoreThanOneItemsFromICompositeView()
		}
		.property string ExpandAllCollapseAllHelpTextFormat()
		{
			.get string 'System.Activities.Presentation.SR'::get_ExpandAllCollapseAllHelpTextFormat()
		}
		.property string ExpressionActivityEditorRequiresDefaultConstructor()
		{
			.get string 'System.Activities.Presentation.SR'::get_ExpressionActivityEditorRequiresDefaultConstructor()
		}
		.property string ExpressionDefaultText()
		{
			.get string 'System.Activities.Presentation.SR'::get_ExpressionDefaultText()
		}
		.property string ExpressionTypeDonnotMatch()
		{
			.get string 'System.Activities.Presentation.SR'::get_ExpressionTypeDonnotMatch()
		}
		.property string InvalidConstructorCall()
		{
			.get string 'System.Activities.Presentation.SR'::get_InvalidConstructorCall()
		}
		.property string InvalidExpressionEditorName()
		{
			.get string 'System.Activities.Presentation.SR'::get_InvalidExpressionEditorName()
		}
		.property string InvalidExpressionEditorNameToSet()
		{
			.get string 'System.Activities.Presentation.SR'::get_InvalidExpressionEditorNameToSet()
		}
		.property string InvalidExpressionEditorType()
		{
			.get string 'System.Activities.Presentation.SR'::get_InvalidExpressionEditorType()
		}
		.property string InvalidExpressionMorphHelperType()
		{
			.get string 'System.Activities.Presentation.SR'::get_InvalidExpressionMorphHelperType()
		}
		.property string InvalidFlagName()
		{
			.get string 'System.Activities.Presentation.SR'::get_InvalidFlagName()
		}
		.property string InvalidIdentifier()
		{
			.get string 'System.Activities.Presentation.SR'::get_InvalidIdentifier()
		}
		.property string InvalidNestedModelItemBeginEditExceptionMessage()
		{
			.get string 'System.Activities.Presentation.SR'::get_InvalidNestedModelItemBeginEditExceptionMessage()
		}
		.property string InvalidXamlMemberName()
		{
			.get string 'System.Activities.Presentation.SR'::get_InvalidXamlMemberName()
		}
		.property string KeyNotFound()
		{
			.get string 'System.Activities.Presentation.SR'::get_KeyNotFound()
		}
		.property string MemberCanOnlyBeSetOnce()
		{
			.get string 'System.Activities.Presentation.SR'::get_MemberCanOnlyBeSetOnce()
		}
		.property string MemberOnBadTargetType()
		{
			.get string 'System.Activities.Presentation.SR'::get_MemberOnBadTargetType()
		}
		.property string ModelItemPathArrayShouldNotBeEmpty()
		{
			.get string 'System.Activities.Presentation.SR'::get_ModelItemPathArrayShouldNotBeEmpty()
		}
		.property string MoveEditingScopeDescription()
		{
			.get string 'System.Activities.Presentation.SR'::get_MoveEditingScopeDescription()
		}
		.property string NamespaceListArgumentMustBeNamespaceData()
		{
			.get string 'System.Activities.Presentation.SR'::get_NamespaceListArgumentMustBeNamespaceData()
		}
		.property string NamespaceListNoDuplicate()
		{
			.get string 'System.Activities.Presentation.SR'::get_NamespaceListNoDuplicate()
		}
		.property string NoDefaultCtorError()
		{
			.get string 'System.Activities.Presentation.SR'::get_NoDefaultCtorError()
		}
		.property string NoTextInCollection()
		{
			.get string 'System.Activities.Presentation.SR'::get_NoTextInCollection()
		}
		.property string NoTextInProperty()
		{
			.get string 'System.Activities.Presentation.SR'::get_NoTextInProperty()
		}
		.property string NoTypeConverter()
		{
			.get string 'System.Activities.Presentation.SR'::get_NoTypeConverter()
		}
		.property string NonRegisteredExpressionEditor()
		{
			.get string 'System.Activities.Presentation.SR'::get_NonRegisteredExpressionEditor()
		}
		.property string NonSupportedDynamicArgumentKeyType()
		{
			.get string 'System.Activities.Presentation.SR'::get_NonSupportedDynamicArgumentKeyType()
		}
		.property string NonSupportedDynamicArgumentType()
		{
			.get string 'System.Activities.Presentation.SR'::get_NonSupportedDynamicArgumentType()
		}
		.property string NonSupportedModelItemCollectionOrDictionary()
		{
			.get string 'System.Activities.Presentation.SR'::get_NonSupportedModelItemCollectionOrDictionary()
		}
		.property string NonSupportedModelPropertyPathExpanderConverterConvertBack()
		{
			.get string 'System.Activities.Presentation.SR'::get_NonSupportedModelPropertyPathExpanderConverterConvertBack()
		}
		.property string NotSupportedFrameworkIdentifier()
		{
			.get string 'System.Activities.Presentation.SR'::get_NotSupportedFrameworkIdentifier()
		}
		.property string NotSupportedFrameworkProfile()
		{
			.get string 'System.Activities.Presentation.SR'::get_NotSupportedFrameworkProfile()
		}
		.property string NotSupportedFrameworkVersion()
		{
			.get string 'System.Activities.Presentation.SR'::get_NotSupportedFrameworkVersion()
		}
		.property string NotSupportedToolboxTypeFormatString()
		{
			.get string 'System.Activities.Presentation.SR'::get_NotSupportedToolboxTypeFormatString()
		}
		.property string NotifyAnnotationTextChangedDescription()
		{
			.get string 'System.Activities.Presentation.SR'::get_NotifyAnnotationTextChangedDescription()
		}
		.property string PasteUndoDescription()
		{
			.get string 'System.Activities.Presentation.SR'::get_PasteUndoDescription()
		}
		.property string PromotedPropertyNotFound()
		{
			.get string 'System.Activities.Presentation.SR'::get_PromotedPropertyNotFound()
		}
		.property string PropertyChangeEditingScopeDescription()
		{
			.get string 'System.Activities.Presentation.SR'::get_PropertyChangeEditingScopeDescription()
		}
		.property string PropertyDoesntExistFormatString()
		{
			.get string 'System.Activities.Presentation.SR'::get_PropertyDoesntExistFormatString()
		}
		.property string PropertyIsReadOnly()
		{
			.get string 'System.Activities.Presentation.SR'::get_PropertyIsReadOnly()
		}
		.property string PropertyReferenceChangeEditingScopeDescription()
		{
			.get string 'System.Activities.Presentation.SR'::get_PropertyReferenceChangeEditingScopeDescription()
		}
		.property class [mscorlib]System.Resources.ResourceManager ResourceManager()
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(2) }
			.get class [mscorlib]System.Resources.ResourceManager 'System.Activities.Presentation.SR'::get_ResourceManager()
		}
		.property string SearchHintText()
		{
			.get string 'System.Activities.Presentation.SR'::get_SearchHintText()
		}
		.property string SeeErrorWindow()
		{
			.get string 'System.Activities.Presentation.SR'::get_SeeErrorWindow()
		}
		.property string SourceReferenceIdNotFoundInWorkflow()
		{
			.get string 'System.Activities.Presentation.SR'::get_SourceReferenceIdNotFoundInWorkflow()
		}
		.property string ToolboxItemFrozenDescription()
		{
			.get string 'System.Activities.Presentation.SR'::get_ToolboxItemFrozenDescription()
		}
		.property string TypeBrowserError()
		{
			.get string 'System.Activities.Presentation.SR'::get_TypeBrowserError()
		}
		.property string TypeBrowserErrorMessageTitle()
		{
			.get string 'System.Activities.Presentation.SR'::get_TypeBrowserErrorMessageTitle()
		}
		.property string TypeDoesNotInheritFromActivity()
		{
			.get string 'System.Activities.Presentation.SR'::get_TypeDoesNotInheritFromActivity()
		}
		.property string TypeResolverError()
		{
			.get string 'System.Activities.Presentation.SR'::get_TypeResolverError()
		}
		.property string TypeResolverErrorMessageTitle()
		{
			.get string 'System.Activities.Presentation.SR'::get_TypeResolverErrorMessageTitle()
		}
		.property string TypeResolverWindowTitle()
		{
			.get string 'System.Activities.Presentation.SR'::get_TypeResolverWindowTitle()
		}
		.property string TypeResolvingOptionsArgumentExceptionMessage()
		{
			.get string 'System.Activities.Presentation.SR'::get_TypeResolvingOptionsArgumentExceptionMessage()
		}
		.property string UnassignableCollection()
		{
			.get string 'System.Activities.Presentation.SR'::get_UnassignableCollection()
		}
		.property string UnassignableObject()
		{
			.get string 'System.Activities.Presentation.SR'::get_UnassignableObject()
		}
		.property string UndoEngine_NotDisposedBookmark()
		{
			.get string 'System.Activities.Presentation.SR'::get_UndoEngine_NotDisposedBookmark()
		}
		.property string UndoEngine_OperationNotAllowed()
		{
			.get string 'System.Activities.Presentation.SR'::get_UndoEngine_OperationNotAllowed()
		}
		.property string UnknownContent()
		{
			.get string 'System.Activities.Presentation.SR'::get_UnknownContent()
		}
		.property string UnresolvedGenericType()
		{
			.get string 'System.Activities.Presentation.SR'::get_UnresolvedGenericType()
		}
		.property string UnresolvedMember()
		{
			.get string 'System.Activities.Presentation.SR'::get_UnresolvedMember()
		}
		.property string UnresolvedName()
		{
			.get string 'System.Activities.Presentation.SR'::get_UnresolvedName()
		}
		.property string UnresolvedTypeInAssembly()
		{
			.get string 'System.Activities.Presentation.SR'::get_UnresolvedTypeInAssembly()
		}
		.property string UnresolvedTypeInNamespace()
		{
			.get string 'System.Activities.Presentation.SR'::get_UnresolvedTypeInNamespace()
		}
		.property string UnsupportedExpressionHintText()
		{
			.get string 'System.Activities.Presentation.SR'::get_UnsupportedExpressionHintText()
		}
		.property string UntrustedSourceDetected()
		{
			.get string 'System.Activities.Presentation.SR'::get_UntrustedSourceDetected()
		}
		.property string UpdateDynamicArgumentsDescription()
		{
			.get string 'System.Activities.Presentation.SR'::get_UpdateDynamicArgumentsDescription()
		}
		.property string ValidationDisabledWarning()
		{
			.get string 'System.Activities.Presentation.SR'::get_ValidationDisabledWarning()
		}
		.property string ViewStateUndoUnitDescription()
		{
			.get string 'System.Activities.Presentation.SR'::get_ViewStateUndoUnitDescription()
		}
		.property string WarningFormat()
		{
			.get string 'System.Activities.Presentation.SR'::get_WarningFormat()
		}
		.property string WorkflowDesignerErrorPresenterTitle()
		{
			.get string 'System.Activities.Presentation.SR'::get_WorkflowDesignerErrorPresenterTitle()
		}
		.property string WorkflowDesignerLoadShouldBeCalledFirst()
		{
			.get string 'System.Activities.Presentation.SR'::get_WorkflowDesignerLoadShouldBeCalledFirst()
		}
		.property string WorkflowDesignerLoadShouldBeCalledOnlyOnce()
		{
			.get string 'System.Activities.Presentation.SR'::get_WorkflowDesignerLoadShouldBeCalledOnlyOnce()
		}
		.property string WorkflowDesignerTextShouldNotBeNull()
		{
			.get string 'System.Activities.Presentation.SR'::get_WorkflowDesignerTextShouldNotBeNull()
		}
		.property string WrapInSequenceDescription()
		{
			.get string 'System.Activities.Presentation.SR'::get_WrapInSequenceDescription()
		}
		.property string ZoomPickerEditorAutomationName()
		{
			.get string 'System.Activities.Presentation.SR'::get_ZoomPickerEditorAutomationName()
		}
	}
	.class public abstract ServiceManager
		extends [mscorlib]System.Object
		implements [mscorlib]System.IServiceProvider, class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class [mscorlib]System.Type>, [mscorlib]System.Collections.IEnumerable
	{
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig newslot abstract 
			instance bool Contains(class [mscorlib]System.Type serviceType)
		{
		}
		.method public hidebysig 
			instance bool Contains<'TServiceType'>()
		{
			ret
		}
		.method public hidebysig 
			instance !!0 GetRequiredService<'TServiceType'>()
		{
			ret
		}
		.method public hidebysig 
			instance !!0 GetService<'TServiceType'>()
		{
			ret
		}
		.method public virtual hidebysig newslot abstract 
			instance object GetService(class [mscorlib]System.Type serviceType)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]'System.Collections.Generic.IEnumerator`1'<class [mscorlib]System.Type> GetEnumerator()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Subscribe(class [mscorlib]System.Type serviceType, class System.Activities.Presentation.SubscribeServiceCallback callback)
		{
		}
		.method public hidebysig 
			instance void Subscribe<'TServiceType'>(class 'System.Activities.Presentation.SubscribeServiceCallback`1'<!!0> callback)
		{
			ret
		}
		.method public virtual hidebysig newslot abstract 
			instance void Publish(class [mscorlib]System.Type serviceType, class System.Activities.Presentation.PublishServiceCallback callback)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Publish(class [mscorlib]System.Type serviceType, object serviceInstance)
		{
		}
		.method public hidebysig 
			instance void Publish<'TServiceType'>(class 'System.Activities.Presentation.PublishServiceCallback`1'<!!0> callback)
		{
			ret
		}
		.method public hidebysig 
			instance void Publish<'TServiceType'>(!!0 serviceInstance)
		{
			ret
		}
		.method public hidebysig 
			instance void Unsubscribe<'TServiceType'>(class 'System.Activities.Presentation.SubscribeServiceCallback`1'<!!0> callback)
		{
			ret
		}
		.method public virtual hidebysig newslot abstract 
			instance void Unsubscribe(class [mscorlib]System.Type serviceType, class System.Activities.Presentation.SubscribeServiceCallback callback)
		{
		}
		.method family static hidebysig 
			object GetTarget(class [mscorlib]System.Delegate callback)
		{
			ret
		}
		.method family static hidebysig 
			class [mscorlib]System.Delegate RemoveCallback(class [mscorlib]System.Delegate existing, class [mscorlib]System.Delegate toRemove)
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			.override [mscorlib]System.Collections.IEnumerable::GetEnumerator
			ret
		}
	}
	.class private sealed ShowExpandedMultiValueConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IMultiValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object[] values, class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object[] ConvertBack(object 'value', class [mscorlib]System.Type[] targetTypes, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public SourceLocationUpdatedEventArgs
		extends [mscorlib]System.EventArgs
	{
		.method public hidebysig specialname 
			instance void .ctor(valuetype [mscorlib]System.Guid objectReference, class [System.Activities]System.Activities.Debugger.SourceLocation updatedSourceLocation)
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [mscorlib]System.Guid get_ObjectReference()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Activities]System.Activities.Debugger.SourceLocation get_UpdatedSourceLocation()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype [mscorlib]System.Guid ObjectReference()
		{
			.get instance valuetype [mscorlib]System.Guid System.Activities.Presentation.SourceLocationUpdatedEventArgs::get_ObjectReference()
		}
		.property instance class [System.Activities]System.Activities.Debugger.SourceLocation UpdatedSourceLocation()
		{
			.get instance class [System.Activities]System.Activities.Debugger.SourceLocation System.Activities.Presentation.SourceLocationUpdatedEventArgs::get_UpdatedSourceLocation()
		}
	}
	.class public sealed SubscribeContextCallback
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(class System.Activities.Presentation.ContextItem item)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(class System.Activities.Presentation.ContextItem item, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public sealed 'SubscribeContextCallback`1'<(System.Activities.Presentation.ContextItem) 'TContextItemType'>
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(!0 item)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(!0 item, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public sealed SubscribeServiceCallback
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(class [mscorlib]System.Type serviceType, object serviceInstance)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(class [mscorlib]System.Type serviceType, object serviceInstance, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public sealed 'SubscribeServiceCallback`1'<'TServiceType'>
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(!0 serviceInstance)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(!0 serviceInstance, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class private abstract sealed TargetFrameworkPropertyFilter
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			void FilterOut45Properties()
		{
			ret
		}
	}
	.class private TaskDispatcher
		extends [mscorlib]System.Object
	{
		.method assembly hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict 
			instance void DispatchWorkOnUIThread(valuetype [WindowsBase]System.Windows.Threading.DispatcherPriority priority, class [mscorlib]System.Delegate 'method')
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict 
			instance void DispatchWorkOnBackgroundThread(class [mscorlib]System.Threading.WaitCallback work, object state)
		{
			ret
		}
	}
	.class private TextExpressionNamespaceList
		extends System.Activities.Presentation.NamespaceList
	{
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]'System.Collections.Generic.IList`1'<string> importedNamespaces, class [mscorlib]'System.Collections.Generic.IList`1'<class [System.Activities]System.Activities.Expressions.AssemblyReference> references)
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.IList`1'<string> get_TextExpressionNamespaces()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.IList`1'<class [System.Activities]System.Activities.Expressions.AssemblyReference> get_TextExpressionReferences()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method family virtual hidebysig 
			instance void RemoveNamespaceFromSet(string ns)
		{
			ret
		}
		.method assembly hidebysig 
			instance void RemoveAssemblyFromSet(string 'assembly')
		{
			ret
		}
		.method family virtual hidebysig 
			instance void AddCore(class System.Activities.Presentation.NamespaceData ns)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void ClearCore()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void InsertCore(int32 index, class System.Activities.Presentation.NamespaceData ns)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void SetValueAt(int32 index, class System.Activities.Presentation.NamespaceData ns)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void UpdateAssemblyInfoCore(string importedNamespace)
		{
			ret
		}
		.property instance class [mscorlib]'System.Collections.Generic.IList`1'<string> TextExpressionNamespaces()
		{
			.get instance class [mscorlib]'System.Collections.Generic.IList`1'<string> System.Activities.Presentation.TextExpressionNamespaceList::get_TextExpressionNamespaces()
		}
		.property instance class [mscorlib]'System.Collections.Generic.IList`1'<class [System.Activities]System.Activities.Expressions.AssemblyReference> TextExpressionReferences()
		{
			.get instance class [mscorlib]'System.Collections.Generic.IList`1'<class [System.Activities]System.Activities.Expressions.AssemblyReference> System.Activities.Presentation.TextExpressionNamespaceList::get_TextExpressionReferences()
		}
	}
	.class private sealed TextFormattingConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private sealed TypeNameConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private sealed TypePropertyEditor
		extends System.Activities.Presentation.PropertyEditing.PropertyValueEditor
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.field static public literal string AllowNull = "AllowNull"
		.field static public literal string BrowseTypeDirectly = "BrowseTypeDirectly"
		.field static public literal string Filter = "Filter"
	}
	.class public sealed TypeResolvingOptionsAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = { int32(4) property bool AllowMultiple = bool(false) }
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.View.TypeResolvingOptions get_TypeResolvingOptions()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_TypeResolvingOptions(class System.Activities.Presentation.View.TypeResolvingOptions 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.View.TypeResolvingOptions options)
		{
			ret
		}
		.property instance class System.Activities.Presentation.View.TypeResolvingOptions TypeResolvingOptions()
		{
			.get instance class System.Activities.Presentation.View.TypeResolvingOptions System.Activities.Presentation.TypeResolvingOptionsAttribute::get_TypeResolvingOptions()
			.set instance void System.Activities.Presentation.TypeResolvingOptionsAttribute::set_TypeResolvingOptions(class System.Activities.Presentation.View.TypeResolvingOptions)
		}
	}
	.class private abstract sealed TypeUtilities
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			bool CanSubstituteGenericParameter(class [mscorlib]System.Type genericParameter, class [mscorlib]System.Type candidate)
		{
			ret
		}
		.method public static hidebysig 
			bool CanCreateInstanceUsingDefaultConstructor(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public static hidebysig 
			bool IsTypeCompatible(class [mscorlib]System.Type childObjectType, class [mscorlib]System.Type parentObjectType)
		{
			ret
		}
	}
	.class public UndoEngine
		extends [mscorlib]System.Object
		implements System.Activities.Presentation.IUndoEngineOperations
	{
		.class nested assembly sealed Bookmark
			extends [mscorlib]System.Object
			implements [mscorlib]System.IDisposable, System.Activities.Presentation.IUndoEngineOperations
		{
			.method assembly hidebysig specialname 
				instance void .ctor(class System.Activities.Presentation.UndoEngine undoEngine, class System.Activities.Presentation.BookmarkUndoUnit undoUnit)
			{
				ret
			}
			.method public hidebysig 
				instance void CommitBookmark()
			{
				ret
			}
			.method public hidebysig 
				instance void RollbackBookmark()
			{
				ret
			}
			.method public final virtual hidebysig newslot 
				instance void Dispose()
			{
				ret
			}
			.method private final virtual hidebysig newslot 
				instance void System.Activities.Presentation.IUndoEngineOperations.AddUndoUnitCore(class System.Activities.Presentation.UndoUnit unit)
			{
				.override System.Activities.Presentation.IUndoEngineOperations::AddUndoUnitCore
				ret
			}
			.method private final virtual hidebysig newslot 
				instance bool System.Activities.Presentation.IUndoEngineOperations.UndoCore()
			{
				.override System.Activities.Presentation.IUndoEngineOperations::UndoCore
				ret
			}
			.method private final virtual hidebysig newslot 
				instance bool System.Activities.Presentation.IUndoEngineOperations.RedoCore()
			{
				.override System.Activities.Presentation.IUndoEngineOperations::RedoCore
				ret
			}
		}
		.method public hidebysig specialname 
			instance void add_UndoUnitAdded(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.UndoUnitEventArgs> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void remove_UndoUnitAdded(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.UndoUnitEventArgs> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void add_UndoCompleted(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.UndoUnitEventArgs> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void remove_UndoCompleted(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.UndoUnitEventArgs> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void add_RedoCompleted(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.UndoUnitEventArgs> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void remove_RedoCompleted(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.UndoUnitEventArgs> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void add_UndoUnitCancelled(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.UndoUnitEventArgs> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void remove_UndoUnitCancelled(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.UndoUnitEventArgs> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void add_UndoUnitDiscarded(class [mscorlib]System.EventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void remove_UndoUnitDiscarded(class [mscorlib]System.EventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void add_UndoRedoBufferChanged(class [mscorlib]System.EventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void remove_UndoRedoBufferChanged(class [mscorlib]System.EventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.EditingContext context)
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance bool get_IsBookmarkInPlace()
		{
			ret
		}
		.method assembly hidebysig 
			instance class System.Activities.Presentation.Model.ImmediateEditingScope CreateImmediateEditingScope(string bookmarkName, class System.Activities.Presentation.Model.ModelTreeManager modelTreeManager)
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<string> GetUndoActions()
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<string> GetRedoActions()
		{
			ret
		}
		.method public hidebysig 
			instance void AddUndoUnit(class System.Activities.Presentation.UndoUnit unit)
		{
			ret
		}
		.method public hidebysig 
			instance bool Undo()
		{
			ret
		}
		.method public hidebysig 
			instance bool Redo()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsUndoRedoInProgress()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Activities.Presentation.IUndoEngineOperations.AddUndoUnitCore(class System.Activities.Presentation.UndoUnit unit)
		{
			.override System.Activities.Presentation.IUndoEngineOperations::AddUndoUnitCore
			ret
		}
		.method private final virtual hidebysig newslot 
			instance bool System.Activities.Presentation.IUndoEngineOperations.UndoCore()
		{
			.override System.Activities.Presentation.IUndoEngineOperations::UndoCore
			ret
		}
		.method private final virtual hidebysig newslot 
			instance bool System.Activities.Presentation.IUndoEngineOperations.RedoCore()
		{
			.override System.Activities.Presentation.IUndoEngineOperations::RedoCore
			ret
		}
		.event class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.UndoUnitEventArgs> RedoCompleted
		{
			.addon instance void System.Activities.Presentation.UndoEngine::add_RedoCompleted(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.UndoUnitEventArgs>)
			.removeon instance void System.Activities.Presentation.UndoEngine::remove_RedoCompleted(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.UndoUnitEventArgs>)
		}
		.event class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.UndoUnitEventArgs> UndoCompleted
		{
			.addon instance void System.Activities.Presentation.UndoEngine::add_UndoCompleted(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.UndoUnitEventArgs>)
			.removeon instance void System.Activities.Presentation.UndoEngine::remove_UndoCompleted(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.UndoUnitEventArgs>)
		}
		.event [mscorlib]System.EventHandler UndoRedoBufferChanged
		{
			.addon instance void System.Activities.Presentation.UndoEngine::add_UndoRedoBufferChanged(class [mscorlib]System.EventHandler)
			.removeon instance void System.Activities.Presentation.UndoEngine::remove_UndoRedoBufferChanged(class [mscorlib]System.EventHandler)
		}
		.event class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.UndoUnitEventArgs> UndoUnitAdded
		{
			.addon instance void System.Activities.Presentation.UndoEngine::add_UndoUnitAdded(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.UndoUnitEventArgs>)
			.removeon instance void System.Activities.Presentation.UndoEngine::remove_UndoUnitAdded(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.UndoUnitEventArgs>)
		}
		.event class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.UndoUnitEventArgs> UndoUnitCancelled
		{
			.addon instance void System.Activities.Presentation.UndoEngine::add_UndoUnitCancelled(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.UndoUnitEventArgs>)
			.removeon instance void System.Activities.Presentation.UndoEngine::remove_UndoUnitCancelled(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.UndoUnitEventArgs>)
		}
		.event [mscorlib]System.EventHandler UndoUnitDiscarded
		{
			.addon instance void System.Activities.Presentation.UndoEngine::add_UndoUnitDiscarded(class [mscorlib]System.EventHandler)
			.removeon instance void System.Activities.Presentation.UndoEngine::remove_UndoUnitDiscarded(class [mscorlib]System.EventHandler)
		}
		.property instance bool IsBookmarkInPlace()
		{
			.get instance bool System.Activities.Presentation.UndoEngine::get_IsBookmarkInPlace()
		}
		.property instance bool IsUndoRedoInProgress()
		{
			.get instance bool System.Activities.Presentation.UndoEngine::get_IsUndoRedoInProgress()
		}
	}
	.class public abstract UndoUnit
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance string get_Description()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_Description(string 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public virtual hidebysig newslot abstract 
			instance void Redo()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Undo()
		{
		}
		.method family hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.EditingContext context)
		{
			ret
		}
		.method family hidebysig 
			instance void SaveGlobalState()
		{
			ret
		}
		.method family hidebysig 
			instance void ApplyGlobalState()
		{
			ret
		}
		.property instance string Description()
		{
			.get instance string System.Activities.Presentation.UndoUnit::get_Description()
			.set instance void System.Activities.Presentation.UndoUnit::set_Description(string)
		}
	}
	.class public UndoUnitEventArgs
		extends [mscorlib]System.EventArgs
	{
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.UndoUnit get_UndoUnit()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_UndoUnit(class System.Activities.Presentation.UndoUnit 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class System.Activities.Presentation.UndoUnit UndoUnit()
		{
			.get instance class System.Activities.Presentation.UndoUnit System.Activities.Presentation.UndoUnitEventArgs::get_UndoUnit()
			.set instance void System.Activities.Presentation.UndoUnitEventArgs::set_UndoUnit(class System.Activities.Presentation.UndoUnit)
		}
	}
	.class private UpdatableGenericArgumentsFeature
		extends System.Activities.Presentation.Feature
	{
		.method public virtual hidebysig 
			instance void Initialize(class System.Activities.Presentation.EditingContext context, class [mscorlib]System.Type modelType)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private VBIdentifierNameEditor
		extends System.Activities.Presentation.PropertyEditing.PropertyValueEditor
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private abstract ValidationErrorSourceLocatorFeature
		extends System.Activities.Presentation.Feature
	{
		.method family virtual hidebysig newslot abstract specialname 
			instance class System.Activities.Presentation.Validation.IValidationErrorSourceLocator get_ValidationErrorSourceLocator()
		{
		}
		.method public virtual hidebysig 
			instance void Initialize(class System.Activities.Presentation.EditingContext context, class [mscorlib]System.Type modelType)
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class System.Activities.Presentation.Validation.IValidationErrorSourceLocator ValidationErrorSourceLocator()
		{
			.get instance class System.Activities.Presentation.Validation.IValidationErrorSourceLocator System.Activities.Presentation.ValidationErrorSourceLocatorFeature::get_ValidationErrorSourceLocator()
		}
	}
	.class private VariableExpressionConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private VerticalConnector
		extends [PresentationFramework]System.Windows.Controls.UserControl
		implements [System.Xaml]System.Windows.Markup.IComponentConnector
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnDragEnter(class [PresentationCore]System.Windows.DragEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnDragLeave(class [PresentationCore]System.Windows.DragEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnDrop(class [PresentationCore]System.Windows.DragEventArgs e)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void InitializeComponent()
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Windows.Markup.IComponentConnector.Connect(int32 connectionId, object target)
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.override [System.Xaml]System.Windows.Markup.IComponentConnector::Connect
			ret
		}
		.field assembly class [PresentationFramework]System.Windows.Media.Animation.BeginStoryboard Collapse_BeginStoryboardOnDrop
		.field assembly class [PresentationFramework]System.Windows.Shapes.Rectangle dropTarget
	}
	.class private abstract ViewModel
		extends [mscorlib]System.Object
		implements [System]System.ComponentModel.INotifyPropertyChanged
	{
		.method public final virtual hidebysig newslot specialname 
			instance void add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method family hidebysig 
			instance void NotifyPropertyChanged(string propertyName)
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.event [System]System.ComponentModel.PropertyChangedEventHandler PropertyChanged
		{
			.addon instance void System.Activities.Presentation.ViewModel::add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
			.removeon instance void System.Activities.Presentation.ViewModel::remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
		}
	}
	.class private abstract ViewStateAttachedPropertyFeature
		extends System.Activities.Presentation.Feature
	{
		.method public final virtual hidebysig 
			instance void Initialize(class System.Activities.Presentation.EditingContext context, class [mscorlib]System.Type modelType)
		{
			ret
		}
		.method family virtual hidebysig newslot abstract specialname 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.AttachedPropertyInfo> get_AttachedProperties()
		{
		}
		.method assembly hidebysig 
			instance void RegisterAttachedProperty<'T'>(string propertyName, bool isBrowsable, bool isVisibleToModelItem, !!0 defaultValue)
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.AttachedPropertyInfo> AttachedProperties()
		{
			.get instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.AttachedPropertyInfo> System.Activities.Presentation.ViewStateAttachedPropertyFeature::get_AttachedProperties()
		}
	}
	.class private VisualBasicExpressionMorphHelper
		extends System.Activities.Presentation.Expressions.ExpressionMorphHelper
	{
		.method public virtual hidebysig 
			instance bool TryInferReturnType(class [System.Activities]System.Activities.ActivityWithResult expression, class System.Activities.Presentation.EditingContext context, [out] class [mscorlib]System.Type& returnType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool TryMorphExpression(class [System.Activities]System.Activities.ActivityWithResult expression, bool isLocationExpression, class [mscorlib]System.Type newType, class System.Activities.Presentation.EditingContext context, [out] class [System.Activities]System.Activities.ActivityWithResult& newExpression)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private VisualBasicNamespaceList
		extends System.Activities.Presentation.NamespaceList
	{
		.method public hidebysig specialname 
			instance void .ctor(class [System]'System.Collections.Generic.ISet`1'<class [System.Activities]Microsoft.VisualBasic.Activities.VisualBasicImportReference> importReferences)
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class [System]'System.Collections.Generic.ISet`1'<class [System.Activities]Microsoft.VisualBasic.Activities.VisualBasicImportReference> get_VisualBasicImports()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method family virtual hidebysig 
			instance void UpdateAssemblyInfoCore(string importedNamespace)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void RemoveNamespaceFromSet(string ns)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void AddCore(class System.Activities.Presentation.NamespaceData ns)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void ClearCore()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void InsertCore(int32 index, class System.Activities.Presentation.NamespaceData ns)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void SetValueAt(int32 index, class System.Activities.Presentation.NamespaceData ns)
		{
			ret
		}
		.property instance class [System]'System.Collections.Generic.ISet`1'<class [System.Activities]Microsoft.VisualBasic.Activities.VisualBasicImportReference> VisualBasicImports()
		{
			.get instance class [System]'System.Collections.Generic.ISet`1'<class [System.Activities]Microsoft.VisualBasic.Activities.VisualBasicImportReference> System.Activities.Presentation.VisualBasicNamespaceList::get_VisualBasicImports()
		}
	}
	.class public WorkflowDesigner
		extends [mscorlib]System.Object
		implements Microsoft.Activities.Presentation.Xaml.IWorkflowDesignerXamlHelperExecutionContext
	{
		.class nested assembly PreviewLoadEventArgs
			extends [mscorlib]System.EventArgs
		{
			.method public hidebysig specialname 
				instance void .ctor(object 'instance', class System.Activities.Presentation.EditingContext context)
			{
				ret
			}
			.method public hidebysig specialname 
				instance object get_Instance()
			{
				ret
			}
			.method public hidebysig specialname 
				instance class System.Activities.Presentation.EditingContext get_Context()
			{
				ret
			}
			.property instance class System.Activities.Presentation.EditingContext Context()
			{
				.get instance class System.Activities.Presentation.EditingContext System.Activities.Presentation.WorkflowDesigner/PreviewLoadEventArgs::get_Context()
			}
			.property instance object Instance()
			{
				.get instance object System.Activities.Presentation.WorkflowDesigner/PreviewLoadEventArgs::get_Instance()
			}
		}
		.method public hidebysig specialname 
			instance void add_TextChanged(class [PresentationFramework]System.Windows.Controls.TextChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void remove_TextChanged(class [PresentationFramework]System.Windows.Controls.TextChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void add_ModelChanged(class [mscorlib]System.EventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void remove_ModelChanged(class [mscorlib]System.EventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void add_PreviewLoad(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.WorkflowDesigner/PreviewLoadEventArgs> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void remove_PreviewLoad(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.WorkflowDesigner/PreviewLoadEventArgs> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class System.Activities.Presentation.Validation.ValidationService get_ValidationService()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class System.Activities.Presentation.ObjectReferenceService get_ObjectReferenceService()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationCore]System.Windows.UIElement get_View()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationCore]System.Windows.UIElement get_PropertyInspectorView()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationCore]System.Windows.UIElement get_OutlineView()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.EditingContext get_Context()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationFramework]System.Windows.Controls.ContextMenu get_ContextMenu()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Text()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Text(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_PropertyInspectorFontAndColorData(string 'value')
		{
			ret
		}
		.method public hidebysig 
			instance bool IsInErrorState()
		{
			ret
		}
		.method public hidebysig 
			instance void Load()
		{
			ret
		}
		.method public hidebysig 
			instance void Load(string fileName)
		{
			ret
		}
		.method public hidebysig 
			instance void Load(object 'instance')
		{
			ret
		}
		.method public hidebysig 
			instance void Save(string fileName)
		{
			ret
		}
		.method public hidebysig 
			instance void Flush()
		{
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance class [System]System.Runtime.Versioning.FrameworkName Microsoft.Activities.Presentation.Xaml.IWorkflowDesignerXamlHelperExecutionContext.get_FrameworkName()
		{
			.override Microsoft.Activities.Presentation.Xaml.IWorkflowDesignerXamlHelperExecutionContext::get_FrameworkName
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance class Microsoft.Activities.Presentation.Xaml.WorkflowDesignerXamlSchemaContext Microsoft.Activities.Presentation.Xaml.IWorkflowDesignerXamlHelperExecutionContext.get_XamlSchemaContext()
		{
			.override Microsoft.Activities.Presentation.Xaml.IWorkflowDesignerXamlHelperExecutionContext::get_XamlSchemaContext
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance class Microsoft.Activities.Presentation.Xaml.ViewStateIdManager Microsoft.Activities.Presentation.Xaml.IWorkflowDesignerXamlHelperExecutionContext.get_IdManager()
		{
			.override Microsoft.Activities.Presentation.Xaml.IWorkflowDesignerXamlHelperExecutionContext::get_IdManager
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance class [System.Activities]System.Activities.Debugger.Symbol.WorkflowSymbol Microsoft.Activities.Presentation.Xaml.IWorkflowDesignerXamlHelperExecutionContext.get_LastWorkflowSymbol()
		{
			.override Microsoft.Activities.Presentation.Xaml.IWorkflowDesignerXamlHelperExecutionContext::get_LastWorkflowSymbol
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance void Microsoft.Activities.Presentation.Xaml.IWorkflowDesignerXamlHelperExecutionContext.set_LastWorkflowSymbol(class [System.Activities]System.Activities.Debugger.Symbol.WorkflowSymbol 'value')
		{
			.override Microsoft.Activities.Presentation.Xaml.IWorkflowDesignerXamlHelperExecutionContext::set_LastWorkflowSymbol
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void Microsoft.Activities.Presentation.Xaml.IWorkflowDesignerXamlHelperExecutionContext.OnSerializationCompleted(class [mscorlib]'System.Collections.Generic.Dictionary`2'<object,object> sourceLocationObjectToModelItemObjectMapping)
		{
			.override Microsoft.Activities.Presentation.Xaml.IWorkflowDesignerXamlHelperExecutionContext::OnSerializationCompleted
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void Microsoft.Activities.Presentation.Xaml.IWorkflowDesignerXamlHelperExecutionContext.OnBeforeDeserialize()
		{
			.override Microsoft.Activities.Presentation.Xaml.IWorkflowDesignerXamlHelperExecutionContext::OnBeforeDeserialize
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void Microsoft.Activities.Presentation.Xaml.IWorkflowDesignerXamlHelperExecutionContext.OnSourceLocationFound(object target, class [System.Activities]System.Activities.Debugger.SourceLocation sourceLocationFound)
		{
			.override Microsoft.Activities.Presentation.Xaml.IWorkflowDesignerXamlHelperExecutionContext::OnSourceLocationFound
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void Microsoft.Activities.Presentation.Xaml.IWorkflowDesignerXamlHelperExecutionContext.OnAfterDeserialize(class [mscorlib]'System.Collections.Generic.Dictionary`2'<string,class [System.Activities]System.Activities.Debugger.SourceLocation> viewStateDataSourceLocationMapping)
		{
			.override Microsoft.Activities.Presentation.Xaml.IWorkflowDesignerXamlHelperExecutionContext::OnAfterDeserialize
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance string Microsoft.Activities.Presentation.Xaml.IWorkflowDesignerXamlHelperExecutionContext.get_LocalAssemblyName()
		{
			.override Microsoft.Activities.Presentation.Xaml.IWorkflowDesignerXamlHelperExecutionContext::get_LocalAssemblyName
			ret
		}
		.method assembly hidebysig 
			instance object DeserializeString(string text)
		{
			ret
		}
		.method assembly hidebysig 
			instance object DeserializeString(string text, [out] class [mscorlib]'System.Collections.Generic.IList`1'<class System.Activities.Presentation.XamlLoadErrorInfo>& loadErrors, [out] class [mscorlib]'System.Collections.Generic.Dictionary`2'<object,class [System.Activities]System.Activities.Debugger.SourceLocation>& sourceLocations)
		{
			ret
		}
		.method assembly hidebysig 
			instance string SerializeToString(object obj, [opt] string fileName)
		{
			.param [2] = nullref
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Debug.IDesignerDebugView get_DebugManagerView()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class System.Activities.Presentation.Xaml.ObjectToSourceLocationMapping get_ObjectToSourceLocationMapping()
		{
			ret
		}
		.method assembly static hidebysig 
			class [System]System.Runtime.Versioning.FrameworkName GetTargetFramework(class System.Activities.Presentation.EditingContext context)
		{
			ret
		}
		.event [mscorlib]System.EventHandler ModelChanged
		{
			.addon instance void System.Activities.Presentation.WorkflowDesigner::add_ModelChanged(class [mscorlib]System.EventHandler)
			.removeon instance void System.Activities.Presentation.WorkflowDesigner::remove_ModelChanged(class [mscorlib]System.EventHandler)
		}
		.event class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.WorkflowDesigner/PreviewLoadEventArgs> PreviewLoad
		{
			.addon instance void System.Activities.Presentation.WorkflowDesigner::add_PreviewLoad(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.WorkflowDesigner/PreviewLoadEventArgs>)
			.removeon instance void System.Activities.Presentation.WorkflowDesigner::remove_PreviewLoad(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.WorkflowDesigner/PreviewLoadEventArgs>)
		}
		.event [PresentationFramework]System.Windows.Controls.TextChangedEventHandler TextChanged
		{
			.addon instance void System.Activities.Presentation.WorkflowDesigner::add_TextChanged(class [PresentationFramework]System.Windows.Controls.TextChangedEventHandler)
			.removeon instance void System.Activities.Presentation.WorkflowDesigner::remove_TextChanged(class [PresentationFramework]System.Windows.Controls.TextChangedEventHandler)
		}
		.property instance class System.Activities.Presentation.EditingContext Context()
		{
			.get instance class System.Activities.Presentation.EditingContext System.Activities.Presentation.WorkflowDesigner::get_Context()
		}
		.property instance class [PresentationFramework]System.Windows.Controls.ContextMenu ContextMenu()
		{
			.get instance class [PresentationFramework]System.Windows.Controls.ContextMenu System.Activities.Presentation.WorkflowDesigner::get_ContextMenu()
		}
		.property instance class System.Activities.Presentation.Debug.IDesignerDebugView DebugManagerView()
		{
			.get instance class System.Activities.Presentation.Debug.IDesignerDebugView System.Activities.Presentation.WorkflowDesigner::get_DebugManagerView()
		}
		.property instance class [System]System.Runtime.Versioning.FrameworkName Microsoft.Activities.Presentation.Xaml.IWorkflowDesignerXamlHelperExecutionContext.FrameworkName()
		{
			.get instance class [System]System.Runtime.Versioning.FrameworkName System.Activities.Presentation.WorkflowDesigner::Microsoft.Activities.Presentation.Xaml.IWorkflowDesignerXamlHelperExecutionContext.get_FrameworkName()
		}
		.property instance class Microsoft.Activities.Presentation.Xaml.ViewStateIdManager Microsoft.Activities.Presentation.Xaml.IWorkflowDesignerXamlHelperExecutionContext.IdManager()
		{
			.get instance class Microsoft.Activities.Presentation.Xaml.ViewStateIdManager System.Activities.Presentation.WorkflowDesigner::Microsoft.Activities.Presentation.Xaml.IWorkflowDesignerXamlHelperExecutionContext.get_IdManager()
		}
		.property instance class [System.Activities]System.Activities.Debugger.Symbol.WorkflowSymbol Microsoft.Activities.Presentation.Xaml.IWorkflowDesignerXamlHelperExecutionContext.LastWorkflowSymbol()
		{
			.get instance class [System.Activities]System.Activities.Debugger.Symbol.WorkflowSymbol System.Activities.Presentation.WorkflowDesigner::Microsoft.Activities.Presentation.Xaml.IWorkflowDesignerXamlHelperExecutionContext.get_LastWorkflowSymbol()
			.set instance void System.Activities.Presentation.WorkflowDesigner::Microsoft.Activities.Presentation.Xaml.IWorkflowDesignerXamlHelperExecutionContext.set_LastWorkflowSymbol(class [System.Activities]System.Activities.Debugger.Symbol.WorkflowSymbol)
		}
		.property instance string Microsoft.Activities.Presentation.Xaml.IWorkflowDesignerXamlHelperExecutionContext.LocalAssemblyName()
		{
			.get instance string System.Activities.Presentation.WorkflowDesigner::Microsoft.Activities.Presentation.Xaml.IWorkflowDesignerXamlHelperExecutionContext.get_LocalAssemblyName()
		}
		.property instance class Microsoft.Activities.Presentation.Xaml.WorkflowDesignerXamlSchemaContext Microsoft.Activities.Presentation.Xaml.IWorkflowDesignerXamlHelperExecutionContext.XamlSchemaContext()
		{
			.get instance class Microsoft.Activities.Presentation.Xaml.WorkflowDesignerXamlSchemaContext System.Activities.Presentation.WorkflowDesigner::Microsoft.Activities.Presentation.Xaml.IWorkflowDesignerXamlHelperExecutionContext.get_XamlSchemaContext()
		}
		.property instance class System.Activities.Presentation.ObjectReferenceService ObjectReferenceService()
		{
			.get instance class System.Activities.Presentation.ObjectReferenceService System.Activities.Presentation.WorkflowDesigner::get_ObjectReferenceService()
		}
		.property instance class System.Activities.Presentation.Xaml.ObjectToSourceLocationMapping ObjectToSourceLocationMapping()
		{
			.get instance class System.Activities.Presentation.Xaml.ObjectToSourceLocationMapping System.Activities.Presentation.WorkflowDesigner::get_ObjectToSourceLocationMapping()
		}
		.property instance class [PresentationCore]System.Windows.UIElement OutlineView()
		{
			.get instance class [PresentationCore]System.Windows.UIElement System.Activities.Presentation.WorkflowDesigner::get_OutlineView()
		}
		.property instance string PropertyInspectorFontAndColorData()
		{
			.set instance void System.Activities.Presentation.WorkflowDesigner::set_PropertyInspectorFontAndColorData(string)
		}
		.property instance class [PresentationCore]System.Windows.UIElement PropertyInspectorView()
		{
			.get instance class [PresentationCore]System.Windows.UIElement System.Activities.Presentation.WorkflowDesigner::get_PropertyInspectorView()
		}
		.property instance string Text()
		{
			.get instance string System.Activities.Presentation.WorkflowDesigner::get_Text()
			.set instance void System.Activities.Presentation.WorkflowDesigner::set_Text(string)
		}
		.property instance class System.Activities.Presentation.Validation.ValidationService ValidationService()
		{
			.get instance class System.Activities.Presentation.Validation.ValidationService System.Activities.Presentation.WorkflowDesigner::get_ValidationService()
		}
		.property instance class [PresentationCore]System.Windows.UIElement View()
		{
			.get instance class [PresentationCore]System.Windows.UIElement System.Activities.Presentation.WorkflowDesigner::get_View()
		}
	}
	.class public abstract sealed WorkflowDesignerColors
		extends [mscorlib]System.Object
	{
		.method public static hidebysig specialname 
			string get_PropertyInspectorTextBrushKey()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_PropertyInspectorSelectedForegroundBrushKey()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_PropertyInspectorSelectedBackgroundBrushKey()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_PropertyInspectorBackgroundBrushKey()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_PropertyInspectorBorderBrushKey()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_PropertyInspectorCategoryCaptionTextBrushKey()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_PropertyInspectorPaneBrushKey()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_PropertyInspectorPopupBrushKey()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_PropertyInspectorToolBarItemHoverBackgroundBrushKey()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_PropertyInspectorToolBarItemHoverBorderBrushKey()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_PropertyInspectorToolBarItemSelectedBackgroundBrushKey()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_PropertyInspectorToolBarItemSelectedBorderBrushKey()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_PropertyInspectorToolBarBackgroundBrushKey()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_PropertyInspectorToolBarSeparatorBrushKey()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_PropertyInspectorToolBarTextBoxBorderBrushKey()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			class [PresentationFramework]System.Windows.ResourceDictionary get_FontAndColorResources()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			bool get_IsHighContrastEnabled()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [PresentationCore]System.Windows.Media.Color get_WorkflowViewElementBorderColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [PresentationCore]System.Windows.Media.Color get_WorkflowViewElementBackgroundColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [PresentationCore]System.Windows.Media.Color get_WorkflowViewElementSelectedBackgroundColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [PresentationCore]System.Windows.Media.Color get_GridViewRowHoverColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [PresentationCore]System.Windows.Media.Color get_WorkflowViewElementSelectedBorderColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [PresentationCore]System.Windows.Media.Color get_DesignerViewStatusBarBackgroundColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [PresentationCore]System.Windows.Media.Color get_WorkflowViewElementCaptionColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [PresentationCore]System.Windows.Media.Color get_WorkflowViewElementSelectedCaptionColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [PresentationCore]System.Windows.Media.Color get_DesignerViewBackgroundColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [PresentationCore]System.Windows.Media.Color get_DesignerViewShellBarColorGradientBeginColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [PresentationCore]System.Windows.Media.Color get_DesignerViewShellBarColorGradientEndColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [PresentationCore]System.Windows.Media.Color get_DesignerViewShellBarSelectedColorGradientBeginColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [PresentationCore]System.Windows.Media.Color get_DesignerViewShellBarSelectedColorGradientEndColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [PresentationCore]System.Windows.Media.Color get_DesignerViewShellBarHoverColorGradientBeginColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [PresentationCore]System.Windows.Media.Color get_DesignerViewShellBarHoverColorGradientEndColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [PresentationCore]System.Windows.Media.Color get_DesignerViewShellBarControlBackgroundColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [PresentationCore]System.Windows.Media.Color get_DesignerViewShellBarCaptionActiveColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [PresentationCore]System.Windows.Media.Color get_DesignerViewShellBarCaptionColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			class [PresentationCore]System.Windows.Media.Brush get_DesignerViewExpandAllCollapseAllButtonBrush()
		{
			ret
		}
		.method public static hidebysig specialname 
			class [PresentationCore]System.Windows.Media.Brush get_DesignerViewExpandAllCollapseAllButtonMouseOverBrush()
		{
			ret
		}
		.method public static hidebysig specialname 
			class [PresentationCore]System.Windows.Media.Brush get_DesignerViewExpandAllCollapseAllPressedBrush()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [PresentationCore]System.Windows.Media.Color get_PropertyToolBarHightlightedButtonForegroundColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [PresentationCore]System.Windows.Media.Color get_ActivityDesignerSelectedTitleForegroundColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [PresentationCore]System.Windows.Media.Color get_ContextMenuBackgroundGradientBeginColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [PresentationCore]System.Windows.Media.Color get_ContextMenuBackgroundGradientEndColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [PresentationCore]System.Windows.Media.Color get_ContextMenuBorderColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [PresentationCore]System.Windows.Media.Color get_ContextMenuIconAreaColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [PresentationCore]System.Windows.Media.Color get_ContextMenuMouseOverBeginColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [PresentationCore]System.Windows.Media.Color get_ContextMenuMouseOverMiddle1Color()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [PresentationCore]System.Windows.Media.Color get_ContextMenuMouseOverMiddle2Color()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [PresentationCore]System.Windows.Media.Color get_ContextMenuMouseOverEndColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [PresentationCore]System.Windows.Media.Color get_ContextMenuMouseOverBorderColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [PresentationCore]System.Windows.Media.Color get_ContextMenuItemTextColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [PresentationCore]System.Windows.Media.Color get_ContextMenuItemTextHoverColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [PresentationCore]System.Windows.Media.Color get_ContextMenuItemTextHoverQuirkedColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [PresentationCore]System.Windows.Media.Color get_ContextMenuItemTextSelectedColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [PresentationCore]System.Windows.Media.Color get_ContextMenuItemTextDisabledColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [PresentationCore]System.Windows.Media.Color get_ContextMenuSeparatorColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [PresentationCore]System.Windows.Media.Color get_FlowchartConnectorColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			class [PresentationCore]System.Windows.Media.Brush get_FlowchartExpressionButtonBrush()
		{
			ret
		}
		.method public static hidebysig specialname 
			class [PresentationCore]System.Windows.Media.Brush get_FlowchartExpressionButtonMouseOverBrush()
		{
			ret
		}
		.method public static hidebysig specialname 
			class [PresentationCore]System.Windows.Media.Brush get_FlowchartExpressionButtonPressedBrush()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [PresentationCore]System.Windows.Media.Color get_AnnotationBackgroundGradientBeginColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [PresentationCore]System.Windows.Media.Color get_AnnotationBackgroundGradientMiddleColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [PresentationCore]System.Windows.Media.Color get_AnnotationBackgroundGradientEndColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [PresentationCore]System.Windows.Media.Color get_AnnotationBorderColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [PresentationCore]System.Windows.Media.Color get_AnnotationDockTextColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [PresentationCore]System.Windows.Media.Color get_AnnotationUndockTextColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [PresentationCore]System.Windows.Media.Color get_AnnotationDockButtonColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [PresentationCore]System.Windows.Media.Color get_AnnotationDockButtonHoverColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [PresentationCore]System.Windows.Media.Color get_AnnotationDockButtonHoverBorderColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [PresentationCore]System.Windows.Media.Color get_AnnotationDockButtonHoverBackgroundColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [PresentationCore]System.Windows.Media.Color get_OutlineViewItemHighlightBackgroundColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [PresentationCore]System.Windows.Media.Color get_OutlineViewCollapsedArrowBorderColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [PresentationCore]System.Windows.Media.Color get_OutlineViewCollapsedArrowHoverBorderColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [PresentationCore]System.Windows.Media.Color get_OutlineViewExpandedArrowColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [PresentationCore]System.Windows.Media.Color get_OutlineViewExpandedArrowBorderColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [PresentationCore]System.Windows.Media.Color get_OutlineViewBackgroundColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [PresentationCore]System.Windows.Media.Color get_OutlineViewItemSelectedTextColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [PresentationCore]System.Windows.Media.Color get_OutlineViewItemTextColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			class [PresentationCore]System.Windows.Media.FontFamily get_FontFamily()
		{
			ret
		}
		.method public static hidebysig specialname 
			float64 get_FontSize()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [PresentationCore]System.Windows.FontWeight get_FontWeight()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			class [PresentationCore]System.Windows.Media.Brush get_RubberBandRectangleBrush()
		{
			ret
		}
		.field static public literal string ActivityDesignerSelectedTitleForegroundColorKey = "ActivityDesignerSelectedTitleForegroundColorKey"
		.field static public literal string AnnotationBackgroundGradientBeginColorKey = "AnnotationBackgroundGradientBeginColorKey"
		.field static public literal string AnnotationBackgroundGradientEndColorKey = "AnnotationBackgroundGradientEndColorKey"
		.field static public literal string AnnotationBackgroundGradientMiddleColorKey = "AnnotationBackgroundGradientMiddleColorKey"
		.field static public literal string AnnotationBorderColorKey = "AnnotationBorderColorKey"
		.field static public literal string AnnotationDockButtonColorKey = "AnnotationDockButtonColorKey"
		.field static public literal string AnnotationDockButtonHoverBackgroundColorKey = "AnnotationDockButtonHoverBackgroundColorKey"
		.field static public literal string AnnotationDockButtonHoverBorderColorKey = "AnnotationDockButtonHoverBorderColorKey"
		.field static public literal string AnnotationDockButtonHoverColorKey = "AnnotationDockButtonHoverColorKey"
		.field static public literal string AnnotationDockTextColorKey = "AnnotationDockTextColorKey"
		.field static public literal string AnnotationUndockTextColorKey = "AnnotationUndockTextColorKey"
		.field static public literal string ContextMenuBackgroundGradientBeginColorKey = "ContextMenuColorGradientBeginColorKey"
		.field static public literal string ContextMenuBackgroundGradientEndColorKey = "ContextMenuColorGradientEndColorKey"
		.field static public literal string ContextMenuBorderColorKey = "ContextMenuBorderColorKey"
		.field static public literal string ContextMenuIconAreaColorKey = "ContextMenuIconAreaColorKey"
		.field static public literal string ContextMenuItemTextColorKey = "ContextMenuItemTextColorKey"
		.field static public literal string ContextMenuItemTextDisabledColorKey = "ContextMenuItemTextDisabledColorKey"
		.field static public literal string ContextMenuItemTextHoverColorKey = "ContextMenuItemTextHoverColorKey"
		.field static public literal string ContextMenuItemTextSelectedColorKey = "ContextMenuItemTextSelectedColorKey"
		.field static public literal string ContextMenuMouseOverBeginColorKey = "ContextMenuMouseOverBeginColorKey"
		.field static public literal string ContextMenuMouseOverBorderColorKey = "ContextMenuMouseOverBorderColorKey"
		.field static public literal string ContextMenuMouseOverEndColorKey = "ContextMenuMouseOverEndColorKey"
		.field static public literal string ContextMenuMouseOverMiddle1ColorKey = "ContextMenuMouseOverMiddle1ColorKey"
		.field static public literal string ContextMenuMouseOverMiddle2ColorKey = "ContextMenuMouseOverMiddle2ColorKey"
		.field static public literal string ContextMenuSeparatorColorKey = "ContextMenuSeparatorColorKey"
		.field static public literal string DesignerViewBackgroundColorKey = "DesignerViewBackgroundColorKey"
		.field static public literal string DesignerViewExpandAllCollapseAllButtonColorKey = "DesignerViewExpandAllCollapseAllButtonColorKey"
		.field static public literal string DesignerViewExpandAllCollapseAllButtonMouseOverColorKey = "DesignerViewExpandAllCollapseAllButtonMouseOverColorKey"
		.field static public literal string DesignerViewExpandAllCollapseAllPressedColorKey = "DesignerViewExpandAllCollapseAllPressedColorKey"
		.field static public literal string DesignerViewShellBarCaptionActiveColorKey = "DesignerViewShellBarCaptionActiveColorKey"
		.field static public literal string DesignerViewShellBarCaptionColorKey = "DesignerViewShellBarCaptionColorKey"
		.field static public literal string DesignerViewShellBarColorGradientBeginKey = "DesignerViewShellBarColorGradientBeginKey"
		.field static public literal string DesignerViewShellBarColorGradientEndKey = "DesignerViewShellBarColorGradientEndKey"
		.field static public literal string DesignerViewShellBarControlBackgroundColorKey = "DesignerViewShellBarControlBackgroundColorKey"
		.field static public literal string DesignerViewShellBarHoverColorGradientBeginKey = "DesignerViewShellBarSelectedHoverGradientBeginKey"
		.field static public literal string DesignerViewShellBarHoverColorGradientEndKey = "DesignerViewShellBarSelectedHoverGradientEndKey"
		.field static public literal string DesignerViewShellBarSelectedColorGradientBeginKey = "DesignerViewShellBarSelectedColorGradientBeginKey"
		.field static public literal string DesignerViewShellBarSelectedColorGradientEndKey = "DesignerViewShellBarSelectedColorGradientEndKey"
		.field static public literal string DesignerViewStatusBarBackgroundColorKey = "DesignerViewStatusBarBackgroundColorKey"
		.field static public literal string FlowchartConnectorColorKey = "FlowchartConnectorColorKey"
		.field static public literal string FlowchartExpressionButtonColorKey = "FlowchartExpressionButtonColorKey"
		.field static public literal string FlowchartExpressionButtonMouseOverColorKey = "FlowchartExpressionButtonMouseOverColorKey"
		.field static public literal string FlowchartExpressionButtonPressedColorKey = "FlowchartExpressionButtonPressedColorKey"
		.field static public initonly string FontFamilyKey
		.field static public initonly string FontSizeKey
		.field static public initonly string FontWeightKey
		.field static public literal string OutlineViewBackgroundColorKey = "OutlineViewBackgroundColorKey"
		.field static public literal string OutlineViewCollapsedArrowBorderColorKey = "OutlineViewCollapsedArrowBorderColorKey"
		.field static public literal string OutlineViewCollapsedArrowHoverBorderColorKey = "OutlineViewCollapsedArrowHoverBorderColorKey"
		.field static public literal string OutlineViewExpandedArrowBorderColorKey = "OutlineViewExpandedArrowBorderColorKey"
		.field static public literal string OutlineViewExpandedArrowColorKey = "OutlineViewExpandedArrowColorKey"
		.field static public literal string OutlineViewItemHighlightBackgroundColorKey = "OutlineViewItemHighlightBackgroundColorKey"
		.field static public literal string OutlineViewItemSelectedTextColorKey = "OutlineViewTitemSelectedTextColorKey"
		.field static public literal string OutlineViewItemTextColorKey = "OutlineViewItemTextColorKey"
		.field static public literal string PropertyToolBarHightlightedButtonForegroundColorKey = "PropertyToolBarHightlightedButtonForegroundColor"
		.field static public literal string RubberBandRectangleColorKey = "RubberBandRectangleColorKey"
		.field static public literal string WorkflowViewElementBackgroundColorKey = "WorkflowViewElementBackgroundColorKey"
		.field static public literal string WorkflowViewElementBorderColorKey = "WorkflowViewElementBorderColorKey"
		.field static public literal string WorkflowViewElementCaptionColorKey = "WorkflowViewElementCaptionBrushColorKey"
		.field static public literal string WorkflowViewElementSelectedBackgroundColorKey = "WorkflowViewElementSelectedBackgroundColorKey"
		.field static public literal string WorkflowViewElementSelectedBorderColorKey = "WorkflowViewElementSelectedBorderColorKey"
		.field static public literal string WorkflowViewElementSelectedCaptionColorKey = "WorkflowViewElementSelectedCaptionBrushColorKey"
		.property valuetype [PresentationCore]System.Windows.Media.Color ActivityDesignerSelectedTitleForegroundColor()
		{
			.get valuetype [PresentationCore]System.Windows.Media.Color System.Activities.Presentation.WorkflowDesignerColors::get_ActivityDesignerSelectedTitleForegroundColor()
		}
		.property valuetype [PresentationCore]System.Windows.Media.Color AnnotationBackgroundGradientBeginColor()
		{
			.get valuetype [PresentationCore]System.Windows.Media.Color System.Activities.Presentation.WorkflowDesignerColors::get_AnnotationBackgroundGradientBeginColor()
		}
		.property valuetype [PresentationCore]System.Windows.Media.Color AnnotationBackgroundGradientEndColor()
		{
			.get valuetype [PresentationCore]System.Windows.Media.Color System.Activities.Presentation.WorkflowDesignerColors::get_AnnotationBackgroundGradientEndColor()
		}
		.property valuetype [PresentationCore]System.Windows.Media.Color AnnotationBackgroundGradientMiddleColor()
		{
			.get valuetype [PresentationCore]System.Windows.Media.Color System.Activities.Presentation.WorkflowDesignerColors::get_AnnotationBackgroundGradientMiddleColor()
		}
		.property valuetype [PresentationCore]System.Windows.Media.Color AnnotationBorderColor()
		{
			.get valuetype [PresentationCore]System.Windows.Media.Color System.Activities.Presentation.WorkflowDesignerColors::get_AnnotationBorderColor()
		}
		.property valuetype [PresentationCore]System.Windows.Media.Color AnnotationDockButtonColor()
		{
			.get valuetype [PresentationCore]System.Windows.Media.Color System.Activities.Presentation.WorkflowDesignerColors::get_AnnotationDockButtonColor()
		}
		.property valuetype [PresentationCore]System.Windows.Media.Color AnnotationDockButtonHoverBackgroundColor()
		{
			.get valuetype [PresentationCore]System.Windows.Media.Color System.Activities.Presentation.WorkflowDesignerColors::get_AnnotationDockButtonHoverBackgroundColor()
		}
		.property valuetype [PresentationCore]System.Windows.Media.Color AnnotationDockButtonHoverBorderColor()
		{
			.get valuetype [PresentationCore]System.Windows.Media.Color System.Activities.Presentation.WorkflowDesignerColors::get_AnnotationDockButtonHoverBorderColor()
		}
		.property valuetype [PresentationCore]System.Windows.Media.Color AnnotationDockButtonHoverColor()
		{
			.get valuetype [PresentationCore]System.Windows.Media.Color System.Activities.Presentation.WorkflowDesignerColors::get_AnnotationDockButtonHoverColor()
		}
		.property valuetype [PresentationCore]System.Windows.Media.Color AnnotationDockTextColor()
		{
			.get valuetype [PresentationCore]System.Windows.Media.Color System.Activities.Presentation.WorkflowDesignerColors::get_AnnotationDockTextColor()
		}
		.property valuetype [PresentationCore]System.Windows.Media.Color AnnotationUndockTextColor()
		{
			.get valuetype [PresentationCore]System.Windows.Media.Color System.Activities.Presentation.WorkflowDesignerColors::get_AnnotationUndockTextColor()
		}
		.property valuetype [PresentationCore]System.Windows.Media.Color ContextMenuBackgroundGradientBeginColor()
		{
			.get valuetype [PresentationCore]System.Windows.Media.Color System.Activities.Presentation.WorkflowDesignerColors::get_ContextMenuBackgroundGradientBeginColor()
		}
		.property valuetype [PresentationCore]System.Windows.Media.Color ContextMenuBackgroundGradientEndColor()
		{
			.get valuetype [PresentationCore]System.Windows.Media.Color System.Activities.Presentation.WorkflowDesignerColors::get_ContextMenuBackgroundGradientEndColor()
		}
		.property valuetype [PresentationCore]System.Windows.Media.Color ContextMenuBorderColor()
		{
			.get valuetype [PresentationCore]System.Windows.Media.Color System.Activities.Presentation.WorkflowDesignerColors::get_ContextMenuBorderColor()
		}
		.property valuetype [PresentationCore]System.Windows.Media.Color ContextMenuIconAreaColor()
		{
			.get valuetype [PresentationCore]System.Windows.Media.Color System.Activities.Presentation.WorkflowDesignerColors::get_ContextMenuIconAreaColor()
		}
		.property valuetype [PresentationCore]System.Windows.Media.Color ContextMenuItemTextColor()
		{
			.get valuetype [PresentationCore]System.Windows.Media.Color System.Activities.Presentation.WorkflowDesignerColors::get_ContextMenuItemTextColor()
		}
		.property valuetype [PresentationCore]System.Windows.Media.Color ContextMenuItemTextDisabledColor()
		{
			.get valuetype [PresentationCore]System.Windows.Media.Color System.Activities.Presentation.WorkflowDesignerColors::get_ContextMenuItemTextDisabledColor()
		}
		.property valuetype [PresentationCore]System.Windows.Media.Color ContextMenuItemTextHoverColor()
		{
			.get valuetype [PresentationCore]System.Windows.Media.Color System.Activities.Presentation.WorkflowDesignerColors::get_ContextMenuItemTextHoverColor()
		}
		.property valuetype [PresentationCore]System.Windows.Media.Color ContextMenuItemTextHoverQuirkedColor()
		{
			.get valuetype [PresentationCore]System.Windows.Media.Color System.Activities.Presentation.WorkflowDesignerColors::get_ContextMenuItemTextHoverQuirkedColor()
		}
		.property valuetype [PresentationCore]System.Windows.Media.Color ContextMenuItemTextSelectedColor()
		{
			.get valuetype [PresentationCore]System.Windows.Media.Color System.Activities.Presentation.WorkflowDesignerColors::get_ContextMenuItemTextSelectedColor()
		}
		.property valuetype [PresentationCore]System.Windows.Media.Color ContextMenuMouseOverBeginColor()
		{
			.get valuetype [PresentationCore]System.Windows.Media.Color System.Activities.Presentation.WorkflowDesignerColors::get_ContextMenuMouseOverBeginColor()
		}
		.property valuetype [PresentationCore]System.Windows.Media.Color ContextMenuMouseOverBorderColor()
		{
			.get valuetype [PresentationCore]System.Windows.Media.Color System.Activities.Presentation.WorkflowDesignerColors::get_ContextMenuMouseOverBorderColor()
		}
		.property valuetype [PresentationCore]System.Windows.Media.Color ContextMenuMouseOverEndColor()
		{
			.get valuetype [PresentationCore]System.Windows.Media.Color System.Activities.Presentation.WorkflowDesignerColors::get_ContextMenuMouseOverEndColor()
		}
		.property valuetype [PresentationCore]System.Windows.Media.Color ContextMenuMouseOverMiddle1Color()
		{
			.get valuetype [PresentationCore]System.Windows.Media.Color System.Activities.Presentation.WorkflowDesignerColors::get_ContextMenuMouseOverMiddle1Color()
		}
		.property valuetype [PresentationCore]System.Windows.Media.Color ContextMenuMouseOverMiddle2Color()
		{
			.get valuetype [PresentationCore]System.Windows.Media.Color System.Activities.Presentation.WorkflowDesignerColors::get_ContextMenuMouseOverMiddle2Color()
		}
		.property valuetype [PresentationCore]System.Windows.Media.Color ContextMenuSeparatorColor()
		{
			.get valuetype [PresentationCore]System.Windows.Media.Color System.Activities.Presentation.WorkflowDesignerColors::get_ContextMenuSeparatorColor()
		}
		.property valuetype [PresentationCore]System.Windows.Media.Color DesignerViewBackgroundColor()
		{
			.get valuetype [PresentationCore]System.Windows.Media.Color System.Activities.Presentation.WorkflowDesignerColors::get_DesignerViewBackgroundColor()
		}
		.property class [PresentationCore]System.Windows.Media.Brush DesignerViewExpandAllCollapseAllButtonBrush()
		{
			.get class [PresentationCore]System.Windows.Media.Brush System.Activities.Presentation.WorkflowDesignerColors::get_DesignerViewExpandAllCollapseAllButtonBrush()
		}
		.property class [PresentationCore]System.Windows.Media.Brush DesignerViewExpandAllCollapseAllButtonMouseOverBrush()
		{
			.get class [PresentationCore]System.Windows.Media.Brush System.Activities.Presentation.WorkflowDesignerColors::get_DesignerViewExpandAllCollapseAllButtonMouseOverBrush()
		}
		.property class [PresentationCore]System.Windows.Media.Brush DesignerViewExpandAllCollapseAllPressedBrush()
		{
			.get class [PresentationCore]System.Windows.Media.Brush System.Activities.Presentation.WorkflowDesignerColors::get_DesignerViewExpandAllCollapseAllPressedBrush()
		}
		.property valuetype [PresentationCore]System.Windows.Media.Color DesignerViewShellBarCaptionActiveColor()
		{
			.get valuetype [PresentationCore]System.Windows.Media.Color System.Activities.Presentation.WorkflowDesignerColors::get_DesignerViewShellBarCaptionActiveColor()
		}
		.property valuetype [PresentationCore]System.Windows.Media.Color DesignerViewShellBarCaptionColor()
		{
			.get valuetype [PresentationCore]System.Windows.Media.Color System.Activities.Presentation.WorkflowDesignerColors::get_DesignerViewShellBarCaptionColor()
		}
		.property valuetype [PresentationCore]System.Windows.Media.Color DesignerViewShellBarColorGradientBeginColor()
		{
			.get valuetype [PresentationCore]System.Windows.Media.Color System.Activities.Presentation.WorkflowDesignerColors::get_DesignerViewShellBarColorGradientBeginColor()
		}
		.property valuetype [PresentationCore]System.Windows.Media.Color DesignerViewShellBarColorGradientEndColor()
		{
			.get valuetype [PresentationCore]System.Windows.Media.Color System.Activities.Presentation.WorkflowDesignerColors::get_DesignerViewShellBarColorGradientEndColor()
		}
		.property valuetype [PresentationCore]System.Windows.Media.Color DesignerViewShellBarControlBackgroundColor()
		{
			.get valuetype [PresentationCore]System.Windows.Media.Color System.Activities.Presentation.WorkflowDesignerColors::get_DesignerViewShellBarControlBackgroundColor()
		}
		.property valuetype [PresentationCore]System.Windows.Media.Color DesignerViewShellBarHoverColorGradientBeginColor()
		{
			.get valuetype [PresentationCore]System.Windows.Media.Color System.Activities.Presentation.WorkflowDesignerColors::get_DesignerViewShellBarHoverColorGradientBeginColor()
		}
		.property valuetype [PresentationCore]System.Windows.Media.Color DesignerViewShellBarHoverColorGradientEndColor()
		{
			.get valuetype [PresentationCore]System.Windows.Media.Color System.Activities.Presentation.WorkflowDesignerColors::get_DesignerViewShellBarHoverColorGradientEndColor()
		}
		.property valuetype [PresentationCore]System.Windows.Media.Color DesignerViewShellBarSelectedColorGradientBeginColor()
		{
			.get valuetype [PresentationCore]System.Windows.Media.Color System.Activities.Presentation.WorkflowDesignerColors::get_DesignerViewShellBarSelectedColorGradientBeginColor()
		}
		.property valuetype [PresentationCore]System.Windows.Media.Color DesignerViewShellBarSelectedColorGradientEndColor()
		{
			.get valuetype [PresentationCore]System.Windows.Media.Color System.Activities.Presentation.WorkflowDesignerColors::get_DesignerViewShellBarSelectedColorGradientEndColor()
		}
		.property valuetype [PresentationCore]System.Windows.Media.Color DesignerViewStatusBarBackgroundColor()
		{
			.get valuetype [PresentationCore]System.Windows.Media.Color System.Activities.Presentation.WorkflowDesignerColors::get_DesignerViewStatusBarBackgroundColor()
		}
		.property valuetype [PresentationCore]System.Windows.Media.Color FlowchartConnectorColor()
		{
			.get valuetype [PresentationCore]System.Windows.Media.Color System.Activities.Presentation.WorkflowDesignerColors::get_FlowchartConnectorColor()
		}
		.property class [PresentationCore]System.Windows.Media.Brush FlowchartExpressionButtonBrush()
		{
			.get class [PresentationCore]System.Windows.Media.Brush System.Activities.Presentation.WorkflowDesignerColors::get_FlowchartExpressionButtonBrush()
		}
		.property class [PresentationCore]System.Windows.Media.Brush FlowchartExpressionButtonMouseOverBrush()
		{
			.get class [PresentationCore]System.Windows.Media.Brush System.Activities.Presentation.WorkflowDesignerColors::get_FlowchartExpressionButtonMouseOverBrush()
		}
		.property class [PresentationCore]System.Windows.Media.Brush FlowchartExpressionButtonPressedBrush()
		{
			.get class [PresentationCore]System.Windows.Media.Brush System.Activities.Presentation.WorkflowDesignerColors::get_FlowchartExpressionButtonPressedBrush()
		}
		.property class [PresentationFramework]System.Windows.ResourceDictionary FontAndColorResources()
		{
			.get class [PresentationFramework]System.Windows.ResourceDictionary System.Activities.Presentation.WorkflowDesignerColors::get_FontAndColorResources()
		}
		.property class [PresentationCore]System.Windows.Media.FontFamily FontFamily()
		{
			.get class [PresentationCore]System.Windows.Media.FontFamily System.Activities.Presentation.WorkflowDesignerColors::get_FontFamily()
		}
		.property float64 FontSize()
		{
			.get float64 System.Activities.Presentation.WorkflowDesignerColors::get_FontSize()
		}
		.property valuetype [PresentationCore]System.Windows.FontWeight FontWeight()
		{
			.get valuetype [PresentationCore]System.Windows.FontWeight System.Activities.Presentation.WorkflowDesignerColors::get_FontWeight()
		}
		.property valuetype [PresentationCore]System.Windows.Media.Color GridViewRowHoverColor()
		{
			.get valuetype [PresentationCore]System.Windows.Media.Color System.Activities.Presentation.WorkflowDesignerColors::get_GridViewRowHoverColor()
		}
		.property bool IsHighContrastEnabled()
		{
			.get bool System.Activities.Presentation.WorkflowDesignerColors::get_IsHighContrastEnabled()
		}
		.property valuetype [PresentationCore]System.Windows.Media.Color OutlineViewBackgroundColor()
		{
			.get valuetype [PresentationCore]System.Windows.Media.Color System.Activities.Presentation.WorkflowDesignerColors::get_OutlineViewBackgroundColor()
		}
		.property valuetype [PresentationCore]System.Windows.Media.Color OutlineViewCollapsedArrowBorderColor()
		{
			.get valuetype [PresentationCore]System.Windows.Media.Color System.Activities.Presentation.WorkflowDesignerColors::get_OutlineViewCollapsedArrowBorderColor()
		}
		.property valuetype [PresentationCore]System.Windows.Media.Color OutlineViewCollapsedArrowHoverBorderColor()
		{
			.get valuetype [PresentationCore]System.Windows.Media.Color System.Activities.Presentation.WorkflowDesignerColors::get_OutlineViewCollapsedArrowHoverBorderColor()
		}
		.property valuetype [PresentationCore]System.Windows.Media.Color OutlineViewExpandedArrowBorderColor()
		{
			.get valuetype [PresentationCore]System.Windows.Media.Color System.Activities.Presentation.WorkflowDesignerColors::get_OutlineViewExpandedArrowBorderColor()
		}
		.property valuetype [PresentationCore]System.Windows.Media.Color OutlineViewExpandedArrowColor()
		{
			.get valuetype [PresentationCore]System.Windows.Media.Color System.Activities.Presentation.WorkflowDesignerColors::get_OutlineViewExpandedArrowColor()
		}
		.property valuetype [PresentationCore]System.Windows.Media.Color OutlineViewItemHighlightBackgroundColor()
		{
			.get valuetype [PresentationCore]System.Windows.Media.Color System.Activities.Presentation.WorkflowDesignerColors::get_OutlineViewItemHighlightBackgroundColor()
		}
		.property valuetype [PresentationCore]System.Windows.Media.Color OutlineViewItemSelectedTextColor()
		{
			.get valuetype [PresentationCore]System.Windows.Media.Color System.Activities.Presentation.WorkflowDesignerColors::get_OutlineViewItemSelectedTextColor()
		}
		.property valuetype [PresentationCore]System.Windows.Media.Color OutlineViewItemTextColor()
		{
			.get valuetype [PresentationCore]System.Windows.Media.Color System.Activities.Presentation.WorkflowDesignerColors::get_OutlineViewItemTextColor()
		}
		.property string PropertyInspectorBackgroundBrushKey()
		{
			.get string System.Activities.Presentation.WorkflowDesignerColors::get_PropertyInspectorBackgroundBrushKey()
		}
		.property string PropertyInspectorBorderBrushKey()
		{
			.get string System.Activities.Presentation.WorkflowDesignerColors::get_PropertyInspectorBorderBrushKey()
		}
		.property string PropertyInspectorCategoryCaptionTextBrushKey()
		{
			.get string System.Activities.Presentation.WorkflowDesignerColors::get_PropertyInspectorCategoryCaptionTextBrushKey()
		}
		.property string PropertyInspectorPaneBrushKey()
		{
			.get string System.Activities.Presentation.WorkflowDesignerColors::get_PropertyInspectorPaneBrushKey()
		}
		.property string PropertyInspectorPopupBrushKey()
		{
			.get string System.Activities.Presentation.WorkflowDesignerColors::get_PropertyInspectorPopupBrushKey()
		}
		.property string PropertyInspectorSelectedBackgroundBrushKey()
		{
			.get string System.Activities.Presentation.WorkflowDesignerColors::get_PropertyInspectorSelectedBackgroundBrushKey()
		}
		.property string PropertyInspectorSelectedForegroundBrushKey()
		{
			.get string System.Activities.Presentation.WorkflowDesignerColors::get_PropertyInspectorSelectedForegroundBrushKey()
		}
		.property string PropertyInspectorTextBrushKey()
		{
			.get string System.Activities.Presentation.WorkflowDesignerColors::get_PropertyInspectorTextBrushKey()
		}
		.property string PropertyInspectorToolBarBackgroundBrushKey()
		{
			.get string System.Activities.Presentation.WorkflowDesignerColors::get_PropertyInspectorToolBarBackgroundBrushKey()
		}
		.property string PropertyInspectorToolBarItemHoverBackgroundBrushKey()
		{
			.get string System.Activities.Presentation.WorkflowDesignerColors::get_PropertyInspectorToolBarItemHoverBackgroundBrushKey()
		}
		.property string PropertyInspectorToolBarItemHoverBorderBrushKey()
		{
			.get string System.Activities.Presentation.WorkflowDesignerColors::get_PropertyInspectorToolBarItemHoverBorderBrushKey()
		}
		.property string PropertyInspectorToolBarItemSelectedBackgroundBrushKey()
		{
			.get string System.Activities.Presentation.WorkflowDesignerColors::get_PropertyInspectorToolBarItemSelectedBackgroundBrushKey()
		}
		.property string PropertyInspectorToolBarItemSelectedBorderBrushKey()
		{
			.get string System.Activities.Presentation.WorkflowDesignerColors::get_PropertyInspectorToolBarItemSelectedBorderBrushKey()
		}
		.property string PropertyInspectorToolBarSeparatorBrushKey()
		{
			.get string System.Activities.Presentation.WorkflowDesignerColors::get_PropertyInspectorToolBarSeparatorBrushKey()
		}
		.property string PropertyInspectorToolBarTextBoxBorderBrushKey()
		{
			.get string System.Activities.Presentation.WorkflowDesignerColors::get_PropertyInspectorToolBarTextBoxBorderBrushKey()
		}
		.property valuetype [PresentationCore]System.Windows.Media.Color PropertyToolBarHightlightedButtonForegroundColor()
		{
			.get valuetype [PresentationCore]System.Windows.Media.Color System.Activities.Presentation.WorkflowDesignerColors::get_PropertyToolBarHightlightedButtonForegroundColor()
		}
		.property class [PresentationCore]System.Windows.Media.Brush RubberBandRectangleBrush()
		{
			.get class [PresentationCore]System.Windows.Media.Brush System.Activities.Presentation.WorkflowDesignerColors::get_RubberBandRectangleBrush()
		}
		.property valuetype [PresentationCore]System.Windows.Media.Color WorkflowViewElementBackgroundColor()
		{
			.get valuetype [PresentationCore]System.Windows.Media.Color System.Activities.Presentation.WorkflowDesignerColors::get_WorkflowViewElementBackgroundColor()
		}
		.property valuetype [PresentationCore]System.Windows.Media.Color WorkflowViewElementBorderColor()
		{
			.get valuetype [PresentationCore]System.Windows.Media.Color System.Activities.Presentation.WorkflowDesignerColors::get_WorkflowViewElementBorderColor()
		}
		.property valuetype [PresentationCore]System.Windows.Media.Color WorkflowViewElementCaptionColor()
		{
			.get valuetype [PresentationCore]System.Windows.Media.Color System.Activities.Presentation.WorkflowDesignerColors::get_WorkflowViewElementCaptionColor()
		}
		.property valuetype [PresentationCore]System.Windows.Media.Color WorkflowViewElementSelectedBackgroundColor()
		{
			.get valuetype [PresentationCore]System.Windows.Media.Color System.Activities.Presentation.WorkflowDesignerColors::get_WorkflowViewElementSelectedBackgroundColor()
		}
		.property valuetype [PresentationCore]System.Windows.Media.Color WorkflowViewElementSelectedBorderColor()
		{
			.get valuetype [PresentationCore]System.Windows.Media.Color System.Activities.Presentation.WorkflowDesignerColors::get_WorkflowViewElementSelectedBorderColor()
		}
		.property valuetype [PresentationCore]System.Windows.Media.Color WorkflowViewElementSelectedCaptionColor()
		{
			.get valuetype [PresentationCore]System.Windows.Media.Color System.Activities.Presentation.WorkflowDesignerColors::get_WorkflowViewElementSelectedCaptionColor()
		}
	}
	.class private sealed WorkflowDesignerHostId
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Activities.Presentation.WorkflowDesignerHostId Dev10 = int32(0x00000001)
		.field static public literal valuetype System.Activities.Presentation.WorkflowDesignerHostId Dev11 = int32(0x00000002)
		.field static public literal valuetype System.Activities.Presentation.WorkflowDesignerHostId Rehost = int32(0x00000000)
	}
	.class private WorkflowDesignerIconBorder
		extends [PresentationFramework]System.Windows.Controls.Border
	{
		.method family virtual hidebysig 
			instance class [PresentationCore]System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public abstract sealed WorkflowDesignerIcons
		extends [mscorlib]System.Object
	{
		.class nested public abstract sealed Activities
			extends [mscorlib]System.Object
		{
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_AddToCollection()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_AddToCollection(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_Assign()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_Assign(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_CancellationScope()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_CancellationScope(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_ClearCollection()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_ClearCollection(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_CompensableActivity()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_CompensableActivity(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_Compensate()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_Compensate(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_Confirm()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_Confirm(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_CorrelationScope()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_CorrelationScope(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_Delay()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_Delay(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_DoWhile()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_DoWhile(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_ExistsInCollection()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_ExistsInCollection(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_FinalState()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_FinalState(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_Flowchart()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_Flowchart(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_FlowDecision()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_FlowDecision(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_FlowDecisionNode()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_FlowDecisionNode(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_FlowSwitch()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_FlowSwitch(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_FlowSwitchNode()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_FlowSwitchNode(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_ForEach()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_ForEach(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_DefaultCustomActivity()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_DefaultCustomActivity(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_If()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_If(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_InitializeCorrelation()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_InitializeCorrelation(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_Interop()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_Interop(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_InvokeDelegate()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_InvokeDelegate(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_InvokeMethod()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_InvokeMethod(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_NoPersistScope()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_NoPersistScope(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_ParallelForEach()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_ParallelForEach(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_Parallel()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_Parallel(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_Persist()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_Persist(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_PickBranch()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_PickBranch(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_Pick()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_Pick(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_ReceiveAndSendReply()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_ReceiveAndSendReply(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_Receive()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_Receive(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_ReceiveReply()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_ReceiveReply(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_RemoveFromCollection()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_RemoveFromCollection(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_Rethrow()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_Rethrow(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_SendAndReceiveReply()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_SendAndReceiveReply(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_Send()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_Send(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_SendReply()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_SendReply(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_Sequence()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_Sequence(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_StartNode()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_StartNode(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_State()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_State(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_StateEntry()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_StateEntry(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_StateExit()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_StateExit(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_StateMachine()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_StateMachine(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_Switch()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_Switch(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_TerminateWorkflow()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_TerminateWorkflow(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_Throw()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_Throw(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_TransactedReceiveScope()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_TransactedReceiveScope(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_TransactionScope()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_TransactionScope(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_StateTransition()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_StateTransition(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_TryCatch()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_TryCatch(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_While()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_While(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_WriteLine()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_WriteLine(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method assembly static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_ToolboxDefaultCustomActivity()
			{
				ret
			}
			.method assembly static hidebysig specialname 
				void set_ToolboxDefaultCustomActivity(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush AddToCollection()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/Activities::get_AddToCollection()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/Activities::set_AddToCollection(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush Assign()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/Activities::get_Assign()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/Activities::set_Assign(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush CancellationScope()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/Activities::get_CancellationScope()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/Activities::set_CancellationScope(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush ClearCollection()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/Activities::get_ClearCollection()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/Activities::set_ClearCollection(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush CompensableActivity()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/Activities::get_CompensableActivity()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/Activities::set_CompensableActivity(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush Compensate()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/Activities::get_Compensate()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/Activities::set_Compensate(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush Confirm()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/Activities::get_Confirm()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/Activities::set_Confirm(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush CorrelationScope()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/Activities::get_CorrelationScope()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/Activities::set_CorrelationScope(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush DefaultCustomActivity()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/Activities::get_DefaultCustomActivity()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/Activities::set_DefaultCustomActivity(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush Delay()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/Activities::get_Delay()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/Activities::set_Delay(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush DoWhile()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/Activities::get_DoWhile()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/Activities::set_DoWhile(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush ExistsInCollection()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/Activities::get_ExistsInCollection()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/Activities::set_ExistsInCollection(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush FinalState()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/Activities::get_FinalState()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/Activities::set_FinalState(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush FlowDecision()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/Activities::get_FlowDecision()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/Activities::set_FlowDecision(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush FlowDecisionNode()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/Activities::get_FlowDecisionNode()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/Activities::set_FlowDecisionNode(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush FlowSwitch()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/Activities::get_FlowSwitch()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/Activities::set_FlowSwitch(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush FlowSwitchNode()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/Activities::get_FlowSwitchNode()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/Activities::set_FlowSwitchNode(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush Flowchart()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/Activities::get_Flowchart()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/Activities::set_Flowchart(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush ForEach()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/Activities::get_ForEach()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/Activities::set_ForEach(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush If()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/Activities::get_If()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/Activities::set_If(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush InitializeCorrelation()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/Activities::get_InitializeCorrelation()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/Activities::set_InitializeCorrelation(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush Interop()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/Activities::get_Interop()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/Activities::set_Interop(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush InvokeDelegate()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/Activities::get_InvokeDelegate()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/Activities::set_InvokeDelegate(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush InvokeMethod()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/Activities::get_InvokeMethod()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/Activities::set_InvokeMethod(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush NoPersistScope()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/Activities::get_NoPersistScope()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/Activities::set_NoPersistScope(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush Parallel()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/Activities::get_Parallel()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/Activities::set_Parallel(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush ParallelForEach()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/Activities::get_ParallelForEach()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/Activities::set_ParallelForEach(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush Persist()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/Activities::get_Persist()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/Activities::set_Persist(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush Pick()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/Activities::get_Pick()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/Activities::set_Pick(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush PickBranch()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/Activities::get_PickBranch()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/Activities::set_PickBranch(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush Receive()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/Activities::get_Receive()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/Activities::set_Receive(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush ReceiveAndSendReply()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/Activities::get_ReceiveAndSendReply()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/Activities::set_ReceiveAndSendReply(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush ReceiveReply()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/Activities::get_ReceiveReply()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/Activities::set_ReceiveReply(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush RemoveFromCollection()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/Activities::get_RemoveFromCollection()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/Activities::set_RemoveFromCollection(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush Rethrow()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/Activities::get_Rethrow()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/Activities::set_Rethrow(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush Send()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/Activities::get_Send()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/Activities::set_Send(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush SendAndReceiveReply()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/Activities::get_SendAndReceiveReply()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/Activities::set_SendAndReceiveReply(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush SendReply()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/Activities::get_SendReply()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/Activities::set_SendReply(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush Sequence()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/Activities::get_Sequence()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/Activities::set_Sequence(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush StartNode()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/Activities::get_StartNode()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/Activities::set_StartNode(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush State()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/Activities::get_State()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/Activities::set_State(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush StateEntry()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/Activities::get_StateEntry()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/Activities::set_StateEntry(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush StateExit()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/Activities::get_StateExit()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/Activities::set_StateExit(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush StateMachine()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/Activities::get_StateMachine()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/Activities::set_StateMachine(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush StateTransition()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/Activities::get_StateTransition()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/Activities::set_StateTransition(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush Switch()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/Activities::get_Switch()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/Activities::set_Switch(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush TerminateWorkflow()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/Activities::get_TerminateWorkflow()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/Activities::set_TerminateWorkflow(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush Throw()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/Activities::get_Throw()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/Activities::set_Throw(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush ToolboxDefaultCustomActivity()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/Activities::get_ToolboxDefaultCustomActivity()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/Activities::set_ToolboxDefaultCustomActivity(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush TransactedReceiveScope()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/Activities::get_TransactedReceiveScope()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/Activities::set_TransactedReceiveScope(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush TransactionScope()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/Activities::get_TransactionScope()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/Activities::set_TransactionScope(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush TryCatch()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/Activities::get_TryCatch()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/Activities::set_TryCatch(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush While()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/Activities::get_While()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/Activities::set_While(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush WriteLine()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/Activities::get_WriteLine()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/Activities::set_WriteLine(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
		}
		.class nested public abstract sealed ContextMenuItems
			extends [mscorlib]System.Object
		{
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_Copy()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_Copy(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_CopyDisabled()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_CopyDisabled(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_Cut()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_Cut(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_CutDisabled()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_CutDisabled(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_Delete()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_Delete(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_DeleteDisabled()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_DeleteDisabled(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_Paste()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_Paste(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_PasteDisabled()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_PasteDisabled(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush Copy()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/ContextMenuItems::get_Copy()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/ContextMenuItems::set_Copy(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush CopyDisabled()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/ContextMenuItems::get_CopyDisabled()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/ContextMenuItems::set_CopyDisabled(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush Cut()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/ContextMenuItems::get_Cut()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/ContextMenuItems::set_Cut(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush CutDisabled()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/ContextMenuItems::get_CutDisabled()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/ContextMenuItems::set_CutDisabled(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush Delete()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/ContextMenuItems::get_Delete()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/ContextMenuItems::set_Delete(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush DeleteDisabled()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/ContextMenuItems::get_DeleteDisabled()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/ContextMenuItems::set_DeleteDisabled(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush Paste()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/ContextMenuItems::get_Paste()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/ContextMenuItems::set_Paste(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush PasteDisabled()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/ContextMenuItems::get_PasteDisabled()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/ContextMenuItems::set_PasteDisabled(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
		}
		.class nested public abstract sealed DesignerItems
			extends [mscorlib]System.Object
		{
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_Annotation()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_Annotation(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_ActivityErrorValidation()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_ActivityErrorValidation(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_DeleteButton()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_DeleteButton(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_DeleteDisabledButton()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_DeleteDisabledButton(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_FitToScreen()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_FitToScreen(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_Overview()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_Overview(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_OverviewWindowCloseButton()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_OverviewWindowCloseButton(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_MoveDownButton()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_MoveDownButton(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_MoveDownDisabledButton()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_MoveDownDisabledButton(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_MoveUpButton()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_MoveUpButton(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_MoveUpDisabledButton()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_MoveUpDisabledButton(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_PanMode()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_PanMode(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_ResizeGrip()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_ResizeGrip(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_TextBoxErrorValidation()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_TextBoxErrorValidation(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_WorkflowErrorValidation()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_WorkflowErrorValidation(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_WarningValidation()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_WarningValidation(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.method public static hidebysig specialname 
				class [PresentationCore]System.Windows.Media.DrawingBrush get_Zoom()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_Zoom(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
			{
				ret
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush ActivityErrorValidation()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/DesignerItems::get_ActivityErrorValidation()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/DesignerItems::set_ActivityErrorValidation(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush Annotation()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/DesignerItems::get_Annotation()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/DesignerItems::set_Annotation(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush DeleteButton()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/DesignerItems::get_DeleteButton()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/DesignerItems::set_DeleteButton(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush DeleteDisabledButton()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/DesignerItems::get_DeleteDisabledButton()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/DesignerItems::set_DeleteDisabledButton(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush FitToScreen()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/DesignerItems::get_FitToScreen()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/DesignerItems::set_FitToScreen(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush MoveDownButton()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/DesignerItems::get_MoveDownButton()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/DesignerItems::set_MoveDownButton(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush MoveDownDisabledButton()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/DesignerItems::get_MoveDownDisabledButton()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/DesignerItems::set_MoveDownDisabledButton(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush MoveUpButton()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/DesignerItems::get_MoveUpButton()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/DesignerItems::set_MoveUpButton(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush MoveUpDisabledButton()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/DesignerItems::get_MoveUpDisabledButton()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/DesignerItems::set_MoveUpDisabledButton(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush Overview()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/DesignerItems::get_Overview()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/DesignerItems::set_Overview(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush OverviewWindowCloseButton()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/DesignerItems::get_OverviewWindowCloseButton()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/DesignerItems::set_OverviewWindowCloseButton(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush PanMode()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/DesignerItems::get_PanMode()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/DesignerItems::set_PanMode(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush ResizeGrip()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/DesignerItems::get_ResizeGrip()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/DesignerItems::set_ResizeGrip(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush TextBoxErrorValidation()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/DesignerItems::get_TextBoxErrorValidation()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/DesignerItems::set_TextBoxErrorValidation(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush WarningValidation()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/DesignerItems::get_WarningValidation()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/DesignerItems::set_WarningValidation(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush WorkflowErrorValidation()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/DesignerItems::get_WorkflowErrorValidation()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/DesignerItems::set_WorkflowErrorValidation(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
			.property class [PresentationCore]System.Windows.Media.DrawingBrush Zoom()
			{
				.get class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.WorkflowDesignerIcons/DesignerItems::get_Zoom()
				.set void System.Activities.Presentation.WorkflowDesignerIcons/DesignerItems::set_Zoom(class [PresentationCore]System.Windows.Media.DrawingBrush)
			}
		}
		.method assembly static hidebysig specialname 
			class [PresentationFramework]System.Windows.ResourceDictionary get_IconResourceDictionary()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			bool get_IsDefaultCutomActivitySetByUser()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly static hidebysig specialname 
			void set_IsDefaultCutomActivitySetByUser(bool 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			void UseWindowsStoreAppStyleIcons()
		{
			ret
		}
		.property class [PresentationFramework]System.Windows.ResourceDictionary IconResourceDictionary()
		{
			.get class [PresentationFramework]System.Windows.ResourceDictionary System.Activities.Presentation.WorkflowDesignerIcons::get_IconResourceDictionary()
		}
		.property bool IsDefaultCutomActivitySetByUser()
		{
			.get bool System.Activities.Presentation.WorkflowDesignerIcons::get_IsDefaultCutomActivitySetByUser()
			.set void System.Activities.Presentation.WorkflowDesignerIcons::set_IsDefaultCutomActivitySetByUser(bool)
		}
	}
	.class public WorkflowElementDialog
		extends [PresentationFramework]System.Windows.Controls.ContentControl
	{
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_ModelItem()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ModelItem(class System.Activities.Presentation.Model.ModelItem 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Title()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Title(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.EditingContext get_Context()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Context(class System.Activities.Presentation.EditingContext 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [WindowsBase]System.Windows.DependencyObject get_Owner()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_Owner(class [WindowsBase]System.Windows.DependencyObject 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [PresentationFramework]System.Windows.ResizeMode get_WindowResizeMode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_WindowResizeMode(valuetype [PresentationFramework]System.Windows.ResizeMode 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [PresentationCore]System.Windows.SizeToContent get_WindowSizeToContent()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_WindowSizeToContent(valuetype [PresentationCore]System.Windows.SizeToContent 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_EnableMinimizeButton()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_EnableMinimizeButton(bool 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance bool get_EnableMaximizeButton()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_EnableMaximizeButton(bool 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_HelpKeyword()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_HelpKeyword(string 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance class [mscorlib]'System.Func`1'<bool> get_OnOk()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_OnOk(class [mscorlib]'System.Func`1'<bool> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Show()
		{
			ret
		}
		.method public hidebysig 
			instance bool ShowOkCancel()
		{
			ret
		}
		.method assembly hidebysig 
			instance void CloseDialog(bool commitChanges)
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class System.Activities.Presentation.WorkflowElementDialogWindow get_Window()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_Window(class System.Activities.Presentation.WorkflowElementDialogWindow 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method family virtual hidebysig 
			instance void OnInitialized(class [mscorlib]System.EventArgs e)
		{
			ret
		}
		.method family hidebysig 
			instance void EnableOk(bool enabled)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnModelItemChanged(object newItem)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnWorkflowElementDialogClosed(valuetype [mscorlib]'System.Nullable`1'<bool> dialogResult)
		{
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ContextProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ModelItemProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty TitleProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty WindowResizeModeProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty WindowSizeToContentProperty
		.property instance class System.Activities.Presentation.EditingContext Context()
		{
			.get instance class System.Activities.Presentation.EditingContext System.Activities.Presentation.WorkflowElementDialog::get_Context()
			.set instance void System.Activities.Presentation.WorkflowElementDialog::set_Context(class System.Activities.Presentation.EditingContext)
		}
		.property instance bool EnableMaximizeButton()
		{
			.get instance bool System.Activities.Presentation.WorkflowElementDialog::get_EnableMaximizeButton()
			.set instance void System.Activities.Presentation.WorkflowElementDialog::set_EnableMaximizeButton(bool)
		}
		.property instance bool EnableMinimizeButton()
		{
			.get instance bool System.Activities.Presentation.WorkflowElementDialog::get_EnableMinimizeButton()
			.set instance void System.Activities.Presentation.WorkflowElementDialog::set_EnableMinimizeButton(bool)
		}
		.property instance string HelpKeyword()
		{
			.get instance string System.Activities.Presentation.WorkflowElementDialog::get_HelpKeyword()
			.set instance void System.Activities.Presentation.WorkflowElementDialog::set_HelpKeyword(string)
		}
		.property instance class System.Activities.Presentation.Model.ModelItem ModelItem()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.WorkflowElementDialog::get_ModelItem()
			.set instance void System.Activities.Presentation.WorkflowElementDialog::set_ModelItem(class System.Activities.Presentation.Model.ModelItem)
		}
		.property instance class [mscorlib]'System.Func`1'<bool> OnOk()
		{
			.get instance class [mscorlib]'System.Func`1'<bool> System.Activities.Presentation.WorkflowElementDialog::get_OnOk()
			.set instance void System.Activities.Presentation.WorkflowElementDialog::set_OnOk(class [mscorlib]'System.Func`1'<bool>)
		}
		.property instance class [WindowsBase]System.Windows.DependencyObject Owner()
		{
			.get instance class [WindowsBase]System.Windows.DependencyObject System.Activities.Presentation.WorkflowElementDialog::get_Owner()
			.set instance void System.Activities.Presentation.WorkflowElementDialog::set_Owner(class [WindowsBase]System.Windows.DependencyObject)
		}
		.property instance string Title()
		{
			.get instance string System.Activities.Presentation.WorkflowElementDialog::get_Title()
			.set instance void System.Activities.Presentation.WorkflowElementDialog::set_Title(string)
		}
		.property instance class System.Activities.Presentation.WorkflowElementDialogWindow Window()
		{
			.get instance class System.Activities.Presentation.WorkflowElementDialogWindow System.Activities.Presentation.WorkflowElementDialog::get_Window()
			.set instance void System.Activities.Presentation.WorkflowElementDialog::set_Window(class System.Activities.Presentation.WorkflowElementDialogWindow)
		}
		.property instance valuetype [PresentationFramework]System.Windows.ResizeMode WindowResizeMode()
		{
			.get instance valuetype [PresentationFramework]System.Windows.ResizeMode System.Activities.Presentation.WorkflowElementDialog::get_WindowResizeMode()
			.set instance void System.Activities.Presentation.WorkflowElementDialog::set_WindowResizeMode(valuetype [PresentationFramework]System.Windows.ResizeMode)
		}
		.property instance valuetype [PresentationCore]System.Windows.SizeToContent WindowSizeToContent()
		{
			.get instance valuetype [PresentationCore]System.Windows.SizeToContent System.Activities.Presentation.WorkflowElementDialog::get_WindowSizeToContent()
			.set instance void System.Activities.Presentation.WorkflowElementDialog::set_WindowSizeToContent(valuetype [PresentationCore]System.Windows.SizeToContent)
		}
	}
	.class private WorkflowElementDialogWindow
		extends System.Activities.Presentation.DialogWindow
		implements [System.Xaml]System.Windows.Markup.IComponentConnector
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.WorkflowElementDialog payload, bool okCancel, bool enableMinButton, bool enableMaxButton, class [mscorlib]'System.Func`1'<bool> onOk)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnInitialized(class [mscorlib]System.EventArgs e)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void InitializeComponent()
		{
			ret
		}
		.method assembly hidebysig 
			instance class [mscorlib]System.Delegate _CreateDelegate(class [mscorlib]System.Type delegateType, string 'handler')
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Windows.Markup.IComponentConnector.Connect(int32 connectionId, object target)
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.override [System.Xaml]System.Windows.Markup.IComponentConnector::Connect
			ret
		}
		.field assembly class [PresentationFramework]System.Windows.Controls.DockPanel buttonDockPanel
		.field assembly class [PresentationFramework]System.Windows.Controls.StackPanel buttonPanel
		.field assembly class [PresentationFramework]System.Windows.Controls.Button cancelButton
		.field assembly class [PresentationFramework]System.Windows.Controls.Button okButton
		.field assembly class [PresentationFramework]System.Windows.Controls.Border payloadHolder
	}
	.class public WorkflowFileItem
		extends System.Activities.Presentation.ContextItem
	{
		.method public hidebysig specialname 
			instance void set_LoadedFile(string 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_LoadedFile()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public final virtual hidebysig specialname 
			instance class [mscorlib]System.Type get_ItemType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class [mscorlib]System.Type ItemType()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.WorkflowFileItem::get_ItemType()
		}
		.property instance string LoadedFile()
		{
			.get instance string System.Activities.Presentation.WorkflowFileItem::get_LoadedFile()
			.set instance void System.Activities.Presentation.WorkflowFileItem::set_LoadedFile(string)
		}
	}
	.class public sealed WorkflowItemPresenter
		extends [PresentationFramework]System.Windows.Controls.ContentControl
		implements System.Activities.Presentation.ICompositeView
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance bool get_AutoWrapInSequenceEnabled()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnInitialized(class [mscorlib]System.EventArgs e)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_HintText()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_HintText(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_Item()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Item(class System.Activities.Presentation.Model.ModelItem 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Type get_AllowedItemType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_AllowedItemType(class [mscorlib]System.Type 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance class System.Activities.Presentation.View.TypeResolvingOptions get_DroppingTypeResolvingOptions()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_DroppingTypeResolvingOptions(class System.Activities.Presentation.View.TypeResolvingOptions 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_IsDefaultContainer()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsDefaultContainer(bool 'value')
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnRender(class [PresentationCore]System.Windows.Media.DrawingContext drawingContext)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnDrop(class [PresentationCore]System.Windows.DragEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnDragEnter(class [PresentationCore]System.Windows.DragEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnDragOver(class [PresentationCore]System.Windows.DragEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnMouseDown(class [PresentationCore]System.Windows.Input.MouseButtonEventArgs e)
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Activities.Presentation.ICompositeView.OnItemMoved(class System.Activities.Presentation.Model.ModelItem modelItem)
		{
			.override System.Activities.Presentation.ICompositeView::OnItemMoved
			ret
		}
		.method family virtual hidebysig 
			instance class [PresentationCore]System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer()
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance object System.Activities.Presentation.ICompositeView.OnItemsCut(class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.ModelItem> itemsToCut)
		{
			.override System.Activities.Presentation.ICompositeView::OnItemsCut
			ret
		}
		.method private final virtual hidebysig newslot 
			instance object System.Activities.Presentation.ICompositeView.OnItemsCopied(class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.ModelItem> itemsToCopy)
		{
			.override System.Activities.Presentation.ICompositeView::OnItemsCopied
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Activities.Presentation.ICompositeView.OnItemsPasted(class [mscorlib]'System.Collections.Generic.List`1'<object> itemsToPaste, class [mscorlib]'System.Collections.Generic.List`1'<object> metaData, valuetype [WindowsBase]System.Windows.Point pastePoint, class System.Activities.Presentation.WorkflowViewElement pastePointReference)
		{
			.override System.Activities.Presentation.ICompositeView::OnItemsPasted
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Activities.Presentation.ICompositeView.OnItemsDelete(class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.ModelItem> itemsToDelete)
		{
			.override System.Activities.Presentation.ICompositeView::OnItemsDelete
			ret
		}
		.method private final virtual hidebysig newslot 
			instance bool System.Activities.Presentation.ICompositeView.CanPasteItems(class [mscorlib]'System.Collections.Generic.List`1'<object> itemsToPaste)
		{
			.override System.Activities.Presentation.ICompositeView::CanPasteItems
			ret
		}
		.method assembly hidebysig 
			instance void ShowSpacerHelperOnDraggedItems(class [PresentationCore]System.Windows.DragEventArgs arg)
		{
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty AllowedItemTypeProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty DroppingTypeResolvingOptionsProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty HintTextProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty IsDefaultContainerProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ItemProperty
		.property instance class [mscorlib]System.Type AllowedItemType()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.WorkflowItemPresenter::get_AllowedItemType()
			.set instance void System.Activities.Presentation.WorkflowItemPresenter::set_AllowedItemType(class [mscorlib]System.Type)
		}
		.property instance bool AutoWrapInSequenceEnabled()
		{
			.get instance bool System.Activities.Presentation.WorkflowItemPresenter::get_AutoWrapInSequenceEnabled()
		}
		.property instance class System.Activities.Presentation.View.TypeResolvingOptions DroppingTypeResolvingOptions()
		{
			.get instance class System.Activities.Presentation.View.TypeResolvingOptions System.Activities.Presentation.WorkflowItemPresenter::get_DroppingTypeResolvingOptions()
			.set instance void System.Activities.Presentation.WorkflowItemPresenter::set_DroppingTypeResolvingOptions(class System.Activities.Presentation.View.TypeResolvingOptions)
		}
		.property instance string HintText()
		{
			.get instance string System.Activities.Presentation.WorkflowItemPresenter::get_HintText()
			.set instance void System.Activities.Presentation.WorkflowItemPresenter::set_HintText(string)
		}
		.property instance bool IsDefaultContainer()
		{
			.get instance bool System.Activities.Presentation.WorkflowItemPresenter::get_IsDefaultContainer()
			.set instance void System.Activities.Presentation.WorkflowItemPresenter::set_IsDefaultContainer(bool)
		}
		.property instance class System.Activities.Presentation.Model.ModelItem Item()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.WorkflowItemPresenter::get_Item()
			.set instance void System.Activities.Presentation.WorkflowItemPresenter::set_Item(class System.Activities.Presentation.Model.ModelItem)
		}
	}
	.class public WorkflowItemsPresenter
		extends [PresentationFramework]System.Windows.Controls.ContentControl
		implements System.Activities.Presentation.IMultipleDragEnabledCompositeView, System.Activities.Presentation.ICompositeView
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Type get_AllowedItemType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_AllowedItemType(class [mscorlib]System.Type 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_HintText()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_HintText(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationFramework]System.Windows.DataTemplate get_SpacerTemplate()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_SpacerTemplate(class [PresentationFramework]System.Windows.DataTemplate 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationFramework]System.Windows.DataTemplate get_HeaderTemplate()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_HeaderTemplate(class [PresentationFramework]System.Windows.DataTemplate 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationFramework]System.Windows.DataTemplate get_FooterTemplate()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_FooterTemplate(class [PresentationFramework]System.Windows.DataTemplate 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationFramework]System.Windows.Controls.ItemsPanelTemplate get_ItemsPanel()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ItemsPanel(class [PresentationFramework]System.Windows.Controls.ItemsPanelTemplate 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItemCollection get_Items()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Items(class System.Activities.Presentation.Model.ModelItemCollection 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_IsDefaultContainer()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsDefaultContainer(bool 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance class System.Activities.Presentation.View.TypeResolvingOptions get_DroppingTypeResolvingOptions()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_DroppingTypeResolvingOptions(class System.Activities.Presentation.View.TypeResolvingOptions 'value')
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnInitialized(class [mscorlib]System.EventArgs e)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.ModelItem> SortSelectedItems(class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.ModelItem> selectedItems)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void OnItemsMoved(class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.ModelItem> movedItems)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnDrop(class [PresentationCore]System.Windows.DragEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnDragEnter(class [PresentationCore]System.Windows.DragEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnDragOver(class [PresentationCore]System.Windows.DragEventArgs e)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void OnItemMoved(class System.Activities.Presentation.Model.ModelItem modelItem)
		{
			ret
		}
		.method family virtual hidebysig 
			instance class [PresentationCore]System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object OnItemsCut(class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.ModelItem> itemsToCut)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object OnItemsCopied(class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.ModelItem> itemsToCopy)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void OnItemsPasted(class [mscorlib]'System.Collections.Generic.List`1'<object> itemsToPaste, class [mscorlib]'System.Collections.Generic.List`1'<object> metaData, valuetype [WindowsBase]System.Windows.Point pastePoint, class System.Activities.Presentation.WorkflowViewElement pastePointReference)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void OnItemsDelete(class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.ModelItem> itemsToDelete)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool CanPasteItems(class [mscorlib]'System.Collections.Generic.List`1'<object> itemsToPaste)
		{
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty AllowedItemTypeProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty DroppingTypeResolvingOptionsProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty FooterTemplateProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty HeaderTemplateProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty HintTextProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty IndexProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty IsDefaultContainerProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ItemsPanelProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ItemsProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty SpacerTemplateProperty
		.property instance class [mscorlib]System.Type AllowedItemType()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.WorkflowItemsPresenter::get_AllowedItemType()
			.set instance void System.Activities.Presentation.WorkflowItemsPresenter::set_AllowedItemType(class [mscorlib]System.Type)
		}
		.property instance class System.Activities.Presentation.View.TypeResolvingOptions DroppingTypeResolvingOptions()
		{
			.get instance class System.Activities.Presentation.View.TypeResolvingOptions System.Activities.Presentation.WorkflowItemsPresenter::get_DroppingTypeResolvingOptions()
			.set instance void System.Activities.Presentation.WorkflowItemsPresenter::set_DroppingTypeResolvingOptions(class System.Activities.Presentation.View.TypeResolvingOptions)
		}
		.property instance class [PresentationFramework]System.Windows.DataTemplate FooterTemplate()
		{
			.get instance class [PresentationFramework]System.Windows.DataTemplate System.Activities.Presentation.WorkflowItemsPresenter::get_FooterTemplate()
			.set instance void System.Activities.Presentation.WorkflowItemsPresenter::set_FooterTemplate(class [PresentationFramework]System.Windows.DataTemplate)
		}
		.property instance class [PresentationFramework]System.Windows.DataTemplate HeaderTemplate()
		{
			.get instance class [PresentationFramework]System.Windows.DataTemplate System.Activities.Presentation.WorkflowItemsPresenter::get_HeaderTemplate()
			.set instance void System.Activities.Presentation.WorkflowItemsPresenter::set_HeaderTemplate(class [PresentationFramework]System.Windows.DataTemplate)
		}
		.property instance string HintText()
		{
			.get instance string System.Activities.Presentation.WorkflowItemsPresenter::get_HintText()
			.set instance void System.Activities.Presentation.WorkflowItemsPresenter::set_HintText(string)
		}
		.property instance bool IsDefaultContainer()
		{
			.get instance bool System.Activities.Presentation.WorkflowItemsPresenter::get_IsDefaultContainer()
			.set instance void System.Activities.Presentation.WorkflowItemsPresenter::set_IsDefaultContainer(bool)
		}
		.property instance class System.Activities.Presentation.Model.ModelItemCollection Items()
		{
			.get instance class System.Activities.Presentation.Model.ModelItemCollection System.Activities.Presentation.WorkflowItemsPresenter::get_Items()
			.set instance void System.Activities.Presentation.WorkflowItemsPresenter::set_Items(class System.Activities.Presentation.Model.ModelItemCollection)
		}
		.property instance class [PresentationFramework]System.Windows.Controls.ItemsPanelTemplate ItemsPanel()
		{
			.get instance class [PresentationFramework]System.Windows.Controls.ItemsPanelTemplate System.Activities.Presentation.WorkflowItemsPresenter::get_ItemsPanel()
			.set instance void System.Activities.Presentation.WorkflowItemsPresenter::set_ItemsPanel(class [PresentationFramework]System.Windows.Controls.ItemsPanelTemplate)
		}
		.property instance class [PresentationFramework]System.Windows.DataTemplate SpacerTemplate()
		{
			.get instance class [PresentationFramework]System.Windows.DataTemplate System.Activities.Presentation.WorkflowItemsPresenter::get_SpacerTemplate()
			.set instance void System.Activities.Presentation.WorkflowItemsPresenter::set_SpacerTemplate(class [PresentationFramework]System.Windows.DataTemplate)
		}
	}
	.class public WorkflowViewElement
		extends [PresentationFramework]System.Windows.Controls.ContentControl
		implements System.Activities.Presentation.ICompositeViewEvents
	{
		.method assembly hidebysig specialname 
			instance string get_CustomItemStatus()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_CustomItemStatus(string 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnShowExpandedChanged(bool newValue)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnReadOnlyChanged(bool isReadOnly)
		{
			ret
		}
		.method assembly hidebysig 
			instance void ForceCollapse()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnInitialized(class [mscorlib]System.EventArgs e)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.EditingContext get_Context()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Context(class System.Activities.Presentation.EditingContext 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_ExpandState()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ExpandState(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_PinState()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_PinState(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_Collapsible()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_Collapsible(bool 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsRootDesigner()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_IsRootDesigner(bool 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance bool get_IsAncestorOfRootDesigner()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_IsAncestorOfRootDesigner(bool 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance bool get_ShowExpanded()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool DoesParentAlwaysExpandChild()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool DoesParentAlwaysCollapseChildren()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_ModelItem()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ModelItem(class System.Activities.Presentation.Model.ModelItem 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationFramework]System.Windows.FrameworkElement get_DragHandle()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_DragHandle(class [PresentationFramework]System.Windows.FrameworkElement 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method family hidebysig specialname 
			instance bool get_IsReadOnly()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class System.Activities.Presentation.ICompositeView get_ActiveCompositeView()
		{
			ret
		}
		.method famorassem hidebysig specialname 
			instance class System.Activities.Presentation.Services.ViewService get_ViewService()
		{
			ret
		}
		.method famorassem hidebysig specialname 
			instance class System.Activities.Presentation.View.ViewStateService get_ViewStateService()
		{
			ret
		}
		.method famorassem hidebysig specialname 
			instance class System.Activities.Presentation.View.DesignerView get_Designer()
		{
			ret
		}
		.method family hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.IList`1'<class System.Activities.Presentation.ICompositeView> get_CompositeViews()
		{
			ret
		}
		.method family hidebysig specialname 
			instance class System.Activities.Presentation.ICompositeView get_DefaultCompositeView()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance bool get_DraggingMultipleItemsEnabled()
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance string GetAutomationIdMemberName()
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance string GetAutomationHelpText()
		{
			ret
		}
		.method famorassem virtual hidebysig newslot 
			instance string GetAutomationItemStatus()
		{
			ret
		}
		.method family virtual hidebysig 
			instance class [PresentationCore]System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer()
		{
			ret
		}
		.method famorassem virtual hidebysig newslot 
			instance void OnEditAnnotation()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void RegisterDefaultCompositeView(class System.Activities.Presentation.ICompositeView container)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void UnregisterDefaultCompositeView(class System.Activities.Presentation.ICompositeView container)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void RegisterCompositeView(class System.Activities.Presentation.ICompositeView container)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void UnregisterCompositeView(class System.Activities.Presentation.ICompositeView container)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnModelItemChanged(object newItem)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnContextMenuLoaded(class [PresentationFramework]System.Windows.Controls.ContextMenu menu)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnMouseDown(class [PresentationCore]System.Windows.Input.MouseButtonEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnMouseMove(class [PresentationCore]System.Windows.Input.MouseEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnMouseUp(class [PresentationCore]System.Windows.Input.MouseButtonEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnDragEnter(class [PresentationCore]System.Windows.DragEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnDragOver(class [PresentationCore]System.Windows.DragEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnPreviewDragEnter(class [PresentationCore]System.Windows.DragEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnPreviewDragLeave(class [PresentationCore]System.Windows.DragEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnPreviewMouseUp(class [PresentationCore]System.Windows.Input.MouseButtonEventArgs e)
		{
			ret
		}
		.method assembly hidebysig 
			instance void NotifyContextMenuLoaded(class [PresentationFramework]System.Windows.Controls.ContextMenu menu)
		{
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ContextProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ExpandStateProperty
		.field static assembly initonly class [WindowsBase]System.Windows.DependencyProperty IsRootDesignerProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ModelItemProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty PinStateProperty
		.field static assembly literal string PinnedViewStateKey = "IsPinned"
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ShowExpandedProperty
		.property instance class System.Activities.Presentation.ICompositeView ActiveCompositeView()
		{
			.get instance class System.Activities.Presentation.ICompositeView System.Activities.Presentation.WorkflowViewElement::get_ActiveCompositeView()
		}
		.property instance bool Collapsible()
		{
			.get instance bool System.Activities.Presentation.WorkflowViewElement::get_Collapsible()
			.set instance void System.Activities.Presentation.WorkflowViewElement::set_Collapsible(bool)
		}
		.property instance class [mscorlib]'System.Collections.Generic.IList`1'<class System.Activities.Presentation.ICompositeView> CompositeViews()
		{
			.get instance class [mscorlib]'System.Collections.Generic.IList`1'<class System.Activities.Presentation.ICompositeView> System.Activities.Presentation.WorkflowViewElement::get_CompositeViews()
		}
		.property instance class System.Activities.Presentation.EditingContext Context()
		{
			.get instance class System.Activities.Presentation.EditingContext System.Activities.Presentation.WorkflowViewElement::get_Context()
			.set instance void System.Activities.Presentation.WorkflowViewElement::set_Context(class System.Activities.Presentation.EditingContext)
		}
		.property instance string CustomItemStatus()
		{
			.get instance string System.Activities.Presentation.WorkflowViewElement::get_CustomItemStatus()
			.set instance void System.Activities.Presentation.WorkflowViewElement::set_CustomItemStatus(string)
		}
		.property instance class System.Activities.Presentation.ICompositeView DefaultCompositeView()
		{
			.get instance class System.Activities.Presentation.ICompositeView System.Activities.Presentation.WorkflowViewElement::get_DefaultCompositeView()
		}
		.property instance class System.Activities.Presentation.View.DesignerView Designer()
		{
			.get instance class System.Activities.Presentation.View.DesignerView System.Activities.Presentation.WorkflowViewElement::get_Designer()
		}
		.property instance class [PresentationFramework]System.Windows.FrameworkElement DragHandle()
		{
			.get instance class [PresentationFramework]System.Windows.FrameworkElement System.Activities.Presentation.WorkflowViewElement::get_DragHandle()
			.set instance void System.Activities.Presentation.WorkflowViewElement::set_DragHandle(class [PresentationFramework]System.Windows.FrameworkElement)
		}
		.property instance bool DraggingMultipleItemsEnabled()
		{
			.get instance bool System.Activities.Presentation.WorkflowViewElement::get_DraggingMultipleItemsEnabled()
		}
		.property instance bool ExpandState()
		{
			.get instance bool System.Activities.Presentation.WorkflowViewElement::get_ExpandState()
			.set instance void System.Activities.Presentation.WorkflowViewElement::set_ExpandState(bool)
		}
		.property instance bool IsAncestorOfRootDesigner()
		{
			.get instance bool System.Activities.Presentation.WorkflowViewElement::get_IsAncestorOfRootDesigner()
			.set instance void System.Activities.Presentation.WorkflowViewElement::set_IsAncestorOfRootDesigner(bool)
		}
		.property instance bool IsReadOnly()
		{
			.get instance bool System.Activities.Presentation.WorkflowViewElement::get_IsReadOnly()
		}
		.property instance bool IsRootDesigner()
		{
			.get instance bool System.Activities.Presentation.WorkflowViewElement::get_IsRootDesigner()
			.set instance void System.Activities.Presentation.WorkflowViewElement::set_IsRootDesigner(bool)
		}
		.property instance class System.Activities.Presentation.Model.ModelItem ModelItem()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.WorkflowViewElement::get_ModelItem()
			.set instance void System.Activities.Presentation.WorkflowViewElement::set_ModelItem(class System.Activities.Presentation.Model.ModelItem)
		}
		.property instance bool PinState()
		{
			.get instance bool System.Activities.Presentation.WorkflowViewElement::get_PinState()
			.set instance void System.Activities.Presentation.WorkflowViewElement::set_PinState(bool)
		}
		.property instance bool ShowExpanded()
		{
			.get instance bool System.Activities.Presentation.WorkflowViewElement::get_ShowExpanded()
		}
		.property instance class System.Activities.Presentation.Services.ViewService ViewService()
		{
			.get instance class System.Activities.Presentation.Services.ViewService System.Activities.Presentation.WorkflowViewElement::get_ViewService()
		}
		.property instance class System.Activities.Presentation.View.ViewStateService ViewStateService()
		{
			.get instance class System.Activities.Presentation.View.ViewStateService System.Activities.Presentation.WorkflowViewElement::get_ViewStateService()
		}
	}
	.class private sealed XNameConverter
		extends [System]System.ComponentModel.TypeConverter
	{
		.method public virtual hidebysig 
			instance bool CanConvertFrom(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Type sourceType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertFrom(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool CanConvertTo(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertTo(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value', class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public serializable XamlLoadErrorInfo
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor(string message, int32 lineNumber, int32 linePosition)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_LineNumber()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_LinePosition()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_Message()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_FileName()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_FileName(string 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.property instance string FileName()
		{
			.get instance string System.Activities.Presentation.XamlLoadErrorInfo::get_FileName()
			.set instance void System.Activities.Presentation.XamlLoadErrorInfo::set_FileName(string)
		}
		.property instance int32 LineNumber()
		{
			.get instance int32 System.Activities.Presentation.XamlLoadErrorInfo::get_LineNumber()
		}
		.property instance int32 LinePosition()
		{
			.get instance int32 System.Activities.Presentation.XamlLoadErrorInfo::get_LinePosition()
		}
		.property instance string Message()
		{
			.get instance string System.Activities.Presentation.XamlLoadErrorInfo::get_Message()
		}
	}
}
.namespace System.Activities.Presentation.Annotations
{
	.class private sealed AdornerLocation
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Activities.Presentation.Annotations.AdornerLocation BottomLeft = int32(0x00000004)
		.field static public literal valuetype System.Activities.Presentation.Annotations.AdornerLocation BottomRight = int32(0x00000001)
		.field static public literal valuetype System.Activities.Presentation.Annotations.AdornerLocation None = int32(0x00000000)
		.field static public literal valuetype System.Activities.Presentation.Annotations.AdornerLocation TopLeft = int32(0x00000003)
		.field static public literal valuetype System.Activities.Presentation.Annotations.AdornerLocation TopRight = int32(0x00000002)
	}
	.class public abstract sealed Annotation
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			string GetAnnotationText(object 'instance')
		{
			ret
		}
		.method public static hidebysig 
			void SetAnnotationText(object 'instance', string annotationText)
		{
			ret
		}
		.field static public initonly class [System.Xaml]System.Xaml.AttachableMemberIdentifier AnnotationTextProperty
		.field static public initonly string AnnotationTextPropertyName
		.field static assembly initonly string IsAnnotationDockedViewStateName
	}
	.class private AnnotationAdorner
		extends [PresentationFramework]System.Windows.Documents.Adorner
	{
		.method public hidebysig specialname 
			instance void .ctor(class [PresentationCore]System.Windows.UIElement adornedElement)
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class [PresentationFramework]System.Windows.Controls.ScrollViewer get_ScrollViewer()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_ScrollViewer(class [PresentationFramework]System.Windows.Controls.ScrollViewer 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance class [PresentationCore]System.Windows.UIElement get_Content()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_Content(class [PresentationCore]System.Windows.UIElement 'value')
		{
			ret
		}
		.method family virtual hidebysig specialname 
			instance int32 get_VisualChildrenCount()
		{
			ret
		}
		.method public static hidebysig 
			valuetype System.Activities.Presentation.Annotations.AdornerLocation GetAnchor(class [WindowsBase]System.Windows.DependencyObject obj)
		{
			ret
		}
		.method public static hidebysig 
			void SetAnchor(class [WindowsBase]System.Windows.DependencyObject obj, valuetype System.Activities.Presentation.Annotations.AdornerLocation anchor)
		{
			ret
		}
		.method assembly static hidebysig 
			valuetype System.Activities.Presentation.Annotations.AdornerLocation FindAnchor(valuetype [WindowsBase]System.Windows.Point anchorPoint, valuetype [WindowsBase]System.Windows.Size desiredSize, valuetype [WindowsBase]System.Windows.Rect canvas)
		{
			ret
		}
		.method family virtual hidebysig 
			instance class [PresentationCore]System.Windows.Media.Visual GetVisualChild(int32 index)
		{
			ret
		}
		.method family virtual hidebysig 
			instance valuetype [WindowsBase]System.Windows.Size MeasureOverride(valuetype [WindowsBase]System.Windows.Size constraint)
		{
			ret
		}
		.method family virtual hidebysig 
			instance valuetype [WindowsBase]System.Windows.Size ArrangeOverride(valuetype [WindowsBase]System.Windows.Size finalSize)
		{
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty AnchorProperty
		.property instance class [PresentationCore]System.Windows.UIElement Content()
		{
			.get instance class [PresentationCore]System.Windows.UIElement System.Activities.Presentation.Annotations.AnnotationAdorner::get_Content()
			.set instance void System.Activities.Presentation.Annotations.AnnotationAdorner::set_Content(class [PresentationCore]System.Windows.UIElement)
		}
		.property instance class [PresentationFramework]System.Windows.Controls.ScrollViewer ScrollViewer()
		{
			.get instance class [PresentationFramework]System.Windows.Controls.ScrollViewer System.Activities.Presentation.Annotations.AnnotationAdorner::get_ScrollViewer()
			.set instance void System.Activities.Presentation.Annotations.AnnotationAdorner::set_ScrollViewer(class [PresentationFramework]System.Windows.Controls.ScrollViewer)
		}
		.property instance int32 VisualChildrenCount()
		{
			.get instance int32 System.Activities.Presentation.Annotations.AnnotationAdorner::get_VisualChildrenCount()
		}
	}
	.class private abstract AnnotationAdornerService
		extends [mscorlib]System.Object
	{
		.method public virtual hidebysig newslot abstract 
			instance void Show(class System.Activities.Presentation.Annotations.AnnotationAdorner adorner)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Hide(class System.Activities.Presentation.Annotations.AnnotationAdorner adorner)
		{
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private AnnotationManager
		extends [mscorlib]System.Object
	{
		.method assembly hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.WorkflowViewElement workflowViewElement)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Annotations.IAnnotationVisualProvider get_AnnotationVisualProvider()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_AnnotationVisualProvider(class System.Activities.Presentation.Annotations.IAnnotationVisualProvider 'value')
		{
			ret
		}
		.method famorassem virtual hidebysig newslot specialname 
			instance class System.Activities.Presentation.Annotations.AnnotationAdornerService get_AnnotationAdornerService()
		{
			ret
		}
		.method public hidebysig 
			instance void Initialize()
		{
			ret
		}
		.method public hidebysig 
			instance void Uninitialize()
		{
			ret
		}
		.method public hidebysig 
			instance void OnEditAnnotation()
		{
			ret
		}
		.property instance class System.Activities.Presentation.Annotations.AnnotationAdornerService AnnotationAdornerService()
		{
			.get instance class System.Activities.Presentation.Annotations.AnnotationAdornerService System.Activities.Presentation.Annotations.AnnotationManager::get_AnnotationAdornerService()
		}
		.property instance class System.Activities.Presentation.Annotations.IAnnotationVisualProvider AnnotationVisualProvider()
		{
			.get instance class System.Activities.Presentation.Annotations.IAnnotationVisualProvider System.Activities.Presentation.Annotations.AnnotationManager::get_AnnotationVisualProvider()
			.set instance void System.Activities.Presentation.Annotations.AnnotationManager::set_AnnotationVisualProvider(class System.Activities.Presentation.Annotations.IAnnotationVisualProvider)
		}
	}
	.class private sealed AnnotationStatus
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Activities.Presentation.Annotations.AnnotationStatus Docked = int32(0x00000002)
		.field static public literal valuetype System.Activities.Presentation.Annotations.AnnotationStatus Floating = int32(0x00000001)
		.field static public literal valuetype System.Activities.Presentation.Annotations.AnnotationStatus Hidden = int32(0x00000000)
	}
	.class private DockedAnnotationView
		extends [PresentationFramework]System.Windows.Controls.UserControl
		implements System.Activities.Presentation.Annotations.IDockedAnnotation, [System.Xaml]System.Windows.Markup.IComponentConnector
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_UndockButtonClicked(class [mscorlib]System.Action 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_UndockButtonClicked(class [mscorlib]System.Action 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig specialname 
			class [WindowsBase]System.Windows.DependencyProperty get_AnnotationTextProperty()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsReadOnly()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_IsReadOnly(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_AnnotationText()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_AnnotationText(string 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void FocusOnContent()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnPropertyChanged(valuetype [WindowsBase]System.Windows.DependencyPropertyChangedEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnContextMenuOpening(class [PresentationFramework]System.Windows.Controls.ContextMenuEventArgs e)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void InitializeComponent()
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Windows.Markup.IComponentConnector.Connect(int32 connectionId, object target)
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.override [System.Xaml]System.Windows.Markup.IComponentConnector::Connect
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance void System.Activities.Presentation.Annotations.IDockedAnnotation.set_Visibility(valuetype [PresentationCore]System.Windows.Visibility 'value')
		{
			.override System.Activities.Presentation.Annotations.IDockedAnnotation::set_Visibility
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty IsReadOnlyProperty
		.field assembly class [PresentationFramework]System.Windows.Controls.Border border
		.field assembly class System.Activities.Presentation.Annotations.DockedAnnotationView root
		.field assembly class [PresentationFramework]System.Windows.Controls.TextBox textBox
		.field assembly class [PresentationFramework]System.Windows.Controls.Button undockButton
		.event [mscorlib]System.Action UndockButtonClicked
		{
			.addon instance void System.Activities.Presentation.Annotations.DockedAnnotationView::add_UndockButtonClicked(class [mscorlib]System.Action)
			.removeon instance void System.Activities.Presentation.Annotations.DockedAnnotationView::remove_UndockButtonClicked(class [mscorlib]System.Action)
		}
		.property instance string AnnotationText()
		{
			.get instance string System.Activities.Presentation.Annotations.DockedAnnotationView::get_AnnotationText()
			.set instance void System.Activities.Presentation.Annotations.DockedAnnotationView::set_AnnotationText(string)
		}
		.property class [WindowsBase]System.Windows.DependencyProperty AnnotationTextProperty()
		{
			.get class [WindowsBase]System.Windows.DependencyProperty System.Activities.Presentation.Annotations.DockedAnnotationView::get_AnnotationTextProperty()
		}
		.property instance bool IsReadOnly()
		{
			.get instance bool System.Activities.Presentation.Annotations.DockedAnnotationView::get_IsReadOnly()
			.set instance void System.Activities.Presentation.Annotations.DockedAnnotationView::set_IsReadOnly(bool)
		}
	}
	.class private sealed FloatingAnnotationView
		extends [PresentationFramework]System.Windows.Controls.UserControl
		implements System.Activities.Presentation.Annotations.IFloatingAnnotation, [System.Xaml]System.Windows.Markup.IComponentConnector
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_DockButtonClicked(class [mscorlib]System.Action 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_DockButtonClicked(class [mscorlib]System.Action 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_IsMouseOverChanged(class [mscorlib]System.EventHandler 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_IsMouseOverChanged(class [mscorlib]System.EventHandler 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsReadOnly()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_IsReadOnly(bool 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_ModelItem()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_ModelItem(class System.Activities.Presentation.Model.ModelItem 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void FocusOnContent()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void UpdateModelItem()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnContextMenuOpening(class [PresentationFramework]System.Windows.Controls.ContextMenuEventArgs e)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void InitializeComponent()
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Windows.Markup.IComponentConnector.Connect(int32 connectionId, object target)
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.override [System.Xaml]System.Windows.Markup.IComponentConnector::Connect
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance void System.Activities.Presentation.Annotations.IFloatingAnnotation.add_IsKeyboardFocusWithinChanged(class [WindowsBase]System.Windows.DependencyPropertyChangedEventHandler 'value')
		{
			.override System.Activities.Presentation.Annotations.IFloatingAnnotation::add_IsKeyboardFocusWithinChanged
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance void System.Activities.Presentation.Annotations.IFloatingAnnotation.remove_IsKeyboardFocusWithinChanged(class [WindowsBase]System.Windows.DependencyPropertyChangedEventHandler 'value')
		{
			.override System.Activities.Presentation.Annotations.IFloatingAnnotation::remove_IsKeyboardFocusWithinChanged
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty IsReadOnlyProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ModelItemProperty
		.field assembly class [PresentationFramework]System.Windows.Controls.TextBox annotationTextBox
		.field assembly class [PresentationFramework]System.Windows.Controls.Button dockButton
		.field assembly class System.Activities.Presentation.Annotations.FloatingAnnotationView root
		.event [mscorlib]System.Action DockButtonClicked
		{
			.addon instance void System.Activities.Presentation.Annotations.FloatingAnnotationView::add_DockButtonClicked(class [mscorlib]System.Action)
			.removeon instance void System.Activities.Presentation.Annotations.FloatingAnnotationView::remove_DockButtonClicked(class [mscorlib]System.Action)
		}
		.event [mscorlib]System.EventHandler IsMouseOverChanged
		{
			.addon instance void System.Activities.Presentation.Annotations.FloatingAnnotationView::add_IsMouseOverChanged(class [mscorlib]System.EventHandler)
			.removeon instance void System.Activities.Presentation.Annotations.FloatingAnnotationView::remove_IsMouseOverChanged(class [mscorlib]System.EventHandler)
		}
		.property instance bool IsReadOnly()
		{
			.get instance bool System.Activities.Presentation.Annotations.FloatingAnnotationView::get_IsReadOnly()
			.set instance void System.Activities.Presentation.Annotations.FloatingAnnotationView::set_IsReadOnly(bool)
		}
		.property instance class System.Activities.Presentation.Model.ModelItem ModelItem()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Annotations.FloatingAnnotationView::get_ModelItem()
			.set instance void System.Activities.Presentation.Annotations.FloatingAnnotationView::set_ModelItem(class System.Activities.Presentation.Model.ModelItem)
		}
	}
	.class private interface abstract IAnnotationIndicator
	{
		.method public virtual hidebysig newslot abstract specialname 
			instance void add_IsMouseOverChanged(class [mscorlib]System.EventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void remove_IsMouseOverChanged(class [mscorlib]System.EventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_IsMouseOver()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void set_Visibility(valuetype [PresentationCore]System.Windows.Visibility 'value')
		{
		}
		.event [mscorlib]System.EventHandler IsMouseOverChanged
		{
			.addon instance void System.Activities.Presentation.Annotations.IAnnotationIndicator::add_IsMouseOverChanged(class [mscorlib]System.EventHandler)
			.removeon instance void System.Activities.Presentation.Annotations.IAnnotationIndicator::remove_IsMouseOverChanged(class [mscorlib]System.EventHandler)
		}
		.property instance bool IsMouseOver()
		{
			.get instance bool System.Activities.Presentation.Annotations.IAnnotationIndicator::get_IsMouseOver()
		}
		.property instance valuetype [PresentationCore]System.Windows.Visibility Visibility()
		{
			.set instance void System.Activities.Presentation.Annotations.IAnnotationIndicator::set_Visibility(valuetype [PresentationCore]System.Windows.Visibility)
		}
	}
	.class private interface abstract IAnnotationVisualProvider
	{
		.method public virtual hidebysig newslot abstract 
			instance class System.Activities.Presentation.Annotations.IAnnotationIndicator GetAnnotationIndicator()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.Activities.Presentation.Annotations.IFloatingAnnotation GetFloatingAnnotation()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.Activities.Presentation.Annotations.IDockedAnnotation GetDockedAnnotation()
		{
		}
	}
	.class private interface abstract IDockedAnnotation
	{
		.method public virtual hidebysig newslot abstract specialname 
			instance void add_UndockButtonClicked(class [mscorlib]System.Action 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void remove_UndockButtonClicked(class [mscorlib]System.Action 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void set_IsReadOnly(bool 'value')
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void set_Visibility(valuetype [PresentationCore]System.Windows.Visibility 'value')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void FocusOnContent()
		{
		}
		.event [mscorlib]System.Action UndockButtonClicked
		{
			.addon instance void System.Activities.Presentation.Annotations.IDockedAnnotation::add_UndockButtonClicked(class [mscorlib]System.Action)
			.removeon instance void System.Activities.Presentation.Annotations.IDockedAnnotation::remove_UndockButtonClicked(class [mscorlib]System.Action)
		}
		.property instance bool IsReadOnly()
		{
			.set instance void System.Activities.Presentation.Annotations.IDockedAnnotation::set_IsReadOnly(bool)
		}
		.property instance valuetype [PresentationCore]System.Windows.Visibility Visibility()
		{
			.set instance void System.Activities.Presentation.Annotations.IDockedAnnotation::set_Visibility(valuetype [PresentationCore]System.Windows.Visibility)
		}
	}
	.class private interface abstract IFloatingAnnotation
	{
		.method public virtual hidebysig newslot abstract specialname 
			instance void add_IsKeyboardFocusWithinChanged(class [WindowsBase]System.Windows.DependencyPropertyChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void remove_IsKeyboardFocusWithinChanged(class [WindowsBase]System.Windows.DependencyPropertyChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void add_IsMouseOverChanged(class [mscorlib]System.EventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void remove_IsMouseOverChanged(class [mscorlib]System.EventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void add_DockButtonClicked(class [mscorlib]System.Action 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void remove_DockButtonClicked(class [mscorlib]System.Action 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void set_IsReadOnly(bool 'value')
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_ModelItem()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void set_ModelItem(class System.Activities.Presentation.Model.ModelItem 'value')
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_IsKeyboardFocusWithin()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_IsMouseOver()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void FocusOnContent()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void UpdateModelItem()
		{
		}
		.event [mscorlib]System.Action DockButtonClicked
		{
			.addon instance void System.Activities.Presentation.Annotations.IFloatingAnnotation::add_DockButtonClicked(class [mscorlib]System.Action)
			.removeon instance void System.Activities.Presentation.Annotations.IFloatingAnnotation::remove_DockButtonClicked(class [mscorlib]System.Action)
		}
		.event [WindowsBase]System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusWithinChanged
		{
			.addon instance void System.Activities.Presentation.Annotations.IFloatingAnnotation::add_IsKeyboardFocusWithinChanged(class [WindowsBase]System.Windows.DependencyPropertyChangedEventHandler)
			.removeon instance void System.Activities.Presentation.Annotations.IFloatingAnnotation::remove_IsKeyboardFocusWithinChanged(class [WindowsBase]System.Windows.DependencyPropertyChangedEventHandler)
		}
		.event [mscorlib]System.EventHandler IsMouseOverChanged
		{
			.addon instance void System.Activities.Presentation.Annotations.IFloatingAnnotation::add_IsMouseOverChanged(class [mscorlib]System.EventHandler)
			.removeon instance void System.Activities.Presentation.Annotations.IFloatingAnnotation::remove_IsMouseOverChanged(class [mscorlib]System.EventHandler)
		}
		.property instance bool IsKeyboardFocusWithin()
		{
			.get instance bool System.Activities.Presentation.Annotations.IFloatingAnnotation::get_IsKeyboardFocusWithin()
		}
		.property instance bool IsMouseOver()
		{
			.get instance bool System.Activities.Presentation.Annotations.IFloatingAnnotation::get_IsMouseOver()
		}
		.property instance bool IsReadOnly()
		{
			.set instance void System.Activities.Presentation.Annotations.IFloatingAnnotation::set_IsReadOnly(bool)
		}
		.property instance class System.Activities.Presentation.Model.ModelItem ModelItem()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Annotations.IFloatingAnnotation::get_ModelItem()
			.set instance void System.Activities.Presentation.Annotations.IFloatingAnnotation::set_ModelItem(class System.Activities.Presentation.Model.ModelItem)
		}
	}
	.class private NotifyArgumentVariableAnnotationTextChanged
		extends System.Activities.Presentation.Model.Change
	{
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.View.ArgumentDesigner get_ArgumentDesigner()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_ArgumentDesigner(class System.Activities.Presentation.View.ArgumentDesigner 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.View.VariableDesigner get_VariableDesigner()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_VariableDesigner(class System.Activities.Presentation.View.VariableDesigner 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Description()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Apply()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class System.Activities.Presentation.Model.Change GetInverse()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class System.Activities.Presentation.View.ArgumentDesigner ArgumentDesigner()
		{
			.get instance class System.Activities.Presentation.View.ArgumentDesigner System.Activities.Presentation.Annotations.NotifyArgumentVariableAnnotationTextChanged::get_ArgumentDesigner()
			.set instance void System.Activities.Presentation.Annotations.NotifyArgumentVariableAnnotationTextChanged::set_ArgumentDesigner(class System.Activities.Presentation.View.ArgumentDesigner)
		}
		.property instance string Description()
		{
			.get instance string System.Activities.Presentation.Annotations.NotifyArgumentVariableAnnotationTextChanged::get_Description()
		}
		.property instance class System.Activities.Presentation.View.VariableDesigner VariableDesigner()
		{
			.get instance class System.Activities.Presentation.View.VariableDesigner System.Activities.Presentation.Annotations.NotifyArgumentVariableAnnotationTextChanged::get_VariableDesigner()
			.set instance void System.Activities.Presentation.Annotations.NotifyArgumentVariableAnnotationTextChanged::set_VariableDesigner(class System.Activities.Presentation.View.VariableDesigner)
		}
	}
	.class private UIElementToAnnotationIndicatorAdapter
		extends [mscorlib]System.Object
		implements System.Activities.Presentation.Annotations.IAnnotationIndicator
	{
		.method public hidebysig specialname 
			instance void .ctor(class [PresentationCore]System.Windows.UIElement element)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_IsMouseOverChanged(class [mscorlib]System.EventHandler 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_IsMouseOverChanged(class [mscorlib]System.EventHandler 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_IsMouseOver()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_Visibility(valuetype [PresentationCore]System.Windows.Visibility 'value')
		{
			ret
		}
		.event [mscorlib]System.EventHandler IsMouseOverChanged
		{
			.addon instance void System.Activities.Presentation.Annotations.UIElementToAnnotationIndicatorAdapter::add_IsMouseOverChanged(class [mscorlib]System.EventHandler)
			.removeon instance void System.Activities.Presentation.Annotations.UIElementToAnnotationIndicatorAdapter::remove_IsMouseOverChanged(class [mscorlib]System.EventHandler)
		}
		.property instance bool IsMouseOver()
		{
			.get instance bool System.Activities.Presentation.Annotations.UIElementToAnnotationIndicatorAdapter::get_IsMouseOver()
		}
		.property instance valuetype [PresentationCore]System.Windows.Visibility Visibility()
		{
			.set instance void System.Activities.Presentation.Annotations.UIElementToAnnotationIndicatorAdapter::set_Visibility(valuetype [PresentationCore]System.Windows.Visibility)
		}
	}
	.class private WorkflowAnnotationAdornerService
		extends System.Activities.Presentation.Annotations.AnnotationAdornerService
	{
		.method assembly hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Show(class System.Activities.Presentation.Annotations.AnnotationAdorner adorner)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Hide(class System.Activities.Presentation.Annotations.AnnotationAdorner adorner)
		{
			ret
		}
		.method assembly hidebysig 
			instance void Initialize(class System.Activities.Presentation.EditingContext editingContext, class [PresentationFramework]System.Windows.Controls.ScrollViewer scrollViewer)
		{
			ret
		}
	}
}
.namespace System.Activities.Presentation.Converters
{
	.class private 'ActivityActionSearchableStringConverter`1'<'T'>
		extends System.Activities.Presentation.Converters.SearchableStringConverter
	{
		.method public virtual hidebysig 
			instance class [mscorlib]'System.Collections.Generic.IList`1'<string> Convert(object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private ArgumentSearchableStringConverter
		extends System.Activities.Presentation.Converters.SearchableStringConverter
	{
		.method public virtual hidebysig 
			instance class [mscorlib]'System.Collections.Generic.IList`1'<string> Convert(object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public ArgumentToExpressionConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public ArgumentToExpressionModelItemConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IMultiValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object[] values, class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object[] ConvertBack(object 'value', class [mscorlib]System.Type[] targetTypes, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private EmptySearchableStringConverter
		extends System.Activities.Presentation.Converters.SearchableStringConverter
	{
		.method public virtual hidebysig 
			instance class [mscorlib]'System.Collections.Generic.IList`1'<string> Convert(object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private EncodingSearchableStringConverter
		extends System.Activities.Presentation.Converters.SearchableStringConverter
	{
		.method public virtual hidebysig 
			instance class [mscorlib]'System.Collections.Generic.IList`1'<string> Convert(object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private ModelItemToAnnotationEnabledConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed ModelPropertyEntryToModelItemConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IMultiValueConverter, [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.class nested assembly sealed Container
			extends [WindowsBase]System.Windows.DependencyObject
		{
			.method public hidebysig specialname 
				instance void .ctor(class System.Activities.Presentation.Model.ModelItem item, class System.Activities.Presentation.EditingContext context, class [WindowsBase]System.Windows.DependencyObject viewElement, class System.Activities.Presentation.PropertyEditing.PropertyValue 'value')
			{
				ret
			}
			.method public hidebysig specialname 
				instance class System.Activities.Presentation.Model.ModelItem get_ModelItem()
			{
				ret
			}
			.method public hidebysig specialname 
				instance void set_ModelItem(class System.Activities.Presentation.Model.ModelItem 'value')
			{
				ret
			}
			.method public hidebysig specialname 
				instance class System.Activities.Presentation.EditingContext get_Context()
			{
				ret
			}
			.method public hidebysig specialname 
				instance void set_Context(class System.Activities.Presentation.EditingContext 'value')
			{
				ret
			}
			.method public hidebysig specialname 
				instance class [WindowsBase]System.Windows.DependencyObject get_WorkflowViewElement()
			{
				ret
			}
			.method public hidebysig specialname 
				instance void set_WorkflowViewElement(class [WindowsBase]System.Windows.DependencyObject 'value')
			{
				ret
			}
			.method public hidebysig specialname 
				instance class System.Activities.Presentation.PropertyEditing.PropertyValue get_PropertyValue()
			{
				ret
			}
			.method public hidebysig specialname 
				instance void set_PropertyValue(class System.Activities.Presentation.PropertyEditing.PropertyValue 'value')
			{
				ret
			}
			.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ContextProperty
			.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ModelItemProperty
			.field static public initonly class [WindowsBase]System.Windows.DependencyProperty PropertyValueProperty
			.field static public initonly class [WindowsBase]System.Windows.DependencyProperty WorkflowViewElementProperty
			.property instance class System.Activities.Presentation.EditingContext Context()
			{
				.get instance class System.Activities.Presentation.EditingContext System.Activities.Presentation.Converters.ModelPropertyEntryToModelItemConverter/Container::get_Context()
				.set instance void System.Activities.Presentation.Converters.ModelPropertyEntryToModelItemConverter/Container::set_Context(class System.Activities.Presentation.EditingContext)
			}
			.property instance class System.Activities.Presentation.Model.ModelItem ModelItem()
			{
				.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Converters.ModelPropertyEntryToModelItemConverter/Container::get_ModelItem()
				.set instance void System.Activities.Presentation.Converters.ModelPropertyEntryToModelItemConverter/Container::set_ModelItem(class System.Activities.Presentation.Model.ModelItem)
			}
			.property instance class System.Activities.Presentation.PropertyEditing.PropertyValue PropertyValue()
			{
				.get instance class System.Activities.Presentation.PropertyEditing.PropertyValue System.Activities.Presentation.Converters.ModelPropertyEntryToModelItemConverter/Container::get_PropertyValue()
				.set instance void System.Activities.Presentation.Converters.ModelPropertyEntryToModelItemConverter/Container::set_PropertyValue(class System.Activities.Presentation.PropertyEditing.PropertyValue)
			}
			.property instance class [WindowsBase]System.Windows.DependencyObject WorkflowViewElement()
			{
				.get instance class [WindowsBase]System.Windows.DependencyObject System.Activities.Presentation.Converters.ModelPropertyEntryToModelItemConverter/Container::get_WorkflowViewElement()
				.set instance void System.Activities.Presentation.Converters.ModelPropertyEntryToModelItemConverter/Container::set_WorkflowViewElement(class [WindowsBase]System.Windows.DependencyObject)
			}
		}
		.method public final virtual hidebysig newslot 
			instance object Convert(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object Convert(object[] values, class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object[] ConvertBack(object 'value', class [mscorlib]System.Type[] targetTypes, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public ModelPropertyEntryToOwnerActivityConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method assembly static hidebysig 
			class System.Activities.Presentation.Model.ModelItem Convert(class System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyEntry modelPropertyEntry, bool returnParentActivity)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public ModelToObjectValueConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public ObjectToModelValueConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IMultiValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object[] values, class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object[] ConvertBack(object 'value', class [mscorlib]System.Type[] targetTypes, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private OutlineViewTextConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IMultiValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object[] values, class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object[] ConvertBack(object 'value', class [mscorlib]System.Type[] targetTypes, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private abstract SearchableStringConverter
		extends [mscorlib]System.Object
	{
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]'System.Collections.Generic.IList`1'<string> Convert(object 'value')
		{
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private sealed SearchableStringConverterAttribute
		extends [mscorlib]System.Attribute
	{
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ConverterTypeName()
		{
			ret
		}
		.property instance string ConverterTypeName()
		{
			.get instance string System.Activities.Presentation.Converters.SearchableStringConverterAttribute::get_ConverterTypeName()
		}
	}
	.class private TypeSearchableStringConverter
		extends System.Activities.Presentation.Converters.SearchableStringConverter
	{
		.method public virtual hidebysig 
			instance class [mscorlib]'System.Collections.Generic.IList`1'<string> Convert(object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private VBIdentifierTrimConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private VisualBasicValueSearchableStringConverter
		extends System.Activities.Presentation.Converters.SearchableStringConverter
	{
		.method public virtual hidebysig 
			instance class [mscorlib]'System.Collections.Generic.IList`1'<string> Convert(object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private XNameSearchableStringConverter
		extends System.Activities.Presentation.Converters.SearchableStringConverter
	{
		.method public virtual hidebysig 
			instance class [mscorlib]'System.Collections.Generic.IList`1'<string> Convert(object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
}
.namespace System.Activities.Presentation.Core
{
	.class private sealed GenericTypeParameterConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(bool displayFullName)
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance object System.Windows.Data.IValueConverter.Convert(object 'value', class [mscorlib]System.Type convertToType, object containerParameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			.override [PresentationFramework]System.Windows.Data.IValueConverter::Convert
			ret
		}
		.method private final virtual hidebysig newslot 
			instance object System.Windows.Data.IValueConverter.ConvertBack(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			.override [PresentationFramework]System.Windows.Data.IValueConverter::ConvertBack
			ret
		}
	}
}
.namespace System.Activities.Presentation.Debug
{
	.class private sealed AllowBreakpointAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = { int32(4) }
		.method assembly static hidebysig 
			bool IsBreakpointAllowed(class [mscorlib]System.Type breakpointCandidateType)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed BreakpointTypes
		extends [mscorlib]System.Enum
	{
		.custom instance void [mscorlib]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Activities.Presentation.Debug.BreakpointTypes Bounded = int32(0x00000002)
		.field static public literal valuetype System.Activities.Presentation.Debug.BreakpointTypes Conditional = int32(0x00000004)
		.field static public literal valuetype System.Activities.Presentation.Debug.BreakpointTypes Enabled = int32(0x00000001)
		.field static public literal valuetype System.Activities.Presentation.Debug.BreakpointTypes None = int32(0x00000000)
	}
	.class public DebuggerService
		extends [mscorlib]System.Object
		implements System.Activities.Presentation.Debug.IDesignerDebugView
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.EditingContext context)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance class [System.Activities]System.Activities.Debugger.SourceLocation get_SelectedLocation()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance class [System.Activities]System.Activities.Debugger.SourceLocation get_CurrentLocation()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_CurrentLocation(class [System.Activities]System.Activities.Debugger.SourceLocation 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void EnsureVisible(class [System.Activities]System.Activities.Debugger.SourceLocation sourceLocation)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance class [System.Activities]System.Activities.Debugger.SourceLocation get_CurrentContext()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_CurrentContext(class [System.Activities]System.Activities.Debugger.SourceLocation 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_IsDebugging()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_IsDebugging(bool 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_HideSourceFileName()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_HideSourceFileName(bool 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [System.Activities]System.Activities.Debugger.SourceLocation GetExactLocation(class [System.Activities]System.Activities.Debugger.SourceLocation approximateLocation)
		{
			ret
		}
		.method assembly static hidebysig 
			class [System.Activities]System.Activities.Debugger.SourceLocation FindClosestSourceLocation(class [System.Activities]System.Activities.Debugger.SourceLocation approximateLocation, class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class [System.Activities]System.Activities.Debugger.SourceLocation> availableSourceLocations)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [mscorlib]'System.Collections.Generic.IDictionary`2'<class [System.Activities]System.Activities.Debugger.SourceLocation,valuetype System.Activities.Presentation.Debug.BreakpointTypes> GetBreakpointLocations()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void InsertBreakpoint(class [System.Activities]System.Activities.Debugger.SourceLocation sourceLocation, valuetype System.Activities.Presentation.Debug.BreakpointTypes breakpointType)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void UpdateBreakpoint(class [System.Activities]System.Activities.Debugger.SourceLocation sourceLocation, valuetype System.Activities.Presentation.Debug.BreakpointTypes newBreakpointType)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void DeleteBreakpoint(class [System.Activities]System.Activities.Debugger.SourceLocation sourceLocation)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void ResetBreakpoints()
		{
			ret
		}
		.method public hidebysig 
			instance void UpdateSourceLocations(class [mscorlib]'System.Collections.Generic.Dictionary`2'<object,class [System.Activities]System.Activities.Debugger.SourceLocation> newSourceLocationMapping)
		{
			ret
		}
		.method assembly hidebysig 
			instance void InvalidateSourceLocationMapping(string fileName)
		{
			ret
		}
		.property instance class [System.Activities]System.Activities.Debugger.SourceLocation CurrentContext()
		{
			.get instance class [System.Activities]System.Activities.Debugger.SourceLocation System.Activities.Presentation.Debug.DebuggerService::get_CurrentContext()
			.set instance void System.Activities.Presentation.Debug.DebuggerService::set_CurrentContext(class [System.Activities]System.Activities.Debugger.SourceLocation)
		}
		.property instance class [System.Activities]System.Activities.Debugger.SourceLocation CurrentLocation()
		{
			.get instance class [System.Activities]System.Activities.Debugger.SourceLocation System.Activities.Presentation.Debug.DebuggerService::get_CurrentLocation()
			.set instance void System.Activities.Presentation.Debug.DebuggerService::set_CurrentLocation(class [System.Activities]System.Activities.Debugger.SourceLocation)
		}
		.property instance bool HideSourceFileName()
		{
			.get instance bool System.Activities.Presentation.Debug.DebuggerService::get_HideSourceFileName()
			.set instance void System.Activities.Presentation.Debug.DebuggerService::set_HideSourceFileName(bool)
		}
		.property instance bool IsDebugging()
		{
			.get instance bool System.Activities.Presentation.Debug.DebuggerService::get_IsDebugging()
			.set instance void System.Activities.Presentation.Debug.DebuggerService::set_IsDebugging(bool)
		}
		.property instance class [System.Activities]System.Activities.Debugger.SourceLocation SelectedLocation()
		{
			.get instance class [System.Activities]System.Activities.Debugger.SourceLocation System.Activities.Presentation.Debug.DebuggerService::get_SelectedLocation()
		}
	}
	.class public interface abstract IDesignerDebugView
	{
		.method public virtual hidebysig newslot abstract specialname 
			instance class [System.Activities]System.Activities.Debugger.SourceLocation get_CurrentContext()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void set_CurrentContext(class [System.Activities]System.Activities.Debugger.SourceLocation 'value')
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class [System.Activities]System.Activities.Debugger.SourceLocation get_CurrentLocation()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void set_CurrentLocation(class [System.Activities]System.Activities.Debugger.SourceLocation 'value')
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_IsDebugging()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void set_IsDebugging(bool 'value')
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_HideSourceFileName()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void set_HideSourceFileName(bool 'value')
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class [System.Activities]System.Activities.Debugger.SourceLocation get_SelectedLocation()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]'System.Collections.Generic.IDictionary`2'<class [System.Activities]System.Activities.Debugger.SourceLocation,valuetype System.Activities.Presentation.Debug.BreakpointTypes> GetBreakpointLocations()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void ResetBreakpoints()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void DeleteBreakpoint(class [System.Activities]System.Activities.Debugger.SourceLocation sourceLocation)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [System.Activities]System.Activities.Debugger.SourceLocation GetExactLocation(class [System.Activities]System.Activities.Debugger.SourceLocation approximateLocation)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void InsertBreakpoint(class [System.Activities]System.Activities.Debugger.SourceLocation sourceLocation, valuetype System.Activities.Presentation.Debug.BreakpointTypes breakpointType)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void UpdateBreakpoint(class [System.Activities]System.Activities.Debugger.SourceLocation sourceLocation, valuetype System.Activities.Presentation.Debug.BreakpointTypes breakpointType)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void EnsureVisible(class [System.Activities]System.Activities.Debugger.SourceLocation sourceLocation)
		{
		}
		.property instance class [System.Activities]System.Activities.Debugger.SourceLocation CurrentContext()
		{
			.get instance class [System.Activities]System.Activities.Debugger.SourceLocation System.Activities.Presentation.Debug.IDesignerDebugView::get_CurrentContext()
			.set instance void System.Activities.Presentation.Debug.IDesignerDebugView::set_CurrentContext(class [System.Activities]System.Activities.Debugger.SourceLocation)
		}
		.property instance class [System.Activities]System.Activities.Debugger.SourceLocation CurrentLocation()
		{
			.get instance class [System.Activities]System.Activities.Debugger.SourceLocation System.Activities.Presentation.Debug.IDesignerDebugView::get_CurrentLocation()
			.set instance void System.Activities.Presentation.Debug.IDesignerDebugView::set_CurrentLocation(class [System.Activities]System.Activities.Debugger.SourceLocation)
		}
		.property instance bool HideSourceFileName()
		{
			.get instance bool System.Activities.Presentation.Debug.IDesignerDebugView::get_HideSourceFileName()
			.set instance void System.Activities.Presentation.Debug.IDesignerDebugView::set_HideSourceFileName(bool)
		}
		.property instance bool IsDebugging()
		{
			.get instance bool System.Activities.Presentation.Debug.IDesignerDebugView::get_IsDebugging()
			.set instance void System.Activities.Presentation.Debug.IDesignerDebugView::set_IsDebugging(bool)
		}
		.property instance class [System.Activities]System.Activities.Debugger.SourceLocation SelectedLocation()
		{
			.get instance class [System.Activities]System.Activities.Debugger.SourceLocation System.Activities.Presentation.Debug.IDesignerDebugView::get_SelectedLocation()
		}
	}
}
.namespace System.Activities.Presentation.Documents
{
	.class private abstract ViewManager
		extends [mscorlib]System.Object
		implements [mscorlib]System.IDisposable
	{
		.method public virtual hidebysig newslot abstract specialname 
			instance class [PresentationCore]System.Windows.Media.Visual get_View()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Initialize(class System.Activities.Presentation.EditingContext context)
		{
		}
		.method public final virtual hidebysig newslot 
			instance void Dispose()
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class [PresentationCore]System.Windows.Media.Visual View()
		{
			.get instance class [PresentationCore]System.Windows.Media.Visual System.Activities.Presentation.Documents.ViewManager::get_View()
		}
	}
	.class private sealed ViewManagerAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = { int32(4) property bool Inherited = bool(true) property bool AllowMultiple = bool(false) }
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type viewManagerType)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Type get_ViewManagerType()
		{
			ret
		}
		.property instance class [mscorlib]System.Type ViewManagerType()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.Documents.ViewManagerAttribute::get_ViewManagerType()
		}
	}
}
.namespace System.Activities.Presentation.Expressions
{
	.class public sealed CreateExpressionFromStringCallback
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [System.Activities]System.Activities.ActivityWithResult Invoke(string expressionText, bool useLocationExpression, class [mscorlib]System.Type expressionType)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(string expressionText, bool useLocationExpression, class [mscorlib]System.Type expressionType, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [System.Activities]System.Activities.ActivityWithResult EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public abstract ExpressionActivityEditor
		extends [PresentationFramework]System.Windows.Controls.UserControl
	{
		.method public hidebysig specialname 
			instance string get_HintText()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_HintText(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_Expression()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Expression(class System.Activities.Presentation.Model.ModelItem 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Type get_ExpressionType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ExpressionType(class [mscorlib]System.Type 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_UseLocationExpression()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_UseLocationExpression(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsIndependentExpression()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsIndependentExpression(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_OwnerActivity()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_OwnerActivity(class System.Activities.Presentation.Model.ModelItem 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_PathToArgument()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_PathToArgument(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsSupportedExpression()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsSupportedExpression(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_AcceptsReturn()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_AcceptsReturn(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_AcceptsTab()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_AcceptsTab(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsReadOnly()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsReadOnly(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [PresentationFramework]System.Windows.Controls.ScrollBarVisibility get_VerticalScrollBarVisibility()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_VerticalScrollBarVisibility(valuetype [PresentationFramework]System.Windows.Controls.ScrollBarVisibility 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [PresentationFramework]System.Windows.Controls.ScrollBarVisibility get_HorizontalScrollBarVisibility()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_HorizontalScrollBarVisibility(valuetype [PresentationFramework]System.Windows.Controls.ScrollBarVisibility 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_ExplicitCommit()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ExplicitCommit(bool 'value')
		{
			ret
		}
		.method public static hidebysig 
			void SetExpressionActivityEditor(object target, string name)
		{
			ret
		}
		.method public static hidebysig 
			string GetExpressionActivityEditor(object target)
		{
			ret
		}
		.method assembly static hidebysig 
			void ValidateExpressionActivityEditorName(string name)
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance string get_ItemStatus()
		{
			ret
		}
		.method family hidebysig specialname 
			instance class System.Activities.Presentation.EditingContext get_Context()
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void BeginEdit()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance bool CanCommit()
		{
			ret
		}
		.method public virtual hidebysig newslot abstract 
			instance bool Commit(bool isExplicitCommit)
		{
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty AcceptsReturnProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty AcceptsTabProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ExplicitCommitProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ExpressionProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ExpressionTypeProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty HintTextProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty HorizontalScrollBarVisibilityProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty IsIndependentExpressionProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty IsReadOnlyProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty IsSupportedExpressionProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty OwnerActivityProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty PathToArgumentProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty UseLocationExpressionProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty VerticalScrollBarVisibilityProperty
		.property instance bool AcceptsReturn()
		{
			.get instance bool System.Activities.Presentation.Expressions.ExpressionActivityEditor::get_AcceptsReturn()
			.set instance void System.Activities.Presentation.Expressions.ExpressionActivityEditor::set_AcceptsReturn(bool)
		}
		.property instance bool AcceptsTab()
		{
			.get instance bool System.Activities.Presentation.Expressions.ExpressionActivityEditor::get_AcceptsTab()
			.set instance void System.Activities.Presentation.Expressions.ExpressionActivityEditor::set_AcceptsTab(bool)
		}
		.property instance class System.Activities.Presentation.EditingContext Context()
		{
			.get instance class System.Activities.Presentation.EditingContext System.Activities.Presentation.Expressions.ExpressionActivityEditor::get_Context()
		}
		.property instance bool ExplicitCommit()
		{
			.get instance bool System.Activities.Presentation.Expressions.ExpressionActivityEditor::get_ExplicitCommit()
			.set instance void System.Activities.Presentation.Expressions.ExpressionActivityEditor::set_ExplicitCommit(bool)
		}
		.property instance class System.Activities.Presentation.Model.ModelItem Expression()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Expressions.ExpressionActivityEditor::get_Expression()
			.set instance void System.Activities.Presentation.Expressions.ExpressionActivityEditor::set_Expression(class System.Activities.Presentation.Model.ModelItem)
		}
		.property instance class [mscorlib]System.Type ExpressionType()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.Expressions.ExpressionActivityEditor::get_ExpressionType()
			.set instance void System.Activities.Presentation.Expressions.ExpressionActivityEditor::set_ExpressionType(class [mscorlib]System.Type)
		}
		.property instance string HintText()
		{
			.get instance string System.Activities.Presentation.Expressions.ExpressionActivityEditor::get_HintText()
			.set instance void System.Activities.Presentation.Expressions.ExpressionActivityEditor::set_HintText(string)
		}
		.property instance valuetype [PresentationFramework]System.Windows.Controls.ScrollBarVisibility HorizontalScrollBarVisibility()
		{
			.get instance valuetype [PresentationFramework]System.Windows.Controls.ScrollBarVisibility System.Activities.Presentation.Expressions.ExpressionActivityEditor::get_HorizontalScrollBarVisibility()
			.set instance void System.Activities.Presentation.Expressions.ExpressionActivityEditor::set_HorizontalScrollBarVisibility(valuetype [PresentationFramework]System.Windows.Controls.ScrollBarVisibility)
		}
		.property instance bool IsIndependentExpression()
		{
			.get instance bool System.Activities.Presentation.Expressions.ExpressionActivityEditor::get_IsIndependentExpression()
			.set instance void System.Activities.Presentation.Expressions.ExpressionActivityEditor::set_IsIndependentExpression(bool)
		}
		.property instance bool IsReadOnly()
		{
			.get instance bool System.Activities.Presentation.Expressions.ExpressionActivityEditor::get_IsReadOnly()
			.set instance void System.Activities.Presentation.Expressions.ExpressionActivityEditor::set_IsReadOnly(bool)
		}
		.property instance bool IsSupportedExpression()
		{
			.get instance bool System.Activities.Presentation.Expressions.ExpressionActivityEditor::get_IsSupportedExpression()
			.set instance void System.Activities.Presentation.Expressions.ExpressionActivityEditor::set_IsSupportedExpression(bool)
		}
		.property instance string ItemStatus()
		{
			.get instance string System.Activities.Presentation.Expressions.ExpressionActivityEditor::get_ItemStatus()
		}
		.property instance class System.Activities.Presentation.Model.ModelItem OwnerActivity()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Expressions.ExpressionActivityEditor::get_OwnerActivity()
			.set instance void System.Activities.Presentation.Expressions.ExpressionActivityEditor::set_OwnerActivity(class System.Activities.Presentation.Model.ModelItem)
		}
		.property instance string PathToArgument()
		{
			.get instance string System.Activities.Presentation.Expressions.ExpressionActivityEditor::get_PathToArgument()
			.set instance void System.Activities.Presentation.Expressions.ExpressionActivityEditor::set_PathToArgument(string)
		}
		.property instance bool UseLocationExpression()
		{
			.get instance bool System.Activities.Presentation.Expressions.ExpressionActivityEditor::get_UseLocationExpression()
			.set instance void System.Activities.Presentation.Expressions.ExpressionActivityEditor::set_UseLocationExpression(bool)
		}
		.property instance valuetype [PresentationFramework]System.Windows.Controls.ScrollBarVisibility VerticalScrollBarVisibility()
		{
			.get instance valuetype [PresentationFramework]System.Windows.Controls.ScrollBarVisibility System.Activities.Presentation.Expressions.ExpressionActivityEditor::get_VerticalScrollBarVisibility()
			.set instance void System.Activities.Presentation.Expressions.ExpressionActivityEditor::set_VerticalScrollBarVisibility(valuetype [PresentationFramework]System.Windows.Controls.ScrollBarVisibility)
		}
	}
	.class public abstract ExpressionMorphHelper
		extends [mscorlib]System.Object
	{
		.method public virtual hidebysig newslot 
			instance bool TryInferReturnType(class [System.Activities]System.Activities.ActivityWithResult expression, class System.Activities.Presentation.EditingContext context, [out] class [mscorlib]System.Type& returnType)
		{
			ret
		}
		.method public virtual hidebysig newslot abstract 
			instance bool TryMorphExpression(class [System.Activities]System.Activities.ActivityWithResult expression, bool isLocationExpression, class [mscorlib]System.Type newType, class System.Activities.Presentation.EditingContext context, [out] class [System.Activities]System.Activities.ActivityWithResult& newExpression)
		{
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed ExpressionMorphHelperAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = { int32(4) }
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type expressionMorphHelperType)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Type get_ExpressionMorphHelperType()
		{
			ret
		}
		.property instance class [mscorlib]System.Type ExpressionMorphHelperType()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.Expressions.ExpressionMorphHelperAttribute::get_ExpressionMorphHelperType()
		}
	}
	.class public abstract TextualExpressionEditor
		extends System.Activities.Presentation.Expressions.ExpressionActivityEditor
	{
		.method public hidebysig specialname 
			instance int32 get_MaxLines()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MaxLines(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_MinLines()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MinLines(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_DefaultValue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_DefaultValue(string 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class System.Activities.Presentation.View.IExpressionEditorService get_ExpressionEditorService()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void OnCompleteWordCommandCanExecute(class [PresentationCore]System.Windows.Input.CanExecuteRoutedEventArgs e)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void OnCompleteWordCommandExecute(class [PresentationCore]System.Windows.Input.ExecutedRoutedEventArgs e)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void OnGlobalIntellisenseCommandCanExecute(class [PresentationCore]System.Windows.Input.CanExecuteRoutedEventArgs e)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void OnGlobalIntellisenseCommandExecute(class [PresentationCore]System.Windows.Input.ExecutedRoutedEventArgs e)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void OnParameterInfoCommandCanExecute(class [PresentationCore]System.Windows.Input.CanExecuteRoutedEventArgs e)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void OnParameterInfoCommandExecute(class [PresentationCore]System.Windows.Input.ExecutedRoutedEventArgs e)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void OnQuickInfoCommandCanExecute(class [PresentationCore]System.Windows.Input.CanExecuteRoutedEventArgs e)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void OnQuickInfoCommandExecute(class [PresentationCore]System.Windows.Input.ExecutedRoutedEventArgs e)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void OnIncreaseFilterLevelCommandCanExecute(class [PresentationCore]System.Windows.Input.CanExecuteRoutedEventArgs e)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void OnDecreaseFilterLevelCommandExecute(class [PresentationCore]System.Windows.Input.ExecutedRoutedEventArgs e)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void OnDecreaseFilterLevelCommandCanExecute(class [PresentationCore]System.Windows.Input.CanExecuteRoutedEventArgs e)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void OnIncreaseFilterLevelCommandExecute(class [PresentationCore]System.Windows.Input.ExecutedRoutedEventArgs e)
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty DefaultValueProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty MaxLinesProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty MinLinesProperty
		.property instance string DefaultValue()
		{
			.get instance string System.Activities.Presentation.Expressions.TextualExpressionEditor::get_DefaultValue()
			.set instance void System.Activities.Presentation.Expressions.TextualExpressionEditor::set_DefaultValue(string)
		}
		.property instance class System.Activities.Presentation.View.IExpressionEditorService ExpressionEditorService()
		{
			.get instance class System.Activities.Presentation.View.IExpressionEditorService System.Activities.Presentation.Expressions.TextualExpressionEditor::get_ExpressionEditorService()
		}
		.property instance int32 MaxLines()
		{
			.get instance int32 System.Activities.Presentation.Expressions.TextualExpressionEditor::get_MaxLines()
			.set instance void System.Activities.Presentation.Expressions.TextualExpressionEditor::set_MaxLines(int32)
		}
		.property instance int32 MinLines()
		{
			.get instance int32 System.Activities.Presentation.Expressions.TextualExpressionEditor::get_MinLines()
			.set instance void System.Activities.Presentation.Expressions.TextualExpressionEditor::set_MinLines(int32)
		}
	}
}
.namespace System.Activities.Presentation.FreeFormEditing
{
	.class private sealed AutoConnectAdorner
		extends [PresentationFramework]System.Windows.Documents.Adorner
	{
		.method public hidebysig specialname 
			instance void .ctor(class [PresentationCore]System.Windows.UIElement adornedElement, class System.Activities.Presentation.FreeFormEditing.FreeFormPanel panel, valuetype System.Activities.Presentation.FreeFormEditing.AutoConnectDirections directions)
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance valuetype System.Activities.Presentation.FreeFormEditing.AutoConnectDirections get_AutoConnectDirection()
		{
			ret
		}
		.method assembly hidebysig 
			instance void OnDrag(class [PresentationCore]System.Windows.DragEventArgs e)
		{
			ret
		}
		.method assembly hidebysig 
			instance void UpdateHighlightedDirection(valuetype [WindowsBase]System.Windows.Point position)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnInitialized(class [mscorlib]System.EventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnDragEnter(class [PresentationCore]System.Windows.DragEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnDragOver(class [PresentationCore]System.Windows.DragEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnDragLeave(class [PresentationCore]System.Windows.DragEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnDrop(class [PresentationCore]System.Windows.DragEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnRender(class [PresentationCore]System.Windows.Media.DrawingContext drawingContext)
		{
			ret
		}
		.property instance valuetype System.Activities.Presentation.FreeFormEditing.AutoConnectDirections AutoConnectDirection()
		{
			.get instance valuetype System.Activities.Presentation.FreeFormEditing.AutoConnectDirections System.Activities.Presentation.FreeFormEditing.AutoConnectAdorner::get_AutoConnectDirection()
		}
	}
	.class private sealed AutoConnectDirections
		extends [mscorlib]System.Enum
	{
		.custom instance void [mscorlib]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Activities.Presentation.FreeFormEditing.AutoConnectDirections Bottom = int32(0x00000008)
		.field static public literal valuetype System.Activities.Presentation.FreeFormEditing.AutoConnectDirections Left = int32(0x00000001)
		.field static public literal valuetype System.Activities.Presentation.FreeFormEditing.AutoConnectDirections None = int32(0x00000000)
		.field static public literal valuetype System.Activities.Presentation.FreeFormEditing.AutoConnectDirections Right = int32(0x00000002)
		.field static public literal valuetype System.Activities.Presentation.FreeFormEditing.AutoConnectDirections Top = int32(0x00000004)
	}
	.class private sealed AutoConnectHelper
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.FreeFormEditing.FreeFormPanel panel)
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class [PresentationCore]System.Windows.UIElement get_CurrentTarget()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_CurrentTarget(class [PresentationCore]System.Windows.UIElement 'value')
		{
			ret
		}
		.method assembly static hidebysig 
			valuetype [WindowsBase]System.Windows.Rect GetAutoConnectHitRect(class [WindowsBase]System.Windows.DependencyObject target)
		{
			ret
		}
		.method assembly static hidebysig 
			class [mscorlib]'System.Collections.Generic.List`1'<valuetype [WindowsBase]System.Windows.Rect> CreateHitTestRects(valuetype [WindowsBase]System.Windows.Point targetLocation, valuetype [WindowsBase]System.Windows.Size targetSize)
		{
			ret
		}
		.method assembly static hidebysig 
			valuetype System.Activities.Presentation.FreeFormEditing.AutoConnectDirections GetAutoConnectDirection(int32 index)
		{
			ret
		}
		.method assembly static hidebysig 
			valuetype [WindowsBase]System.Windows.Point CalculateDropLocation(valuetype [WindowsBase]System.Windows.Size droppedSize, class [WindowsBase]System.Windows.DependencyObject autoConnectTarget, valuetype System.Activities.Presentation.FreeFormEditing.AutoConnectDirections direction, class [System.Core]'System.Collections.Generic.HashSet`1'<valuetype [WindowsBase]System.Windows.Point> shapeLocations)
		{
			ret
		}
		.method assembly static hidebysig 
			valuetype System.Activities.Presentation.FreeFormEditing.EdgeLocation AutoConnectDirection2EdgeLocation(valuetype System.Activities.Presentation.FreeFormEditing.AutoConnectDirections direction)
		{
			ret
		}
		.method assembly static hidebysig 
			class [WindowsBase]System.Windows.DependencyObject GetShapeContainingPoint(valuetype [WindowsBase]System.Windows.Point point, class [mscorlib]'System.Collections.Generic.List`1'<class [WindowsBase]System.Windows.DependencyObject> shapes)
		{
			ret
		}
		.method assembly hidebysig 
			instance class [WindowsBase]System.Windows.DependencyObject FindTarget(valuetype [WindowsBase]System.Windows.Point point, class [WindowsBase]System.Windows.DependencyObject dragged, [out] valuetype System.Activities.Presentation.FreeFormEditing.AutoConnectDirections& directions)
		{
			ret
		}
		.method assembly hidebysig 
			instance void OnPreviewDragOverPanel(class [PresentationCore]System.Windows.DragEventArgs e)
		{
			ret
		}
		.method assembly hidebysig 
			instance void RemoveDropTargets()
		{
			ret
		}
		.property instance class [PresentationCore]System.Windows.UIElement CurrentTarget()
		{
			.get instance class [PresentationCore]System.Windows.UIElement System.Activities.Presentation.FreeFormEditing.AutoConnectHelper::get_CurrentTarget()
			.set instance void System.Activities.Presentation.FreeFormEditing.AutoConnectHelper::set_CurrentTarget(class [PresentationCore]System.Windows.UIElement)
		}
	}
	.class private sealed AutoSplitAdorner
		extends [PresentationFramework]System.Windows.Documents.Adorner
	{
		.method public hidebysig specialname 
			instance void .ctor(class [PresentationCore]System.Windows.UIElement adornedElement)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnRender(class [PresentationCore]System.Windows.Media.DrawingContext drawingContext)
		{
			ret
		}
	}
	.class private sealed AutoSplitAlignment
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Activities.Presentation.FreeFormEditing.AutoSplitAlignment Horizontal = int32(0x00000002)
		.field static public literal valuetype System.Activities.Presentation.FreeFormEditing.AutoSplitAlignment None = int32(0x00000000)
		.field static public literal valuetype System.Activities.Presentation.FreeFormEditing.AutoSplitAlignment Vertical = int32(0x00000001)
	}
	.class private abstract sealed AutoSplitHelper
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			void CalculateEntryExitEdges(valuetype [WindowsBase]System.Windows.Point mousePosition, class System.Activities.Presentation.FreeFormEditing.Connector connector, [out] valuetype System.Activities.Presentation.FreeFormEditing.EdgeLocation& entryEdge, [out] valuetype System.Activities.Presentation.FreeFormEditing.EdgeLocation& exitEdge)
		{
			ret
		}
		.method public static hidebysig 
			valuetype [WindowsBase]System.Windows.Point CalculateDropLocation(valuetype [WindowsBase]System.Windows.Point mousePosition, valuetype [WindowsBase]System.Windows.Point originalDropLocation, class System.Activities.Presentation.FreeFormEditing.Connector connector, valuetype [WindowsBase]System.Windows.Size droppedSize, class [System.Core]'System.Collections.Generic.HashSet`1'<valuetype [WindowsBase]System.Windows.Point> shapeLocations)
		{
			ret
		}
		.method assembly static hidebysig 
			valuetype [WindowsBase]System.Windows.Point CalculateDropLocation(valuetype [WindowsBase]System.Windows.Point mousePosition, valuetype [WindowsBase]System.Windows.Point originalDropLocation, valuetype [WindowsBase]System.Windows.Size droppedSize, valuetype [WindowsBase]System.Windows.Point srcLocation, valuetype [WindowsBase]System.Windows.Point destLocation, valuetype [WindowsBase]System.Windows.Size srcSize, valuetype [WindowsBase]System.Windows.Size destSize, class [System.Core]'System.Collections.Generic.HashSet`1'<valuetype [WindowsBase]System.Windows.Point> shapeLocations)
		{
			ret
		}
		.method assembly static hidebysig 
			valuetype System.Activities.Presentation.FreeFormEditing.AutoSplitAlignment GetAlignment(valuetype [WindowsBase]System.Windows.Point mousePosition, valuetype [WindowsBase]System.Windows.Point targetLocation, valuetype [WindowsBase]System.Windows.Size targetSize)
		{
			ret
		}
		.method assembly static hidebysig 
			valuetype [WindowsBase]System.Windows.Point CalculateDropLocationToAlignVertically(valuetype [WindowsBase]System.Windows.Point originalDropLocation, valuetype [WindowsBase]System.Windows.Size droppedSize, valuetype [WindowsBase]System.Windows.Point targetLocation, valuetype [WindowsBase]System.Windows.Size targetSize)
		{
			ret
		}
		.method assembly static hidebysig 
			valuetype [WindowsBase]System.Windows.Point CalculateDropLocationToAlignHorizontally(valuetype [WindowsBase]System.Windows.Point originalDropLocation, valuetype [WindowsBase]System.Windows.Size droppedSize, valuetype [WindowsBase]System.Windows.Point targetLocation, valuetype [WindowsBase]System.Windows.Size targetSize)
		{
			ret
		}
		.method assembly static hidebysig 
			valuetype System.Activities.Presentation.FreeFormEditing.EdgeLocation CalculateEdgeLocation(valuetype [WindowsBase]System.Windows.Point mousePosition, valuetype [WindowsBase]System.Windows.Point shapeCenter)
		{
			ret
		}
	}
	.class private ConnectionPoint
		extends [PresentationCore]System.Windows.UIElement
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.FreeFormEditing.Connector> get_AttachedConnectors()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [WindowsBase]System.Windows.Point get_Location()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Location(valuetype [WindowsBase]System.Windows.Point 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [WindowsBase]System.Windows.Vector get_DrawingOffset()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [WindowsBase]System.Windows.Vector get_HitTestOffset()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [WindowsBase]System.Windows.Size get_DrawingSize()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [WindowsBase]System.Windows.Size get_HitTestSize()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationCore]System.Windows.UIElement get_ParentDesigner()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ParentDesigner(class [PresentationCore]System.Windows.UIElement 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.Activities.Presentation.FreeFormEditing.ConnectionPointKind get_PointType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_PointType(valuetype System.Activities.Presentation.FreeFormEditing.ConnectionPointKind 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.List`1'<valuetype [WindowsBase]System.Windows.Point> get_Edge()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.Activities.Presentation.FreeFormEditing.EdgeLocation get_EdgeLocation()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_EdgeLocation(valuetype System.Activities.Presentation.FreeFormEditing.EdgeLocation 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class System.Activities.Presentation.FreeFormEditing.ConnectionPoint GetClosestConnectionPoint(class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.FreeFormEditing.ConnectionPoint> connectionPoints, valuetype [WindowsBase]System.Windows.Point refPoint, [out] float64& minDist)
		{
			ret
		}
		.field static assembly literal float64 DrawingLargeSide = float64(0x4024000000000000)
		.field static assembly literal float64 DrawingSmallSide = float64(0x4010000000000000)
		.field static assembly literal float64 HitTestLargeSide = float64(0x4034000000000000)
		.field static assembly literal float64 HitTestSmallSide = float64(0x402C000000000000)
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty LocationProperty
		.property instance class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.FreeFormEditing.Connector> AttachedConnectors()
		{
			.get instance class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.FreeFormEditing.Connector> System.Activities.Presentation.FreeFormEditing.ConnectionPoint::get_AttachedConnectors()
		}
		.property instance valuetype [WindowsBase]System.Windows.Vector DrawingOffset()
		{
			.get instance valuetype [WindowsBase]System.Windows.Vector System.Activities.Presentation.FreeFormEditing.ConnectionPoint::get_DrawingOffset()
		}
		.property instance valuetype [WindowsBase]System.Windows.Size DrawingSize()
		{
			.get instance valuetype [WindowsBase]System.Windows.Size System.Activities.Presentation.FreeFormEditing.ConnectionPoint::get_DrawingSize()
		}
		.property instance class [mscorlib]'System.Collections.Generic.List`1'<valuetype [WindowsBase]System.Windows.Point> Edge()
		{
			.get instance class [mscorlib]'System.Collections.Generic.List`1'<valuetype [WindowsBase]System.Windows.Point> System.Activities.Presentation.FreeFormEditing.ConnectionPoint::get_Edge()
		}
		.property instance valuetype System.Activities.Presentation.FreeFormEditing.EdgeLocation EdgeLocation()
		{
			.get instance valuetype System.Activities.Presentation.FreeFormEditing.EdgeLocation System.Activities.Presentation.FreeFormEditing.ConnectionPoint::get_EdgeLocation()
			.set instance void System.Activities.Presentation.FreeFormEditing.ConnectionPoint::set_EdgeLocation(valuetype System.Activities.Presentation.FreeFormEditing.EdgeLocation)
		}
		.property instance valuetype [WindowsBase]System.Windows.Vector HitTestOffset()
		{
			.get instance valuetype [WindowsBase]System.Windows.Vector System.Activities.Presentation.FreeFormEditing.ConnectionPoint::get_HitTestOffset()
		}
		.property instance valuetype [WindowsBase]System.Windows.Size HitTestSize()
		{
			.get instance valuetype [WindowsBase]System.Windows.Size System.Activities.Presentation.FreeFormEditing.ConnectionPoint::get_HitTestSize()
		}
		.property instance valuetype [WindowsBase]System.Windows.Point Location()
		{
			.get instance valuetype [WindowsBase]System.Windows.Point System.Activities.Presentation.FreeFormEditing.ConnectionPoint::get_Location()
			.set instance void System.Activities.Presentation.FreeFormEditing.ConnectionPoint::set_Location(valuetype [WindowsBase]System.Windows.Point)
		}
		.property instance class [PresentationCore]System.Windows.UIElement ParentDesigner()
		{
			.get instance class [PresentationCore]System.Windows.UIElement System.Activities.Presentation.FreeFormEditing.ConnectionPoint::get_ParentDesigner()
			.set instance void System.Activities.Presentation.FreeFormEditing.ConnectionPoint::set_ParentDesigner(class [PresentationCore]System.Windows.UIElement)
		}
		.property instance valuetype System.Activities.Presentation.FreeFormEditing.ConnectionPointKind PointType()
		{
			.get instance valuetype System.Activities.Presentation.FreeFormEditing.ConnectionPointKind System.Activities.Presentation.FreeFormEditing.ConnectionPoint::get_PointType()
			.set instance void System.Activities.Presentation.FreeFormEditing.ConnectionPoint::set_PointType(valuetype System.Activities.Presentation.FreeFormEditing.ConnectionPointKind)
		}
	}
	.class private ConnectionPointConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IMultiValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object[] values, class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object[] ConvertBack(object 'value', class [mscorlib]System.Type[] targetTypes, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private sealed ConnectionPointKind
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Activities.Presentation.FreeFormEditing.ConnectionPointKind Default = int32(0x00000000)
		.field static public literal valuetype System.Activities.Presentation.FreeFormEditing.ConnectionPointKind Incoming = int32(0x00000001)
		.field static public literal valuetype System.Activities.Presentation.FreeFormEditing.ConnectionPointKind Outgoing = int32(0x00000002)
	}
	.class private ConnectionPointsAdorner
		extends [PresentationFramework]System.Windows.Documents.Adorner
	{
		.method assembly hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.FreeFormEditing.ConnectionPoint> get_ConnectionPoints()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [PresentationCore]System.Windows.UIElement adornedElement, class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.FreeFormEditing.ConnectionPoint> connectionPointsToShow, bool isParentShapeSelected)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnInitialized(class [mscorlib]System.EventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnMouseMove(class [PresentationCore]System.Windows.Input.MouseEventArgs e)
		{
			ret
		}
		.method family hidebysig 
			instance void DrawConnectionPoint(class System.Activities.Presentation.FreeFormEditing.ConnectionPoint connPoint, valuetype [WindowsBase]System.Windows.Point actualLocation, class [PresentationCore]System.Windows.Media.DrawingContext drawingContext)
		{
			ret
		}
		.field family class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.FreeFormEditing.ConnectionPoint> connectionPoints
		.property instance class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.FreeFormEditing.ConnectionPoint> ConnectionPoints()
		{
			.get instance class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.FreeFormEditing.ConnectionPoint> System.Activities.Presentation.FreeFormEditing.ConnectionPointsAdorner::get_ConnectionPoints()
		}
	}
	.class private Connector
		extends [PresentationFramework]System.Windows.Controls.UserControl
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationCore]System.Windows.Media.PointCollection get_Points()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Points(class [PresentationCore]System.Windows.Media.PointCollection 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsSelected()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsSelected(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_LabelText()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LabelText(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_HighlightOnHover()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_HighlightOnHover(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsHighlightedForAutoSplit()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsHighlightedForAutoSplit(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [mscorlib]System.Guid get_Identity()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Identity(valuetype [mscorlib]System.Guid 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_AutomationName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationCore]System.Windows.UIElement get_SourceShape()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationCore]System.Windows.UIElement get_DestinationShape()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.FreeFormEditing.IAutoSplitContainer get_AutoSplitContainer()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_AutoSplitContainer(class System.Activities.Presentation.FreeFormEditing.IAutoSplitContainer 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class [PresentationFramework]System.Windows.FrameworkElement get_StartDot()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void SetLabelToolTip(object toolTip)
		{
			ret
		}
		.method family virtual hidebysig 
			instance class [PresentationCore]System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnDragEnter(class [PresentationCore]System.Windows.DragEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnDragLeave(class [PresentationCore]System.Windows.DragEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnDrop(class [PresentationCore]System.Windows.DragEventArgs e)
		{
			ret
		}
		.field static public literal float64 ArrowShapeWidth = float64(0x4014000000000000)
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty HighlightOnHoverProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty IdentityProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty IsHighlightedForAutoSplitProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty IsSelectedProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty LabelTextProperty
		.field static assembly literal int32 MinConnectorSegmentLengthForLabel = int32(0x0000001E)
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty PointsProperty
		.property instance class System.Activities.Presentation.FreeFormEditing.IAutoSplitContainer AutoSplitContainer()
		{
			.get instance class System.Activities.Presentation.FreeFormEditing.IAutoSplitContainer System.Activities.Presentation.FreeFormEditing.Connector::get_AutoSplitContainer()
			.set instance void System.Activities.Presentation.FreeFormEditing.Connector::set_AutoSplitContainer(class System.Activities.Presentation.FreeFormEditing.IAutoSplitContainer)
		}
		.property instance string AutomationName()
		{
			.get instance string System.Activities.Presentation.FreeFormEditing.Connector::get_AutomationName()
		}
		.property instance class [PresentationCore]System.Windows.UIElement DestinationShape()
		{
			.get instance class [PresentationCore]System.Windows.UIElement System.Activities.Presentation.FreeFormEditing.Connector::get_DestinationShape()
		}
		.property instance bool HighlightOnHover()
		{
			.get instance bool System.Activities.Presentation.FreeFormEditing.Connector::get_HighlightOnHover()
			.set instance void System.Activities.Presentation.FreeFormEditing.Connector::set_HighlightOnHover(bool)
		}
		.property instance valuetype [mscorlib]System.Guid Identity()
		{
			.get instance valuetype [mscorlib]System.Guid System.Activities.Presentation.FreeFormEditing.Connector::get_Identity()
			.set instance void System.Activities.Presentation.FreeFormEditing.Connector::set_Identity(valuetype [mscorlib]System.Guid)
		}
		.property instance bool IsHighlightedForAutoSplit()
		{
			.get instance bool System.Activities.Presentation.FreeFormEditing.Connector::get_IsHighlightedForAutoSplit()
			.set instance void System.Activities.Presentation.FreeFormEditing.Connector::set_IsHighlightedForAutoSplit(bool)
		}
		.property instance bool IsSelected()
		{
			.get instance bool System.Activities.Presentation.FreeFormEditing.Connector::get_IsSelected()
			.set instance void System.Activities.Presentation.FreeFormEditing.Connector::set_IsSelected(bool)
		}
		.property instance string LabelText()
		{
			.get instance string System.Activities.Presentation.FreeFormEditing.Connector::get_LabelText()
			.set instance void System.Activities.Presentation.FreeFormEditing.Connector::set_LabelText(string)
		}
		.property instance class [PresentationCore]System.Windows.Media.PointCollection Points()
		{
			.get instance class [PresentationCore]System.Windows.Media.PointCollection System.Activities.Presentation.FreeFormEditing.Connector::get_Points()
			.set instance void System.Activities.Presentation.FreeFormEditing.Connector::set_Points(class [PresentationCore]System.Windows.Media.PointCollection)
		}
		.property instance class [PresentationCore]System.Windows.UIElement SourceShape()
		{
			.get instance class [PresentationCore]System.Windows.UIElement System.Activities.Presentation.FreeFormEditing.Connector::get_SourceShape()
		}
		.property instance class [PresentationFramework]System.Windows.FrameworkElement StartDot()
		{
			.get instance class [PresentationFramework]System.Windows.FrameworkElement System.Activities.Presentation.FreeFormEditing.Connector::get_StartDot()
		}
	}
	.class private ConnectorAutomationNameConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IMultiValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object[] values, class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object[] ConvertBack(object 'value', class [mscorlib]System.Type[] targetTypes, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private sealed ConnectorCreationAdorner
		extends [PresentationFramework]System.Windows.Documents.Adorner
	{
		.method public hidebysig specialname 
			instance void .ctor(class [PresentationCore]System.Windows.UIElement adornedElement, class [mscorlib]'System.Collections.Generic.List`1'<valuetype [WindowsBase]System.Windows.Point> linkPoints)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnRender(class [PresentationCore]System.Windows.Media.DrawingContext drawingContext)
		{
			ret
		}
	}
	.class private ConnectorEditor
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.FreeFormEditing.FreeFormPanel panel, class System.Activities.Presentation.FreeFormEditing.Connector connector)
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_BeingEdited()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsConnectorStartBeingMoved()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsConnectorEndBeingMoved()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.FreeFormEditing.Connector get_Connector()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Connector(class System.Activities.Presentation.FreeFormEditing.Connector 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.List`1'<valuetype [WindowsBase]System.Windows.Point> get_ConnectorEditorLocation()
		{
			ret
		}
		.method public hidebysig 
			instance bool EditPointsHitTest(valuetype [WindowsBase]System.Windows.Point pt)
		{
			ret
		}
		.method public hidebysig 
			instance bool Persist(valuetype [WindowsBase]System.Windows.Point finalSnappedPoint)
		{
			ret
		}
		.method public hidebysig 
			instance void Remove()
		{
			ret
		}
		.method public hidebysig 
			instance void Update(valuetype [WindowsBase]System.Windows.Point newPoint)
		{
			ret
		}
		.property instance bool BeingEdited()
		{
			.get instance bool System.Activities.Presentation.FreeFormEditing.ConnectorEditor::get_BeingEdited()
		}
		.property instance class System.Activities.Presentation.FreeFormEditing.Connector Connector()
		{
			.get instance class System.Activities.Presentation.FreeFormEditing.Connector System.Activities.Presentation.FreeFormEditing.ConnectorEditor::get_Connector()
			.set instance void System.Activities.Presentation.FreeFormEditing.ConnectorEditor::set_Connector(class System.Activities.Presentation.FreeFormEditing.Connector)
		}
		.property instance class [mscorlib]'System.Collections.Generic.List`1'<valuetype [WindowsBase]System.Windows.Point> ConnectorEditorLocation()
		{
			.get instance class [mscorlib]'System.Collections.Generic.List`1'<valuetype [WindowsBase]System.Windows.Point> System.Activities.Presentation.FreeFormEditing.ConnectorEditor::get_ConnectorEditorLocation()
		}
		.property instance bool IsConnectorEndBeingMoved()
		{
			.get instance bool System.Activities.Presentation.FreeFormEditing.ConnectorEditor::get_IsConnectorEndBeingMoved()
		}
		.property instance bool IsConnectorStartBeingMoved()
		{
			.get instance bool System.Activities.Presentation.FreeFormEditing.ConnectorEditor::get_IsConnectorStartBeingMoved()
		}
	}
	.class private ConnectorIdentityConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IMultiValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object[] values, class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object[] ConvertBack(object 'value', class [mscorlib]System.Type[] targetTypes, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private ConnectorLabelMarginConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IMultiValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object[] values, class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object[] ConvertBack(object 'value', class [mscorlib]System.Type[] targetTypes, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private ConnectorLabelVisibilityConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IMultiValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object[] values, class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object[] ConvertBack(object 'value', class [mscorlib]System.Type[] targetTypes, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private ConnectorMovedEventArgs
		extends [mscorlib]System.EventArgs
	{
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]'System.Collections.Generic.List`1'<valuetype [WindowsBase]System.Windows.Point> newConnectorLocation)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.List`1'<valuetype [WindowsBase]System.Windows.Point> get_NewConnectorLocation()
		{
			ret
		}
		.property instance class [mscorlib]'System.Collections.Generic.List`1'<valuetype [WindowsBase]System.Windows.Point> NewConnectorLocation()
		{
			.get instance class [mscorlib]'System.Collections.Generic.List`1'<valuetype [WindowsBase]System.Windows.Point> System.Activities.Presentation.FreeFormEditing.ConnectorMovedEventArgs::get_NewConnectorLocation()
		}
	}
	.class private sealed ConnectorMovedEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object sender, class System.Activities.Presentation.FreeFormEditing.ConnectorMovedEventArgs e)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object sender, class System.Activities.Presentation.FreeFormEditing.ConnectorMovedEventArgs e, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class private ConnectorPointsToArrowMarginConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IMultiValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object[] values, class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object[] ConvertBack(object 'value', class [mscorlib]System.Type[] targetTypes, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private ConnectorPointsToArrowTransformConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private ConnectorPointsToSegmentsConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private abstract sealed ConnectorRouter
		extends [mscorlib]System.Object
	{
		.method assembly static hidebysig 
			valuetype [WindowsBase]System.Windows.Point[] Route(class System.Activities.Presentation.FreeFormEditing.FreeFormPanel panel, valuetype [WindowsBase]System.Windows.Point srPoint, class System.Activities.Presentation.FreeFormEditing.ConnectionPoint destConnPoint)
		{
			ret
		}
		.method assembly static hidebysig 
			valuetype [WindowsBase]System.Windows.Point[] Route(class System.Activities.Presentation.FreeFormEditing.FreeFormPanel panel, class System.Activities.Presentation.FreeFormEditing.ConnectionPoint srcConnPoint, valuetype [WindowsBase]System.Windows.Point destPoint)
		{
			ret
		}
		.method assembly static hidebysig 
			valuetype [WindowsBase]System.Windows.Point[] Route(class System.Activities.Presentation.FreeFormEditing.FreeFormPanel panel, class System.Activities.Presentation.FreeFormEditing.ConnectionPoint srcConnectionPoint, class [PresentationCore]System.Windows.Input.MouseEventArgs e)
		{
			ret
		}
		.method assembly static hidebysig 
			valuetype [WindowsBase]System.Windows.Point[] Route(class System.Activities.Presentation.FreeFormEditing.FreeFormPanel panel, class System.Activities.Presentation.FreeFormEditing.ConnectionPoint srcConnPoint, class System.Activities.Presentation.FreeFormEditing.ConnectionPoint destConnPoint)
		{
			ret
		}
		.method assembly static hidebysig 
			valuetype [WindowsBase]System.Windows.Point GetDirection(valuetype [WindowsBase]System.Windows.Point from, valuetype [WindowsBase]System.Windows.Point 'to')
		{
			ret
		}
		.method assembly static hidebysig 
			valuetype [WindowsBase]System.Windows.Point[] Route(class System.Activities.Presentation.FreeFormEditing.FreeFormPanel panel, valuetype [WindowsBase]System.Windows.Point srcPoint, valuetype [WindowsBase]System.Windows.Point destPoint, class [mscorlib]'System.Collections.Generic.List`1'<valuetype [WindowsBase]System.Windows.Point> srcEdge, class [mscorlib]'System.Collections.Generic.List`1'<valuetype [WindowsBase]System.Windows.Point> destEdge, class [PresentationCore]System.Windows.UIElement srcElement, class [PresentationCore]System.Windows.UIElement destElement)
		{
			ret
		}
		.method assembly static hidebysig 
			valuetype [WindowsBase]System.Windows.Point[] Route(valuetype [WindowsBase]System.Windows.Point srcPoint, valuetype [WindowsBase]System.Windows.Point destPoint, class [mscorlib]'System.Collections.Generic.List`1'<valuetype [WindowsBase]System.Windows.Point> srcEdge, class [mscorlib]'System.Collections.Generic.List`1'<valuetype [WindowsBase]System.Windows.Point> destEdge, class [mscorlib]'System.Collections.Generic.List`1'<valuetype [WindowsBase]System.Windows.Rect> excludedRects, class [mscorlib]'System.Collections.Generic.List`1'<valuetype [WindowsBase]System.Windows.Point> excludedLines, class [mscorlib]'System.Collections.Generic.List`1'<valuetype [WindowsBase]System.Windows.Rect> srcDestRects)
		{
			ret
		}
		.method assembly static hidebysig 
			valuetype [WindowsBase]System.Windows.Point[] RemoveRedundantPoints(class [mscorlib]'System.Collections.Generic.List`1'<valuetype [WindowsBase]System.Windows.Point> points)
		{
			ret
		}
		.method assembly static hidebysig 
			bool AreSegmentsValid(valuetype [WindowsBase]System.Windows.Point[] segments)
		{
			ret
		}
		.field static assembly literal float64 EndPointTolerance = float64(0x3FF0000000000000)
	}
	.class private ConnectorStartDotConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private ConnectorWithStartDot
		extends System.Activities.Presentation.FreeFormEditing.Connector
		implements [System.Xaml]System.Windows.Markup.IComponentConnector
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [PresentationFramework]System.Windows.FrameworkElement get_StartDot()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void SetLabelToolTip(object toolTip)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnDragEnter(class [PresentationCore]System.Windows.DragEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnMouseEnter(class [PresentationCore]System.Windows.Input.MouseEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnMouseLeave(class [PresentationCore]System.Windows.Input.MouseEventArgs e)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void InitializeComponent()
		{
			ret
		}
		.method assembly hidebysig 
			instance class [mscorlib]System.Delegate _CreateDelegate(class [mscorlib]System.Type delegateType, string 'handler')
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Windows.Markup.IComponentConnector.Connect(int32 connectionId, object target)
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.override [System.Xaml]System.Windows.Markup.IComponentConnector::Connect
			ret
		}
		.field assembly class [PresentationFramework]System.Windows.Shapes.Path BottomLine
		.field assembly class [PresentationFramework]System.Windows.Controls.Border LayoutRoot
		.field assembly class [PresentationFramework]System.Windows.Shapes.Path TopLine
		.field assembly class [PresentationFramework]System.Windows.Shapes.Rectangle arrowShape
		.field assembly class [PresentationFramework]System.Windows.Controls.TextBlock labelTextBlock
		.field assembly class System.Activities.Presentation.FreeFormEditing.ConnectorWithStartDot root
		.field assembly class [PresentationFramework]System.Windows.Controls.Grid rootGrid
		.field assembly class [PresentationFramework]System.Windows.Shapes.Path startDot
		.field assembly class [PresentationFramework]System.Windows.Shapes.Path startDotForHitTest
		.field assembly class [PresentationFramework]System.Windows.Controls.Grid startDotGrid
		.property instance class [PresentationFramework]System.Windows.FrameworkElement StartDot()
		{
			.get instance class [PresentationFramework]System.Windows.FrameworkElement System.Activities.Presentation.FreeFormEditing.ConnectorWithStartDot::get_StartDot()
		}
	}
	.class private ConnectorWithoutStartDot
		extends System.Activities.Presentation.FreeFormEditing.Connector
		implements [System.Xaml]System.Windows.Markup.IComponentConnector
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void SetLabelToolTip(object toolTip)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void InitializeComponent()
		{
			ret
		}
		.method assembly hidebysig 
			instance class [mscorlib]System.Delegate _CreateDelegate(class [mscorlib]System.Type delegateType, string 'handler')
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Windows.Markup.IComponentConnector.Connect(int32 connectionId, object target)
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.override [System.Xaml]System.Windows.Markup.IComponentConnector::Connect
			ret
		}
		.field assembly class [PresentationFramework]System.Windows.Shapes.Path BottomLine
		.field assembly class [PresentationFramework]System.Windows.Controls.Border LayoutRoot
		.field assembly class [PresentationFramework]System.Windows.Shapes.Path TopLine
		.field assembly class [PresentationFramework]System.Windows.Shapes.Rectangle arrowShape
		.field assembly class [PresentationFramework]System.Windows.Controls.TextBlock labelTextBlock
		.field assembly class System.Activities.Presentation.FreeFormEditing.ConnectorWithoutStartDot root
		.field assembly class [PresentationFramework]System.Windows.Controls.Grid rootGrid
	}
	.class private abstract sealed DesignerGeometryHelper
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			float64 ManhattanDistanceBetweenPoints(valuetype [WindowsBase]System.Windows.Point begin, valuetype [WindowsBase]System.Windows.Point end)
		{
			ret
		}
		.method public static hidebysig 
			float64 DistanceBetweenPoints(valuetype [WindowsBase]System.Windows.Point point1, valuetype [WindowsBase]System.Windows.Point point2)
		{
			ret
		}
		.method public static hidebysig 
			float64 DistanceOfLineSegments(valuetype [WindowsBase]System.Windows.Point[] segments)
		{
			ret
		}
		.method public static hidebysig 
			valuetype [WindowsBase]System.Windows.Point MidPointOfLineSegment(valuetype [WindowsBase]System.Windows.Point point1, valuetype [WindowsBase]System.Windows.Point point2)
		{
			ret
		}
		.method public static hidebysig 
			float64 SlopeOfLineSegment(valuetype [WindowsBase]System.Windows.Point start, valuetype [WindowsBase]System.Windows.Point end)
		{
			ret
		}
		.method public static hidebysig 
			float64 LongestSegmentLength(class [PresentationCore]System.Windows.Media.PointCollection points, [out] int32& longestSegmentIndex)
		{
			ret
		}
		.field static public literal float64 EPS = float64(0x3EB0C6F7A0B5ED8D)
	}
	.class private abstract sealed DoubleExtensions
		extends [mscorlib]System.Object
	{
		.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
		.method public static hidebysig 
			bool IsEqualTo(float64 a, float64 b)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			bool IsNoGreaterThan(float64 a, float64 b)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			bool IsNoLessThan(float64 a, float64 b)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
	}
	.class private sealed EdgeLocation
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Activities.Presentation.FreeFormEditing.EdgeLocation Bottom = int32(0x00000003)
		.field static public literal valuetype System.Activities.Presentation.FreeFormEditing.EdgeLocation Left = int32(0x00000000)
		.field static public literal valuetype System.Activities.Presentation.FreeFormEditing.EdgeLocation Right = int32(0x00000001)
		.field static public literal valuetype System.Activities.Presentation.FreeFormEditing.EdgeLocation Top = int32(0x00000002)
	}
	.class private FreeFormPanel
		extends [PresentationFramework]System.Windows.Controls.Panel
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_LocationChanged(class System.Activities.Presentation.FreeFormEditing.LocationChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void remove_LocationChanged(class System.Activities.Presentation.FreeFormEditing.LocationChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void add_ConnectorMoved(class System.Activities.Presentation.FreeFormEditing.ConnectorMovedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void remove_ConnectorMoved(class System.Activities.Presentation.FreeFormEditing.ConnectorMovedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void add_RequiredSizeChanged(class System.Activities.Presentation.FreeFormEditing.RequiredSizeChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void remove_RequiredSizeChanged(class System.Activities.Presentation.FreeFormEditing.RequiredSizeChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			valuetype [WindowsBase]System.Windows.Size GetChildSize(class [WindowsBase]System.Windows.DependencyObject obj)
		{
			ret
		}
		.method public static hidebysig 
			void SetChildSize(class [WindowsBase]System.Windows.DependencyObject obj, valuetype [WindowsBase]System.Windows.Size size)
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_RequiredHeight()
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_RequiredWidth()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_Disabled()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Disabled(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.FreeFormEditing.IAutoConnectContainer get_AutoConnectContainer()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_AutoConnectContainer(class System.Activities.Presentation.FreeFormEditing.IAutoConnectContainer 'value')
		{
			ret
		}
		.method public static hidebysig 
			valuetype [WindowsBase]System.Windows.Vector CalculateMovement(valuetype [WindowsBase]System.Windows.Input.Key key, bool isRightToLeft)
		{
			ret
		}
		.method public static hidebysig 
			float64 ZeroIfNegative(float64 val)
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class [PresentationCore]System.Windows.UIElement get_CurrentAutoConnectTarget()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class System.Activities.Presentation.FreeFormEditing.Connector get_CurrentAutoSplitTarget()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_CurrentAutoSplitTarget(class System.Activities.Presentation.FreeFormEditing.Connector 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class System.Activities.Presentation.FreeFormEditing.ConnectionPoint GetDestinationConnectionPoint(class [WindowsBase]System.Windows.DependencyObject obj)
		{
			ret
		}
		.method public static hidebysig 
			void SetDestinationConnectionPoint(class [WindowsBase]System.Windows.DependencyObject obj, class System.Activities.Presentation.FreeFormEditing.ConnectionPoint connectionPoint)
		{
			ret
		}
		.method public static hidebysig 
			class System.Activities.Presentation.FreeFormEditing.ConnectionPoint GetSourceConnectionPoint(class [WindowsBase]System.Windows.DependencyObject obj)
		{
			ret
		}
		.method public static hidebysig 
			void SetSourceConnectionPoint(class [WindowsBase]System.Windows.DependencyObject obj, class System.Activities.Presentation.FreeFormEditing.ConnectionPoint connectionPoint)
		{
			ret
		}
		.method public static hidebysig 
			valuetype [WindowsBase]System.Windows.Point GetLocation(class [WindowsBase]System.Windows.DependencyObject obj)
		{
			ret
		}
		.method public static hidebysig 
			void SetLocation(class [WindowsBase]System.Windows.DependencyObject obj, valuetype [WindowsBase]System.Windows.Point point)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnInitialized(class [mscorlib]System.EventArgs e)
		{
			ret
		}
		.method assembly hidebysig 
			instance void RemoveAutoConnectAdorner()
		{
			ret
		}
		.method assembly hidebysig 
			instance class [mscorlib]'System.Collections.Generic.List`1'<class [WindowsBase]System.Windows.DependencyObject> GetChildShapes(class [WindowsBase]System.Windows.DependencyObject excluded)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnPreviewDragOver(class [PresentationCore]System.Windows.DragEventArgs e)
		{
			ret
		}
		.method public hidebysig 
			instance void UpdateConnectorPoints(class System.Activities.Presentation.FreeFormEditing.Connector connector, class [mscorlib]'System.Collections.Generic.List`1'<valuetype [WindowsBase]System.Windows.Point> points)
		{
			ret
		}
		.method public static hidebysig 
			class [mscorlib]'System.Collections.Generic.List`1'<valuetype [WindowsBase]System.Windows.Point> GetEdgeRelativeToOutmostPanel(class System.Activities.Presentation.FreeFormEditing.ConnectionPoint connectionPoint)
		{
			ret
		}
		.method public static hidebysig 
			valuetype [WindowsBase]System.Windows.Point GetLocationRelativeToOutmostPanel(class System.Activities.Presentation.FreeFormEditing.ConnectionPoint connectionPoint)
		{
			ret
		}
		.method public hidebysig 
			instance valuetype [WindowsBase]System.Windows.Point GetLocationRelativeToOutmostPanel(valuetype [WindowsBase]System.Windows.Point location)
		{
			ret
		}
		.method assembly hidebysig 
			instance bool IsOutmostPanel()
		{
			ret
		}
		.method assembly static hidebysig 
			class System.Activities.Presentation.FreeFormEditing.ConnectionPoint ConnectionPointHitTest(valuetype [WindowsBase]System.Windows.Point hitPoint, class System.Activities.Presentation.FreeFormEditing.ConnectionPointsAdorner adorner)
		{
			ret
		}
		.method assembly static hidebysig 
			class System.Activities.Presentation.FreeFormEditing.ConnectionPoint ConnectionPointHitTest(valuetype [WindowsBase]System.Windows.Point hitPoint, class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.FreeFormEditing.ConnectionPoint> connectionPoints, class System.Activities.Presentation.FreeFormEditing.FreeFormPanel panel)
		{
			ret
		}
		.method family virtual hidebysig 
			instance valuetype [WindowsBase]System.Windows.Size ArrangeOverride(valuetype [WindowsBase]System.Windows.Size finalSize)
		{
			ret
		}
		.method family virtual hidebysig 
			instance valuetype [WindowsBase]System.Windows.Size MeasureOverride(valuetype [WindowsBase]System.Windows.Size availableSize)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnMouseLeave(class [PresentationCore]System.Windows.Input.MouseEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnMouseMove(class [PresentationCore]System.Windows.Input.MouseEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnMouseLeftButtonUp(class [PresentationCore]System.Windows.Input.MouseButtonEventArgs e)
		{
			ret
		}
		.method public hidebysig 
			instance void RemoveConnectorEditor()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnKeyDown(class [PresentationCore]System.Windows.Input.KeyEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnPreviewMouseLeftButtonDown(class [PresentationCore]System.Windows.Input.MouseButtonEventArgs e)
		{
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty AutoConnectContainerProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ChildSizeProperty
		.field static public literal float64 ConnectorEditorOpacity = float64(0x3FF0000000000000)
		.field static public literal float64 ConnectorEditorThickness = float64(0x3FF8000000000000)
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty DestinationConnectionPointProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty DisabledProperty
		.field static public literal float64 GridSize = float64(0x4024000000000000)
		.field static public literal float64 LeftStackingMargin = float64(0x4049000000000000)
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty LocationProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty RequiredHeightProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty RequiredWidthProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty SourceConnectionPointProperty
		.field static public literal float64 TopStackingMargin = float64(0x4054000000000000)
		.field static public literal float64 VerticalStackingDistance = float64(0x4049000000000000)
		.field public class System.Activities.Presentation.FreeFormEditing.ConnectorEditor connectorEditor
		.event System.Activities.Presentation.FreeFormEditing.ConnectorMovedEventHandler ConnectorMoved
		{
			.addon instance void System.Activities.Presentation.FreeFormEditing.FreeFormPanel::add_ConnectorMoved(class System.Activities.Presentation.FreeFormEditing.ConnectorMovedEventHandler)
			.removeon instance void System.Activities.Presentation.FreeFormEditing.FreeFormPanel::remove_ConnectorMoved(class System.Activities.Presentation.FreeFormEditing.ConnectorMovedEventHandler)
		}
		.event System.Activities.Presentation.FreeFormEditing.LocationChangedEventHandler LocationChanged
		{
			.addon instance void System.Activities.Presentation.FreeFormEditing.FreeFormPanel::add_LocationChanged(class System.Activities.Presentation.FreeFormEditing.LocationChangedEventHandler)
			.removeon instance void System.Activities.Presentation.FreeFormEditing.FreeFormPanel::remove_LocationChanged(class System.Activities.Presentation.FreeFormEditing.LocationChangedEventHandler)
		}
		.event System.Activities.Presentation.FreeFormEditing.RequiredSizeChangedEventHandler RequiredSizeChanged
		{
			.addon instance void System.Activities.Presentation.FreeFormEditing.FreeFormPanel::add_RequiredSizeChanged(class System.Activities.Presentation.FreeFormEditing.RequiredSizeChangedEventHandler)
			.removeon instance void System.Activities.Presentation.FreeFormEditing.FreeFormPanel::remove_RequiredSizeChanged(class System.Activities.Presentation.FreeFormEditing.RequiredSizeChangedEventHandler)
		}
		.property instance class System.Activities.Presentation.FreeFormEditing.IAutoConnectContainer AutoConnectContainer()
		{
			.get instance class System.Activities.Presentation.FreeFormEditing.IAutoConnectContainer System.Activities.Presentation.FreeFormEditing.FreeFormPanel::get_AutoConnectContainer()
			.set instance void System.Activities.Presentation.FreeFormEditing.FreeFormPanel::set_AutoConnectContainer(class System.Activities.Presentation.FreeFormEditing.IAutoConnectContainer)
		}
		.property instance class [PresentationCore]System.Windows.UIElement CurrentAutoConnectTarget()
		{
			.get instance class [PresentationCore]System.Windows.UIElement System.Activities.Presentation.FreeFormEditing.FreeFormPanel::get_CurrentAutoConnectTarget()
		}
		.property instance class System.Activities.Presentation.FreeFormEditing.Connector CurrentAutoSplitTarget()
		{
			.get instance class System.Activities.Presentation.FreeFormEditing.Connector System.Activities.Presentation.FreeFormEditing.FreeFormPanel::get_CurrentAutoSplitTarget()
			.set instance void System.Activities.Presentation.FreeFormEditing.FreeFormPanel::set_CurrentAutoSplitTarget(class System.Activities.Presentation.FreeFormEditing.Connector)
		}
		.property instance bool Disabled()
		{
			.get instance bool System.Activities.Presentation.FreeFormEditing.FreeFormPanel::get_Disabled()
			.set instance void System.Activities.Presentation.FreeFormEditing.FreeFormPanel::set_Disabled(bool)
		}
		.property instance float64 RequiredHeight()
		{
			.get instance float64 System.Activities.Presentation.FreeFormEditing.FreeFormPanel::get_RequiredHeight()
		}
		.property instance float64 RequiredWidth()
		{
			.get instance float64 System.Activities.Presentation.FreeFormEditing.FreeFormPanel::get_RequiredWidth()
		}
	}
	.class private interface abstract IAutoConnectContainer
	{
		.method public virtual hidebysig newslot abstract 
			instance void DoAutoConnect(class [PresentationCore]System.Windows.DragEventArgs e, class [PresentationCore]System.Windows.UIElement targetElement, valuetype System.Activities.Presentation.FreeFormEditing.AutoConnectDirections direction)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance valuetype System.Activities.Presentation.FreeFormEditing.AutoConnectDirections GetDirectionsAllowed(class [PresentationCore]System.Windows.DragEventArgs e, class [PresentationCore]System.Windows.UIElement targetElement)
		{
		}
	}
	.class private interface abstract IAutoSplitContainer
	{
		.method public virtual hidebysig newslot abstract 
			instance bool CanAutoSplit(class [PresentationCore]System.Windows.DragEventArgs e)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void DoAutoSplit(class [PresentationCore]System.Windows.DragEventArgs e, class System.Activities.Presentation.FreeFormEditing.Connector connector)
		{
		}
	}
	.class private interface abstract INestedFreeFormPanelContainer
	{
		.method public virtual hidebysig newslot abstract 
			instance class System.Activities.Presentation.FreeFormEditing.FreeFormPanel GetChildFreeFormPanel()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.Activities.Presentation.FreeFormEditing.FreeFormPanel GetOutmostFreeFormPanel()
		{
		}
	}
	.class private LocationChangedEventArgs
		extends [mscorlib]System.EventArgs
	{
		.method public hidebysig specialname 
			instance void .ctor(valuetype [WindowsBase]System.Windows.Point newLocation)
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [WindowsBase]System.Windows.Point get_NewLocation()
		{
			ret
		}
		.property instance valuetype [WindowsBase]System.Windows.Point NewLocation()
		{
			.get instance valuetype [WindowsBase]System.Windows.Point System.Activities.Presentation.FreeFormEditing.LocationChangedEventArgs::get_NewLocation()
		}
	}
	.class private sealed LocationChangedEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object sender, class System.Activities.Presentation.FreeFormEditing.LocationChangedEventArgs e)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object sender, class System.Activities.Presentation.FreeFormEditing.LocationChangedEventArgs e, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class private abstract sealed PointExtensions
		extends [mscorlib]System.Object
	{
		.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
		.method public static hidebysig 
			bool IsEqualTo(valuetype [WindowsBase]System.Windows.Point point1, valuetype [WindowsBase]System.Windows.Point point2)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
	}
	.class private RequiredSizeChangedEventArgs
		extends [mscorlib]System.EventArgs
	{
		.method public hidebysig specialname 
			instance void .ctor(valuetype [WindowsBase]System.Windows.Size newRequiredSize)
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [WindowsBase]System.Windows.Size get_NewRequiredSize()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype [WindowsBase]System.Windows.Size NewRequiredSize()
		{
			.get instance valuetype [WindowsBase]System.Windows.Size System.Activities.Presentation.FreeFormEditing.RequiredSizeChangedEventArgs::get_NewRequiredSize()
		}
	}
	.class private sealed RequiredSizeChangedEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object sender, class System.Activities.Presentation.FreeFormEditing.RequiredSizeChangedEventArgs e)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object sender, class System.Activities.Presentation.FreeFormEditing.RequiredSizeChangedEventArgs e, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
}
.namespace System.Activities.Presentation.Hosting
{
	.class public sealed AssemblyContextControlItem
		extends System.Activities.Presentation.ContextItem
	{
		.method public hidebysig specialname 
			instance class [mscorlib]System.Reflection.AssemblyName get_LocalAssemblyName()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_LocalAssemblyName(class [mscorlib]System.Reflection.AssemblyName 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.IList`1'<class [mscorlib]System.Reflection.AssemblyName> get_ReferencedAssemblyNames()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_ReferencedAssemblyNames(class [mscorlib]'System.Collections.Generic.IList`1'<class [mscorlib]System.Reflection.AssemblyName> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]System.Type get_ItemType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<string> get_AllAssemblyNamesInContext()
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class [mscorlib]System.Reflection.AssemblyName> GetEnvironmentAssemblyNames()
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class [mscorlib]System.Reflection.Assembly> GetEnvironmentAssemblies(class System.Activities.Presentation.Hosting.IMultiTargetingSupportService multiTargetingService)
		{
			ret
		}
		.method public static hidebysig 
			class [mscorlib]System.Reflection.Assembly GetAssembly(class [mscorlib]System.Reflection.AssemblyName assemblyName, class System.Activities.Presentation.Hosting.IMultiTargetingSupportService multiTargetingService)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<string> AllAssemblyNamesInContext()
		{
			.get instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<string> System.Activities.Presentation.Hosting.AssemblyContextControlItem::get_AllAssemblyNamesInContext()
		}
		.property instance class [mscorlib]System.Type ItemType()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.Hosting.AssemblyContextControlItem::get_ItemType()
		}
		.property instance class [mscorlib]System.Reflection.AssemblyName LocalAssemblyName()
		{
			.get instance class [mscorlib]System.Reflection.AssemblyName System.Activities.Presentation.Hosting.AssemblyContextControlItem::get_LocalAssemblyName()
			.set instance void System.Activities.Presentation.Hosting.AssemblyContextControlItem::set_LocalAssemblyName(class [mscorlib]System.Reflection.AssemblyName)
		}
		.property instance class [mscorlib]'System.Collections.Generic.IList`1'<class [mscorlib]System.Reflection.AssemblyName> ReferencedAssemblyNames()
		{
			.get instance class [mscorlib]'System.Collections.Generic.IList`1'<class [mscorlib]System.Reflection.AssemblyName> System.Activities.Presentation.Hosting.AssemblyContextControlItem::get_ReferencedAssemblyNames()
			.set instance void System.Activities.Presentation.Hosting.AssemblyContextControlItem::set_ReferencedAssemblyNames(class [mscorlib]'System.Collections.Generic.IList`1'<class [mscorlib]System.Reflection.AssemblyName>)
		}
	}
	.class public sealed CommandInfo
		extends [mscorlib]System.Object
	{
		.method assembly hidebysig specialname 
			instance void .ctor(class [System]System.Windows.Input.ICommand command)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System]System.Windows.Input.ICommand get_Command()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_Command(class [System]System.Windows.Input.ICommand 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsBindingEnabledInDesigner()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsBindingEnabledInDesigner(bool 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.property instance class [System]System.Windows.Input.ICommand Command()
		{
			.get instance class [System]System.Windows.Input.ICommand System.Activities.Presentation.Hosting.CommandInfo::get_Command()
			.set instance void System.Activities.Presentation.Hosting.CommandInfo::set_Command(class [System]System.Windows.Input.ICommand)
		}
		.property instance bool IsBindingEnabledInDesigner()
		{
			.get instance bool System.Activities.Presentation.Hosting.CommandInfo::get_IsBindingEnabledInDesigner()
			.set instance void System.Activities.Presentation.Hosting.CommandInfo::set_IsBindingEnabledInDesigner(bool)
		}
	}
	.class public abstract sealed CommandValues
		extends [mscorlib]System.Object
	{
		.field static public literal int32 DeleteBreakpoint = int32(0x00000007)
		.field static public literal int32 DisableBreakpoint = int32(0x00000009)
		.field static public literal int32 EnableBreakpoint = int32(0x00000008)
		.field static public literal int32 InsertBreakpoint = int32(0x00000006)
		.field static public literal int32 ShowProperties = int32(0x00000005)
	}
	.class public interface abstract ICommandService
	{
		.method public virtual hidebysig newslot abstract 
			instance bool IsCommandSupported(int32 commandId)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool CanExecuteCommand(int32 commandId)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void ExecuteCommand(int32 commandId, class [mscorlib]'System.Collections.Generic.Dictionary`2'<string,object> parameters)
		{
		}
	}
	.class public interface abstract IDocumentPersistenceService
	{
		.method public virtual hidebysig newslot abstract 
			instance object Load(string fileName)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Flush(object documentRoot)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void OnModelChanged(object documentRoot)
		{
		}
	}
	.class public interface abstract IMultiTargetingSupportService
	{
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]System.Reflection.Assembly GetReflectionAssembly(class [mscorlib]System.Reflection.AssemblyName targetAssemblyName)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]System.Type GetRuntimeType(class [mscorlib]System.Type reflectionType)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool IsSupportedType(class [mscorlib]System.Type 'type')
		{
		}
	}
	.class public interface abstract IWorkflowCommandExtensionCallback
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnWorkflowCommandLoaded(class System.Activities.Presentation.Hosting.CommandInfo commandInfo)
		{
		}
	}
	.class public sealed ImportedNamespaceContextItem
		extends System.Activities.Presentation.ContextItem
	{
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Collections.ObjectModel.Collection`1'<string> get_ImportedNamespaces()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]System.Type get_ItemType()
		{
			ret
		}
		.method public hidebysig 
			instance void EnsureInitialized(class System.Activities.Presentation.EditingContext context)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class [mscorlib]'System.Collections.ObjectModel.Collection`1'<string> ImportedNamespaces()
		{
			.get instance class [mscorlib]'System.Collections.ObjectModel.Collection`1'<string> System.Activities.Presentation.Hosting.ImportedNamespaceContextItem::get_ImportedNamespaces()
		}
		.property instance class [mscorlib]System.Type ItemType()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.Hosting.ImportedNamespaceContextItem::get_ItemType()
		}
	}
	.class public abstract MultiTargetingSupportService
		extends [mscorlib]System.Object
		implements System.Activities.Presentation.Hosting.IMultiTargetingSupportService
	{
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]System.Reflection.Assembly GetReflectionAssembly(class [mscorlib]System.Reflection.AssemblyName targetAssemblyName)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]System.Type GetRuntimeType(class [mscorlib]System.Type reflectionType)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool IsSupportedType(class [mscorlib]System.Type 'type')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]System.Type GetReflectionType(class [mscorlib]System.Type objectType)
		{
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed ReadOnlyState
		extends System.Activities.Presentation.ContextItem
	{
		.method public hidebysig specialname 
			instance bool get_IsReadOnly()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsReadOnly(bool 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]System.Type get_ItemType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance bool IsReadOnly()
		{
			.get instance bool System.Activities.Presentation.Hosting.ReadOnlyState::get_IsReadOnly()
			.set instance void System.Activities.Presentation.Hosting.ReadOnlyState::set_IsReadOnly(bool)
		}
		.property instance class [mscorlib]System.Type ItemType()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.Hosting.ReadOnlyState::get_ItemType()
		}
	}
	.class public WindowHelperService
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor(native int hwnd)
		{
			ret
		}
		.method public hidebysig specialname 
			instance native int get_ParentWindowHwnd()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance class [PresentationFramework]System.Windows.FrameworkElement get_View()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_View(class [PresentationFramework]System.Windows.FrameworkElement 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance bool TrySetWindowOwner(class [WindowsBase]System.Windows.DependencyObject source, class [PresentationFramework]System.Windows.Window target)
		{
			ret
		}
		.method public hidebysig 
			instance bool RegisterWindowMessageHandler(class System.Activities.Presentation.Hosting.WindowMessage callback)
		{
			ret
		}
		.method public hidebysig 
			instance bool UnregisterWindowMessageHandler(class System.Activities.Presentation.Hosting.WindowMessage callback)
		{
			ret
		}
		.method assembly static hidebysig 
			void TrySetWindowOwner(class [WindowsBase]System.Windows.DependencyObject owner, class System.Activities.Presentation.EditingContext editingContext, class [PresentationFramework]System.Windows.Window wnd)
		{
			ret
		}
		.property instance native int ParentWindowHwnd()
		{
			.get instance native int System.Activities.Presentation.Hosting.WindowHelperService::get_ParentWindowHwnd()
		}
		.property instance class [PresentationFramework]System.Windows.FrameworkElement View()
		{
			.get instance class [PresentationFramework]System.Windows.FrameworkElement System.Activities.Presentation.Hosting.WindowHelperService::get_View()
			.set instance void System.Activities.Presentation.Hosting.WindowHelperService::set_View(class [PresentationFramework]System.Windows.FrameworkElement)
		}
	}
	.class public sealed WindowMessage
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(int32 msgId, native int parameter1, native int parameter2)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(int32 msgId, native int parameter1, native int parameter2, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public sealed WorkflowCommandExtensionItem
		extends System.Activities.Presentation.ContextItem
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.Hosting.IWorkflowCommandExtensionCallback callback)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]System.Type get_ItemType()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class System.Activities.Presentation.Hosting.IWorkflowCommandExtensionCallback get_CommandExtensionCallback()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.property instance class System.Activities.Presentation.Hosting.IWorkflowCommandExtensionCallback CommandExtensionCallback()
		{
			.get instance class System.Activities.Presentation.Hosting.IWorkflowCommandExtensionCallback System.Activities.Presentation.Hosting.WorkflowCommandExtensionItem::get_CommandExtensionCallback()
		}
		.property instance class [mscorlib]System.Type ItemType()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.Hosting.WorkflowCommandExtensionItem::get_ItemType()
		}
	}
}
.namespace System.Activities.Presentation.Internal
{
	.class private EqualityArray
		extends [mscorlib]System.Object
	{
		.method assembly hidebysig specialname 
			instance void .ctor(object[] values)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object other)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
	}
	.class private abstract sealed ManifestImages
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			object GetImage(class [mscorlib]System.Type 'type', valuetype [WindowsBase]System.Windows.Size desiredSize)
		{
			ret
		}
	}
}
.namespace System.Activities.Presentation.Internal.Metadata
{
	.class private AttributeData
		extends [mscorlib]System.Object
	{
		.method assembly hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type attributeType)
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class [mscorlib]System.Type get_AttributeType()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance bool get_AllowsMultiple()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance bool get_IsInheritable()
		{
			ret
		}
		.property instance bool AllowsMultiple()
		{
			.get instance bool System.Activities.Presentation.Internal.Metadata.AttributeData::get_AllowsMultiple()
		}
		.property instance class [mscorlib]System.Type AttributeType()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.Internal.Metadata.AttributeData::get_AttributeType()
		}
		.property instance bool IsInheritable()
		{
			.get instance bool System.Activities.Presentation.Internal.Metadata.AttributeData::get_IsInheritable()
		}
	}
	.class private abstract sealed AttributeDataCache
		extends [mscorlib]System.Object
	{
		.method assembly static hidebysig 
			class [mscorlib]System.Reflection.MemberInfo GetBaseMemberInfo(class [mscorlib]System.Reflection.MemberInfo member)
		{
			ret
		}
		.method assembly static hidebysig 
			class [mscorlib]'System.Collections.Generic.IEnumerable`1'<object> GetMetadataStoreAttributes(class [mscorlib]System.Type 'type', string memberName, class System.Activities.Presentation.Metadata.AttributeTable[] tables)
		{
			ret
		}
		.method assembly static hidebysig 
			class [mscorlib]'System.Collections.Generic.IEnumerable`1'<object> GetClrAttributes(class [mscorlib]System.Reflection.MemberInfo member)
		{
			ret
		}
		.method assembly static hidebysig 
			class System.Activities.Presentation.Internal.Metadata.AttributeData GetAttributeData(class [mscorlib]System.Type attributeType)
		{
			ret
		}
	}
	.class private MutableAttributeTable
		extends [mscorlib]System.Object
	{
		.method assembly hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class [mscorlib]System.Type> get_AttributedTypes()
		{
			ret
		}
		.method assembly hidebysig 
			instance void AddCallback(class [mscorlib]System.Type 'type', class System.Activities.Presentation.Metadata.AttributeCallback callback)
		{
			ret
		}
		.method assembly hidebysig 
			instance void AddCustomAttributes(class [mscorlib]System.Type 'type', class [mscorlib]'System.Collections.Generic.IEnumerable`1'<object> attributes)
		{
			ret
		}
		.method assembly hidebysig 
			instance void AddCustomAttributes(class [mscorlib]System.Type ownerType, class [System]System.ComponentModel.MemberDescriptor descriptor, class [mscorlib]'System.Collections.Generic.IEnumerable`1'<object> attributes)
		{
			ret
		}
		.method assembly hidebysig 
			instance void AddCustomAttributes(class [mscorlib]System.Type ownerType, class [mscorlib]System.Reflection.MemberInfo member, class [mscorlib]'System.Collections.Generic.IEnumerable`1'<object> attributes)
		{
			ret
		}
		.method assembly hidebysig 
			instance void AddCustomAttributes(class [mscorlib]System.Type ownerType, class [WindowsBase]System.Windows.DependencyProperty dp, class [mscorlib]'System.Collections.Generic.IEnumerable`1'<object> attributes)
		{
			ret
		}
		.method assembly hidebysig 
			instance void AddCustomAttributes(class [mscorlib]System.Type ownerType, string memberName, class [mscorlib]'System.Collections.Generic.IEnumerable`1'<object> attributes)
		{
			ret
		}
		.method assembly hidebysig 
			instance void AddTable(class System.Activities.Presentation.Internal.Metadata.MutableAttributeTable table)
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ContainsAttributes(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method assembly hidebysig 
			instance class [mscorlib]System.Collections.IEnumerable GetCustomAttributes(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method assembly hidebysig 
			instance class [mscorlib]System.Collections.IEnumerable GetCustomAttributes(class [mscorlib]System.Type ownerType, class [System]System.ComponentModel.MemberDescriptor descriptor)
		{
			ret
		}
		.method assembly hidebysig 
			instance class [mscorlib]System.Collections.IEnumerable GetCustomAttributes(class [mscorlib]System.Type ownerType, class [WindowsBase]System.Windows.DependencyProperty dp)
		{
			ret
		}
		.method assembly hidebysig 
			instance class [mscorlib]System.Collections.IEnumerable GetCustomAttributes(class [mscorlib]System.Type ownerType, class [mscorlib]System.Reflection.MemberInfo member)
		{
			ret
		}
		.method assembly hidebysig 
			instance class [mscorlib]System.Collections.IEnumerable GetCustomAttributes(class [mscorlib]System.Type ownerType, string memberName)
		{
			ret
		}
		.method assembly hidebysig 
			instance void DebugValidateProvider()
		{
			ret
		}
		.method public hidebysig 
			instance void ValidateTable()
		{
			ret
		}
		.property instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class [mscorlib]System.Type> AttributedTypes()
		{
			.get instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class [mscorlib]System.Type> System.Activities.Presentation.Internal.Metadata.MutableAttributeTable::get_AttributedTypes()
		}
	}
}
.namespace System.Activities.Presentation.Internal.Properties
{
	.class private Resources
		extends [mscorlib]System.Object
	{
		.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
		.method assembly hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			class [mscorlib]System.Resources.ResourceManager get_ResourceManager()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			class [mscorlib]System.Globalization.CultureInfo get_Culture()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			void set_Culture(class [mscorlib]System.Globalization.CultureInfo 'value')
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_Error_ArgIncorrectType()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_Error_CannotConvertValueToString()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_Error_CannotUpdateValueFromStringValue()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_Error_DerivedContextItem()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_Error_DuplicateService()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_Error_EditingScopeReverted()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_Error_EdtingScopeCompleted()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_Error_EnumerationNotReady()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_Error_IncorrectServiceType()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_Error_InvalidArgumentType()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_Error_InvalidArrayIndex()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_Error_InvalidFactoryType()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_Error_NullImplementation()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_Error_NullService()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_Error_PropertyValueEditor_InvalidDialogValueEditorCommandInvocation()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_Error_PropertyValueEditor_InvalidDialogValueEditorEditorValue()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_Error_RecursionResolvingService()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_Error_RequiredService()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_Error_TableValidationFailed()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_Error_ToolAlreadyActive()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_Error_UnknownMemberDescriptor()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_Error_ValidationAmbiguousMember()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_Error_ValidationNoMatchingMember()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_Error_ValueGetFailed()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_Error_ValueSetFailed()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_FromExpression_CanOnlySetFocusScopePriorityOnAnElementThatIsAFocusScope()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_FromExpression_CategoryEditorTypeLoadFailed()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_FromExpression_CategoryIconLoadFailed()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_FromExpression_CollectionDialogEditorCollectionItemFactoryInstantiateFailed()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_FromExpression_MethodOrOperationIsNotImplemented()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_FromExpression_NewItemFactoryIconLoadFailed()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_FromExpression_NoConvertBackForValueToIconConverter()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_FromExpression_SwitchConverterIsOneWay()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_FromExpression_UnexpectedBrushType()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_FromExpression_UnexpectedDrawingType()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_FromExpression_UnexpectedImageSourceType()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_FromExpression_ValueEditorLoadFailed()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_MetadataPluginLog_ErrorFailedToLoadMetadataAssembly()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_PropertyCategoryAllProperties()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_PropertyEditing_AdvancedCategoryEditors()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_PropertyEditing_AlphabeticalCaption()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_PropertyEditing_BasicCategoryEditors()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_PropertyEditing_CategorizedCaption()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_PropertyEditing_CategoryContainerAutomationPeerHelp()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_PropertyEditing_CategoryList()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_PropertyEditing_ClearButtonCaption()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_PropertyEditing_ClearIndexer()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_PropertyEditing_CollectionEditorTitle()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_PropertyEditing_CollectionItemDisplayFormatType()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_PropertyEditing_CollectionItemDisplayFormatTypeAndName()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_PropertyEditing_DefaultArrayStringValue()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_PropertyEditing_DefaultCollectionStringValue()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_PropertyEditing_DefaultEnumerableStringValue()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_PropertyEditing_DialogError()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_PropertyEditing_DialogValueEditorTitle()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_PropertyEditing_DuplicateNameInCollection()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_PropertyEditing_ErrorAbort_NoTransactionsOpened()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_PropertyEditing_ErrorCommit_NoTransactionsOpened()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_PropertyEditing_ErrorSetValueOnIndexer()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_PropertyEditing_InvalidIndexer()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_PropertyEditing_MultipleObjectsSelected()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_PropertyEditing_MultipleTypesSelected()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_PropertyEditing_NameChangeUndoText()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_PropertyEditing_NamePropertyDisplayFormat()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_PropertyEditing_NameSetError()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_PropertyEditing_NoStringToValueConversion()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_PropertyEditing_PropertyInspector()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_PropertyEditing_PropertyInspectorAutomationPeerHelp()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_PropertyEditing_SelectionStatus_AdvancedCategory()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_PropertyEditing_SelectionStatus_Category()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_PropertyEditing_SelectionStatus_CategoryEditor()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_PropertyEditing_SelectionStatus_Empty()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_PropertyEditing_SelectionStatus_Property()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_PropertyEditing_SelectionStatus_Unknown()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_PropertyEditing_SetError()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_PropertyEditing_SubPropertyEditorAutomationName()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_PropertyEditing_UndoText()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_PropertyEditing_ValidationFailed()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_ToolDescription_CreateInstance()
		{
			ret
		}
		.property class [mscorlib]System.Globalization.CultureInfo Culture()
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(2) }
			.get class [mscorlib]System.Globalization.CultureInfo System.Activities.Presentation.Internal.Properties.Resources::get_Culture()
			.set void System.Activities.Presentation.Internal.Properties.Resources::set_Culture(class [mscorlib]System.Globalization.CultureInfo)
		}
		.property string Error_ArgIncorrectType()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_Error_ArgIncorrectType()
		}
		.property string Error_CannotConvertValueToString()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_Error_CannotConvertValueToString()
		}
		.property string Error_CannotUpdateValueFromStringValue()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_Error_CannotUpdateValueFromStringValue()
		}
		.property string Error_DerivedContextItem()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_Error_DerivedContextItem()
		}
		.property string Error_DuplicateService()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_Error_DuplicateService()
		}
		.property string Error_EditingScopeReverted()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_Error_EditingScopeReverted()
		}
		.property string Error_EdtingScopeCompleted()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_Error_EdtingScopeCompleted()
		}
		.property string Error_EnumerationNotReady()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_Error_EnumerationNotReady()
		}
		.property string Error_IncorrectServiceType()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_Error_IncorrectServiceType()
		}
		.property string Error_InvalidArgumentType()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_Error_InvalidArgumentType()
		}
		.property string Error_InvalidArrayIndex()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_Error_InvalidArrayIndex()
		}
		.property string Error_InvalidFactoryType()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_Error_InvalidFactoryType()
		}
		.property string Error_NullImplementation()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_Error_NullImplementation()
		}
		.property string Error_NullService()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_Error_NullService()
		}
		.property string Error_PropertyValueEditor_InvalidDialogValueEditorCommandInvocation()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_Error_PropertyValueEditor_InvalidDialogValueEditorCommandInvocation()
		}
		.property string Error_PropertyValueEditor_InvalidDialogValueEditorEditorValue()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_Error_PropertyValueEditor_InvalidDialogValueEditorEditorValue()
		}
		.property string Error_RecursionResolvingService()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_Error_RecursionResolvingService()
		}
		.property string Error_RequiredService()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_Error_RequiredService()
		}
		.property string Error_TableValidationFailed()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_Error_TableValidationFailed()
		}
		.property string Error_ToolAlreadyActive()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_Error_ToolAlreadyActive()
		}
		.property string Error_UnknownMemberDescriptor()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_Error_UnknownMemberDescriptor()
		}
		.property string Error_ValidationAmbiguousMember()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_Error_ValidationAmbiguousMember()
		}
		.property string Error_ValidationNoMatchingMember()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_Error_ValidationNoMatchingMember()
		}
		.property string Error_ValueGetFailed()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_Error_ValueGetFailed()
		}
		.property string Error_ValueSetFailed()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_Error_ValueSetFailed()
		}
		.property string FromExpression_CanOnlySetFocusScopePriorityOnAnElementThatIsAFocusScope()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_FromExpression_CanOnlySetFocusScopePriorityOnAnElementThatIsAFocusScope()
		}
		.property string FromExpression_CategoryEditorTypeLoadFailed()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_FromExpression_CategoryEditorTypeLoadFailed()
		}
		.property string FromExpression_CategoryIconLoadFailed()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_FromExpression_CategoryIconLoadFailed()
		}
		.property string FromExpression_CollectionDialogEditorCollectionItemFactoryInstantiateFailed()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_FromExpression_CollectionDialogEditorCollectionItemFactoryInstantiateFailed()
		}
		.property string FromExpression_MethodOrOperationIsNotImplemented()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_FromExpression_MethodOrOperationIsNotImplemented()
		}
		.property string FromExpression_NewItemFactoryIconLoadFailed()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_FromExpression_NewItemFactoryIconLoadFailed()
		}
		.property string FromExpression_NoConvertBackForValueToIconConverter()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_FromExpression_NoConvertBackForValueToIconConverter()
		}
		.property string FromExpression_SwitchConverterIsOneWay()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_FromExpression_SwitchConverterIsOneWay()
		}
		.property string FromExpression_UnexpectedBrushType()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_FromExpression_UnexpectedBrushType()
		}
		.property string FromExpression_UnexpectedDrawingType()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_FromExpression_UnexpectedDrawingType()
		}
		.property string FromExpression_UnexpectedImageSourceType()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_FromExpression_UnexpectedImageSourceType()
		}
		.property string FromExpression_ValueEditorLoadFailed()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_FromExpression_ValueEditorLoadFailed()
		}
		.property string MetadataPluginLog_ErrorFailedToLoadMetadataAssembly()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_MetadataPluginLog_ErrorFailedToLoadMetadataAssembly()
		}
		.property string PropertyCategoryAllProperties()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_PropertyCategoryAllProperties()
		}
		.property string PropertyEditing_AdvancedCategoryEditors()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_PropertyEditing_AdvancedCategoryEditors()
		}
		.property string PropertyEditing_AlphabeticalCaption()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_PropertyEditing_AlphabeticalCaption()
		}
		.property string PropertyEditing_BasicCategoryEditors()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_PropertyEditing_BasicCategoryEditors()
		}
		.property string PropertyEditing_CategorizedCaption()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_PropertyEditing_CategorizedCaption()
		}
		.property string PropertyEditing_CategoryContainerAutomationPeerHelp()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_PropertyEditing_CategoryContainerAutomationPeerHelp()
		}
		.property string PropertyEditing_CategoryList()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_PropertyEditing_CategoryList()
		}
		.property string PropertyEditing_ClearButtonCaption()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_PropertyEditing_ClearButtonCaption()
		}
		.property string PropertyEditing_ClearIndexer()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_PropertyEditing_ClearIndexer()
		}
		.property string PropertyEditing_CollectionEditorTitle()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_PropertyEditing_CollectionEditorTitle()
		}
		.property string PropertyEditing_CollectionItemDisplayFormatType()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_PropertyEditing_CollectionItemDisplayFormatType()
		}
		.property string PropertyEditing_CollectionItemDisplayFormatTypeAndName()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_PropertyEditing_CollectionItemDisplayFormatTypeAndName()
		}
		.property string PropertyEditing_DefaultArrayStringValue()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_PropertyEditing_DefaultArrayStringValue()
		}
		.property string PropertyEditing_DefaultCollectionStringValue()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_PropertyEditing_DefaultCollectionStringValue()
		}
		.property string PropertyEditing_DefaultEnumerableStringValue()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_PropertyEditing_DefaultEnumerableStringValue()
		}
		.property string PropertyEditing_DialogError()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_PropertyEditing_DialogError()
		}
		.property string PropertyEditing_DialogValueEditorTitle()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_PropertyEditing_DialogValueEditorTitle()
		}
		.property string PropertyEditing_DuplicateNameInCollection()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_PropertyEditing_DuplicateNameInCollection()
		}
		.property string PropertyEditing_ErrorAbort_NoTransactionsOpened()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_PropertyEditing_ErrorAbort_NoTransactionsOpened()
		}
		.property string PropertyEditing_ErrorCommit_NoTransactionsOpened()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_PropertyEditing_ErrorCommit_NoTransactionsOpened()
		}
		.property string PropertyEditing_ErrorSetValueOnIndexer()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_PropertyEditing_ErrorSetValueOnIndexer()
		}
		.property string PropertyEditing_InvalidIndexer()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_PropertyEditing_InvalidIndexer()
		}
		.property string PropertyEditing_MultipleObjectsSelected()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_PropertyEditing_MultipleObjectsSelected()
		}
		.property string PropertyEditing_MultipleTypesSelected()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_PropertyEditing_MultipleTypesSelected()
		}
		.property string PropertyEditing_NameChangeUndoText()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_PropertyEditing_NameChangeUndoText()
		}
		.property string PropertyEditing_NamePropertyDisplayFormat()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_PropertyEditing_NamePropertyDisplayFormat()
		}
		.property string PropertyEditing_NameSetError()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_PropertyEditing_NameSetError()
		}
		.property string PropertyEditing_NoStringToValueConversion()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_PropertyEditing_NoStringToValueConversion()
		}
		.property string PropertyEditing_PropertyInspector()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_PropertyEditing_PropertyInspector()
		}
		.property string PropertyEditing_PropertyInspectorAutomationPeerHelp()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_PropertyEditing_PropertyInspectorAutomationPeerHelp()
		}
		.property string PropertyEditing_SelectionStatus_AdvancedCategory()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_PropertyEditing_SelectionStatus_AdvancedCategory()
		}
		.property string PropertyEditing_SelectionStatus_Category()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_PropertyEditing_SelectionStatus_Category()
		}
		.property string PropertyEditing_SelectionStatus_CategoryEditor()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_PropertyEditing_SelectionStatus_CategoryEditor()
		}
		.property string PropertyEditing_SelectionStatus_Empty()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_PropertyEditing_SelectionStatus_Empty()
		}
		.property string PropertyEditing_SelectionStatus_Property()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_PropertyEditing_SelectionStatus_Property()
		}
		.property string PropertyEditing_SelectionStatus_Unknown()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_PropertyEditing_SelectionStatus_Unknown()
		}
		.property string PropertyEditing_SetError()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_PropertyEditing_SetError()
		}
		.property string PropertyEditing_SubPropertyEditorAutomationName()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_PropertyEditing_SubPropertyEditorAutomationName()
		}
		.property string PropertyEditing_UndoText()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_PropertyEditing_UndoText()
		}
		.property string PropertyEditing_ValidationFailed()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_PropertyEditing_ValidationFailed()
		}
		.property class [mscorlib]System.Resources.ResourceManager ResourceManager()
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(2) }
			.get class [mscorlib]System.Resources.ResourceManager System.Activities.Presentation.Internal.Properties.Resources::get_ResourceManager()
		}
		.property string ToolDescription_CreateInstance()
		{
			.get string System.Activities.Presentation.Internal.Properties.Resources::get_ToolDescription_CreateInstance()
		}
	}
}
.namespace System.Activities.Presentation.Internal.PropertyEditing
{
	.class private CategoryList
		extends [PresentationFramework]System.Windows.Controls.ItemsControl
		implements class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.CategoryBase>, [mscorlib]System.Collections.IEnumerable, System.Activities.Presentation.Internal.PropertyEditing.State.IStateContainer, [System]System.ComponentModel.INotifyPropertyChanged
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = { string('Item') }
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_ContainerGenerated(class System.Activities.Presentation.Internal.PropertyEditing.ContainerGeneratedHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void remove_ContainerGenerated(class System.Activities.Presentation.Internal.PropertyEditing.ContainerGeneratedHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Count()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_FilterString()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_FilterString(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System]System.Windows.Input.ICommand get_ClearFilterCommand()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_HasAnyFilterMatches()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationFramework]System.Windows.FrameworkElement get_Selection()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Internal.PropertyEditing.Selection.SelectionPath get_SelectionPath()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_SelectionPath(class System.Activities.Presentation.Internal.PropertyEditing.Selection.SelectionPath 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.PropertyEditing.CategoryEntry get_Item(int32 index)
		{
			ret
		}
		.method family virtual hidebysig 
			instance class [PresentationCore]System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer()
		{
			ret
		}
		.method public hidebysig 
			instance void Insert(int32 index, class System.Activities.Presentation.PropertyEditing.CategoryEntry category)
		{
			ret
		}
		.method public hidebysig 
			instance void InsertAlphabetically(class System.Activities.Presentation.PropertyEditing.CategoryEntry category)
		{
			ret
		}
		.method public hidebysig 
			instance void RemoveAt(int32 index)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void RestoreState(object state)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object RetrieveState()
		{
			ret
		}
		.method family virtual hidebysig 
			instance class [WindowsBase]System.Windows.DependencyObject GetContainerForItemOverride()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void PrepareContainerForItemOverride(class [WindowsBase]System.Windows.DependencyObject element, object item)
		{
			ret
		}
		.method public hidebysig 
			instance void RefreshFilter()
		{
			ret
		}
		.method public hidebysig 
			instance void ClearFilter()
		{
			ret
		}
		.method public hidebysig 
			instance bool UpdateSelectedProperty(class System.Activities.Presentation.Internal.PropertyEditing.Selection.SelectionPath stickyPath, string defaultPropertyName, class System.Activities.Presentation.Internal.PropertyEditing.Selection.SelectionPath fallbackPath)
		{
			ret
		}
		.method assembly hidebysig 
			instance bool SetSelectionPath(class System.Activities.Presentation.Internal.PropertyEditing.Selection.SelectionPath path, [out] bool& pendingGeneration)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnPreviewMouseDown(class [PresentationCore]System.Windows.Input.MouseButtonEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnPreviewMouseUp(class [PresentationCore]System.Windows.Input.MouseButtonEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnIsKeyboardFocusWithinChanged(valuetype [WindowsBase]System.Windows.DependencyPropertyChangedEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnKeyDown(class [PresentationCore]System.Windows.Input.KeyEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance valuetype [WindowsBase]System.Windows.Size ArrangeOverride(valuetype [WindowsBase]System.Windows.Size arrangeBounds)
		{
			ret
		}
		.method assembly hidebysig 
			instance class System.Activities.Presentation.PropertyEditing.PropertyContainer FindPropertyEntryVisual(class System.Activities.Presentation.PropertyEditing.PropertyEntry 'property', class System.Activities.Presentation.PropertyEditing.CategoryEntry parentCategory, [out] bool& pendingGeneration)
		{
			ret
		}
		.method assembly hidebysig 
			instance class System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.CategoryContainer FindCategoryEntryVisual(class System.Activities.Presentation.PropertyEditing.CategoryEntry category)
		{
			ret
		}
		.method assembly hidebysig 
			instance class [PresentationCore]System.Windows.UIElement FindCategoryEditorVisual(class System.Activities.Presentation.PropertyEditing.CategoryEditor editor, class System.Activities.Presentation.Internal.PropertyEditing.Model.ModelCategoryEntry category, [out] bool& pendingGeneration)
		{
			ret
		}
		.method assembly hidebysig 
			instance class System.Activities.Presentation.PropertyEditing.CategoryEntry FindCategory(string name)
		{
			ret
		}
		.method assembly hidebysig 
			instance class System.Activities.Presentation.PropertyEditing.PropertyEntry FindPropertyEntry(string propertyName, [out] class System.Activities.Presentation.Internal.PropertyEditing.Model.ModelCategoryEntry& parentCategory)
		{
			ret
		}
		.method assembly hidebysig 
			instance class System.Activities.Presentation.PropertyEditing.CategoryEditor FindCategoryEditor(string editorTypeName, [out] class System.Activities.Presentation.Internal.PropertyEditing.Model.ModelCategoryEntry& category)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [mscorlib]'System.Collections.Generic.IEnumerator`1'<class System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.CategoryBase> GetEnumerator()
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			.override [mscorlib]System.Collections.IEnumerable::GetEnumerator
			ret
		}
		.event System.Activities.Presentation.Internal.PropertyEditing.ContainerGeneratedHandler ContainerGenerated
		{
			.addon instance void System.Activities.Presentation.Internal.PropertyEditing.CategoryList::add_ContainerGenerated(class System.Activities.Presentation.Internal.PropertyEditing.ContainerGeneratedHandler)
			.removeon instance void System.Activities.Presentation.Internal.PropertyEditing.CategoryList::remove_ContainerGenerated(class System.Activities.Presentation.Internal.PropertyEditing.ContainerGeneratedHandler)
		}
		.event [System]System.ComponentModel.PropertyChangedEventHandler PropertyChanged
		{
			.addon instance void System.Activities.Presentation.Internal.PropertyEditing.CategoryList::add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
			.removeon instance void System.Activities.Presentation.Internal.PropertyEditing.CategoryList::remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
		}
		.property instance class [System]System.Windows.Input.ICommand ClearFilterCommand()
		{
			.get instance class [System]System.Windows.Input.ICommand System.Activities.Presentation.Internal.PropertyEditing.CategoryList::get_ClearFilterCommand()
		}
		.property instance int32 Count()
		{
			.get instance int32 System.Activities.Presentation.Internal.PropertyEditing.CategoryList::get_Count()
		}
		.property instance string FilterString()
		{
			.get instance string System.Activities.Presentation.Internal.PropertyEditing.CategoryList::get_FilterString()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.CategoryList::set_FilterString(string)
		}
		.property instance bool HasAnyFilterMatches()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.CategoryList::get_HasAnyFilterMatches()
		}
		.property instance class System.Activities.Presentation.PropertyEditing.CategoryEntry Item(int32)
		{
			.get instance class System.Activities.Presentation.PropertyEditing.CategoryEntry System.Activities.Presentation.Internal.PropertyEditing.CategoryList::get_Item(int32)
		}
		.property instance class [PresentationFramework]System.Windows.FrameworkElement Selection()
		{
			.get instance class [PresentationFramework]System.Windows.FrameworkElement System.Activities.Presentation.Internal.PropertyEditing.CategoryList::get_Selection()
		}
		.property instance class System.Activities.Presentation.Internal.PropertyEditing.Selection.SelectionPath SelectionPath()
		{
			.get instance class System.Activities.Presentation.Internal.PropertyEditing.Selection.SelectionPath System.Activities.Presentation.Internal.PropertyEditing.CategoryList::get_SelectionPath()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.CategoryList::set_SelectionPath(class System.Activities.Presentation.Internal.PropertyEditing.Selection.SelectionPath)
		}
	}
	.class private abstract sealed CategoryNameMap
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			string GetLocalizedCategoryName(string categoryName)
		{
			ret
		}
	}
	.class private CiderCategoryContainer
		extends System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.CategoryContainer
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_ExpandedChanged(class [mscorlib]System.EventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void remove_ExpandedChanged(class [mscorlib]System.EventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void add_AdvancedSectionPinnedChanged(class [mscorlib]System.EventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void remove_AdvancedSectionPinnedChanged(class [mscorlib]System.EventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsEmpty()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_ShowCategoryHeader()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ShowCategoryHeader(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Internal.PropertyEditing.Selection.ISelectionStop get_BasicCategorySelectionStop()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Internal.PropertyEditing.Selection.ISelectionStop get_AdvancedCategorySelectionStop()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void AddProperty(class System.Activities.Presentation.PropertyEditing.PropertyEntry 'property', class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.PropertyEditing.PropertyEntry> unconsumedProperties, class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.PropertyEditing.PropertyEntry> referenceOrder, class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.PropertyEditing.CategoryEditor> categoryEditors)
		{
			ret
		}
		.method public hidebysig 
			instance class System.Activities.Presentation.PropertyEditing.PropertyContainer ContainerFromProperty(class System.Activities.Presentation.PropertyEditing.PropertyEntry 'property', [out] bool& pendingGeneration)
		{
			ret
		}
		.method public hidebysig 
			instance class [PresentationCore]System.Windows.UIElement ContainerFromEditor(class System.Activities.Presentation.PropertyEditing.CategoryEditor editor, [out] bool& pendingGeneration)
		{
			ret
		}
		.method family virtual hidebysig 
			instance class [PresentationCore]System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnPropertyChanged(valuetype [WindowsBase]System.Windows.DependencyPropertyChangedEventArgs e)
		{
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty IsEmptyProperty
		.field static public class [WindowsBase]System.Windows.DependencyProperty ShowCategoryHeaderProperty
		.event [mscorlib]System.EventHandler AdvancedSectionPinnedChanged
		{
			.addon instance void System.Activities.Presentation.Internal.PropertyEditing.CiderCategoryContainer::add_AdvancedSectionPinnedChanged(class [mscorlib]System.EventHandler)
			.removeon instance void System.Activities.Presentation.Internal.PropertyEditing.CiderCategoryContainer::remove_AdvancedSectionPinnedChanged(class [mscorlib]System.EventHandler)
		}
		.event [mscorlib]System.EventHandler ExpandedChanged
		{
			.addon instance void System.Activities.Presentation.Internal.PropertyEditing.CiderCategoryContainer::add_ExpandedChanged(class [mscorlib]System.EventHandler)
			.removeon instance void System.Activities.Presentation.Internal.PropertyEditing.CiderCategoryContainer::remove_ExpandedChanged(class [mscorlib]System.EventHandler)
		}
		.property instance class System.Activities.Presentation.Internal.PropertyEditing.Selection.ISelectionStop AdvancedCategorySelectionStop()
		{
			.get instance class System.Activities.Presentation.Internal.PropertyEditing.Selection.ISelectionStop System.Activities.Presentation.Internal.PropertyEditing.CiderCategoryContainer::get_AdvancedCategorySelectionStop()
		}
		.property instance class System.Activities.Presentation.Internal.PropertyEditing.Selection.ISelectionStop BasicCategorySelectionStop()
		{
			.get instance class System.Activities.Presentation.Internal.PropertyEditing.Selection.ISelectionStop System.Activities.Presentation.Internal.PropertyEditing.CiderCategoryContainer::get_BasicCategorySelectionStop()
		}
		.property instance bool IsEmpty()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.CiderCategoryContainer::get_IsEmpty()
		}
		.property instance bool ShowCategoryHeader()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.CiderCategoryContainer::get_ShowCategoryHeader()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.CiderCategoryContainer::set_ShowCategoryHeader(bool)
		}
	}
	.class private CiderCategoryLayoutContainer
		extends System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.CategoryLayoutContainer
	{
		.method family virtual hidebysig 
			instance void PrepareContainerForItemOverride(class [WindowsBase]System.Windows.DependencyObject element, object item)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private CiderStandardCategoryLayout
		extends System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.StandardCategoryLayout
	{
		.method family virtual hidebysig 
			instance void PrepareContainerForItemOverride(class [WindowsBase]System.Windows.DependencyObject element, object item)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private ContainerGeneratedEventArgs
		extends [mscorlib]System.EventArgs
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.Internal.PropertyEditing.CiderCategoryContainer container)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Internal.PropertyEditing.CiderCategoryContainer get_Container()
		{
			ret
		}
		.property instance class System.Activities.Presentation.Internal.PropertyEditing.CiderCategoryContainer Container()
		{
			.get instance class System.Activities.Presentation.Internal.PropertyEditing.CiderCategoryContainer System.Activities.Presentation.Internal.PropertyEditing.ContainerGeneratedEventArgs::get_Container()
		}
	}
	.class private sealed ContainerGeneratedHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object sender, class System.Activities.Presentation.Internal.PropertyEditing.ContainerGeneratedEventArgs e)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object sender, class System.Activities.Presentation.Internal.PropertyEditing.ContainerGeneratedEventArgs e, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class private EditModeSwitchButtonKeyboardFix
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			bool GetApplyFix(class [WindowsBase]System.Windows.DependencyObject obj)
		{
			ret
		}
		.method public static hidebysig 
			void SetApplyFix(class [WindowsBase]System.Windows.DependencyObject obj, bool 'value')
		{
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ApplyFixProperty
	}
	.class private abstract sealed ExtensibilityAccessor
		extends [mscorlib]System.Object
	{
		.class nested public sealed IsMixedValueEvaluator
			extends [mscorlib]System.MulticastDelegate
		{
			.method public hidebysig specialname 
				instance void .ctor(object 'object', native int 'method')
				runtime 
			{
			}
			.method public virtual hidebysig newslot 
				instance bool Invoke()
				runtime 
			{
			}
			.method public virtual hidebysig newslot 
				instance class [mscorlib]System.IAsyncResult BeginInvoke(class [mscorlib]System.AsyncCallback callback, object 'object')
				runtime 
			{
			}
			.method public virtual hidebysig newslot 
				instance bool EndInvoke(class [mscorlib]System.IAsyncResult result)
				runtime 
			{
			}
		}
		.method public static hidebysig 
			string GetCategoryName(class System.Activities.Presentation.Model.ModelProperty 'property')
		{
			ret
		}
		.method public static hidebysig 
			class [mscorlib]System.Collections.ArrayList GetStandardValues(class [System]System.ComponentModel.TypeConverter converter)
		{
			ret
		}
		.method public static hidebysig 
			bool GetStandardValuesSupported(class [System]System.ComponentModel.TypeConverter converter)
		{
			ret
		}
		.method public static hidebysig 
			class System.Activities.Presentation.PropertyEditing.PropertyValueEditor GetCustomPropertyValueEditor(class System.Activities.Presentation.Model.ModelProperty 'property')
		{
			ret
		}
		.method public static hidebysig 
			class System.Activities.Presentation.PropertyEditing.PropertyValueEditor GetSubPropertyEditor(class System.Activities.Presentation.Model.ModelProperty 'property')
		{
			ret
		}
		.method public static hidebysig 
			class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class [mscorlib]System.Type> GetCategoryEditorTypes(class [mscorlib]System.Type ownerType)
		{
			ret
		}
		.method public static hidebysig 
			bool GetIsAdvanced(class System.Activities.Presentation.Model.ModelProperty 'property')
		{
			ret
		}
		.method public static hidebysig 
			bool GetIsAdvanced(class System.Activities.Presentation.PropertyEditing.CategoryEditor editor)
		{
			ret
		}
		.method public static hidebysig 
			string GetDefaultProperty(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public static hidebysig 
			string GetDisplayName(class System.Activities.Presentation.Model.ModelProperty 'property')
		{
			ret
		}
		.method public static hidebysig 
			string GetDescription(class System.Activities.Presentation.Model.ModelProperty 'property')
		{
			ret
		}
		.method public static hidebysig 
			class [System]System.ComponentModel.TypeConverter GetTypeConverter(class System.Activities.Presentation.Model.ModelItem item)
		{
			ret
		}
		.method public static hidebysig 
			class [System]System.ComponentModel.TypeConverter GetTypeConverter(class System.Activities.Presentation.Model.ModelProperty 'property')
		{
			ret
		}
		.method public static hidebysig 
			bool IsReadOnly(class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.ModelProperty> properties, class System.Activities.Presentation.Internal.PropertyEditing.ExtensibilityAccessor/IsMixedValueEvaluator isMixedValueEvaluator)
		{
			ret
		}
		.method public static hidebysig 
			valuetype [mscorlib]'System.Nullable`1'<bool> IsBrowsable(class System.Activities.Presentation.Model.ModelProperty 'property')
		{
			ret
		}
		.method public static hidebysig 
			class System.Activities.Presentation.PropertyEditing.PropertyOrder GetPropertyOrder(class System.Activities.Presentation.Model.ModelProperty 'property')
		{
			ret
		}
		.method public static hidebysig 
			class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.PropertyEditing.NewItemTypesAttribute> GetNewItemTypesAttributes(class System.Activities.Presentation.Model.ModelProperty 'property')
		{
			ret
		}
		.method public static hidebysig 
			class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.NewItemFactoryTypeModel> GetNewItemFactoryTypeModels(class System.Activities.Presentation.Model.ModelProperty modelProperty, valuetype [WindowsBase]System.Windows.Size desiredIconSize)
		{
			ret
		}
		.method public static hidebysig 
			class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.ModelProperty> GetSubProperties(class System.Activities.Presentation.Model.ModelItem item)
		{
			ret
		}
		.method public static hidebysig 
			class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.ModelProperty> GetSubProperties(class System.Activities.Presentation.Model.ModelProperty 'property')
		{
			ret
		}
		.method public static hidebysig 
			object SafeCreateInstance(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public static hidebysig 
			class System.Activities.Presentation.PropertyEditing.PropertyValueSource GetPropertySource(class System.Activities.Presentation.Model.ModelProperty 'property')
		{
			ret
		}
		.method public static hidebysig 
			bool IsEditorReusable(class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelProperty> properties)
		{
			ret
		}
		.method public static hidebysig 
			!!0 GetAttribute<([mscorlib]System.Attribute) 'T'>(class System.Activities.Presentation.Model.ModelProperty 'property')
		{
			ret
		}
		.method public static hidebysig 
			!!0 GetAttribute<([mscorlib]System.Attribute) 'T'>(class System.Activities.Presentation.Model.ModelItem item)
		{
			ret
		}
		.method public static hidebysig 
			!!0 GetAttribute<([mscorlib]System.Attribute) 'T'>(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public static hidebysig 
			class [mscorlib]'System.Collections.Generic.IEnumerable`1'<!!0> GetAttributes<([mscorlib]System.Attribute) 'T'>(class System.Activities.Presentation.Model.ModelProperty 'property')
		{
			ret
		}
		.method public static hidebysig 
			class [mscorlib]'System.Collections.Generic.IEnumerable`1'<!!0> GetAttributes<([mscorlib]System.Attribute) 'T'>(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public static hidebysig 
			!!0 GetAttribute<([mscorlib]System.Attribute) 'T'>(class [System]System.ComponentModel.AttributeCollection attributes)
		{
			ret
		}
	}
	.class private KeyboardEnabledRadioButton
		extends [PresentationFramework]System.Windows.Controls.RadioButton
	{
		.method family virtual hidebysig 
			instance void OnKeyDown(class [PresentationCore]System.Windows.Input.KeyEventArgs e)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private PropertyInspector
		extends [PresentationFramework]System.Windows.Controls.Grid
		implements [System]System.ComponentModel.INotifyPropertyChanged, [System.Xaml]System.Windows.Markup.IComponentConnector
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_RootViewModified(class [mscorlib]System.EventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void remove_RootViewModified(class [mscorlib]System.EventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_DesignerContextItemManager(class System.Activities.Presentation.ContextItemManager 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsInfoBarNameReadOnly()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_SelectionName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_SelectionName(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_SelectionIcon()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_SelectionTypeName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_SessionState()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_SessionState(object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsReadOnly()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_IsReadOnly(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsInAlphaView()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsInAlphaView(bool 'value')
		{
			ret
		}
		.method assembly hidebysig 
			instance void SelectPropertyByPath(string path)
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class [PresentationFramework]System.Windows.Controls.TextBlock get_SelectionTypeLabel()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class System.Activities.Presentation.Internal.PropertyEditing.PropertyToolBar get_PropertyToolBar()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class [PresentationFramework]System.Windows.Controls.TextBlock get_NoSearchResultsLabel()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class [PresentationFramework]System.Windows.Controls.TextBlock get_UninitializedLabel()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class System.Activities.Presentation.Internal.PropertyEditing.CategoryList get_CategoryList()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class System.Activities.Presentation.EditingContext get_EditingContext()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_EditingContext(class System.Activities.Presentation.EditingContext 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig 
			instance void Dispose()
		{
			ret
		}
		.method public hidebysig 
			instance void OnSelectionChanged(class System.Activities.Presentation.View.Selection selection)
		{
			ret
		}
		.method public hidebysig 
			instance void RefreshSelection()
		{
			ret
		}
		.method family virtual hidebysig 
			instance class [PresentationCore]System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer()
		{
			ret
		}
		.method public hidebysig 
			instance void ClearFilterString()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void InitializeComponent()
		{
			ret
		}
		.method assembly hidebysig 
			instance class [mscorlib]System.Delegate _CreateDelegate(class [mscorlib]System.Type delegateType, string 'handler')
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Windows.Markup.IComponentConnector.Connect(int32 connectionId, object target)
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.override [System.Xaml]System.Windows.Markup.IComponentConnector::Connect
			ret
		}
		.field assembly class System.Activities.Presentation.Internal.PropertyEditing.CategoryList _categoryList
		.field assembly class [PresentationFramework]System.Windows.Controls.TextBlock _noSearchResultsLabel
		.field assembly class System.Activities.Presentation.Internal.PropertyEditing.PropertyToolBar _propertyToolBar
		.field assembly class [PresentationFramework]System.Windows.Controls.TextBlock _typeLabel
		.field assembly class [PresentationFramework]System.Windows.Controls.TextBlock _uninitializedLabel
		.event [System]System.ComponentModel.PropertyChangedEventHandler PropertyChanged
		{
			.addon instance void System.Activities.Presentation.Internal.PropertyEditing.PropertyInspector::add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
			.removeon instance void System.Activities.Presentation.Internal.PropertyEditing.PropertyInspector::remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
		}
		.event [mscorlib]System.EventHandler RootViewModified
		{
			.addon instance void System.Activities.Presentation.Internal.PropertyEditing.PropertyInspector::add_RootViewModified(class [mscorlib]System.EventHandler)
			.removeon instance void System.Activities.Presentation.Internal.PropertyEditing.PropertyInspector::remove_RootViewModified(class [mscorlib]System.EventHandler)
		}
		.property instance class System.Activities.Presentation.Internal.PropertyEditing.CategoryList CategoryList()
		{
			.get instance class System.Activities.Presentation.Internal.PropertyEditing.CategoryList System.Activities.Presentation.Internal.PropertyEditing.PropertyInspector::get_CategoryList()
		}
		.property instance class System.Activities.Presentation.ContextItemManager DesignerContextItemManager()
		{
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.PropertyInspector::set_DesignerContextItemManager(class System.Activities.Presentation.ContextItemManager)
		}
		.property instance class System.Activities.Presentation.EditingContext EditingContext()
		{
			.get instance class System.Activities.Presentation.EditingContext System.Activities.Presentation.Internal.PropertyEditing.PropertyInspector::get_EditingContext()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.PropertyInspector::set_EditingContext(class System.Activities.Presentation.EditingContext)
		}
		.property instance bool IsInAlphaView()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.PropertyInspector::get_IsInAlphaView()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.PropertyInspector::set_IsInAlphaView(bool)
		}
		.property instance bool IsInfoBarNameReadOnly()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.PropertyInspector::get_IsInfoBarNameReadOnly()
		}
		.property instance bool IsReadOnly()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.PropertyInspector::get_IsReadOnly()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.PropertyInspector::set_IsReadOnly(bool)
		}
		.property instance class [PresentationFramework]System.Windows.Controls.TextBlock NoSearchResultsLabel()
		{
			.get instance class [PresentationFramework]System.Windows.Controls.TextBlock System.Activities.Presentation.Internal.PropertyEditing.PropertyInspector::get_NoSearchResultsLabel()
		}
		.property instance class System.Activities.Presentation.Internal.PropertyEditing.PropertyToolBar PropertyToolBar()
		{
			.get instance class System.Activities.Presentation.Internal.PropertyEditing.PropertyToolBar System.Activities.Presentation.Internal.PropertyEditing.PropertyInspector::get_PropertyToolBar()
		}
		.property instance object SelectionIcon()
		{
			.get instance object System.Activities.Presentation.Internal.PropertyEditing.PropertyInspector::get_SelectionIcon()
		}
		.property instance string SelectionName()
		{
			.get instance string System.Activities.Presentation.Internal.PropertyEditing.PropertyInspector::get_SelectionName()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.PropertyInspector::set_SelectionName(string)
		}
		.property instance class [PresentationFramework]System.Windows.Controls.TextBlock SelectionTypeLabel()
		{
			.get instance class [PresentationFramework]System.Windows.Controls.TextBlock System.Activities.Presentation.Internal.PropertyEditing.PropertyInspector::get_SelectionTypeLabel()
		}
		.property instance string SelectionTypeName()
		{
			.get instance string System.Activities.Presentation.Internal.PropertyEditing.PropertyInspector::get_SelectionTypeName()
		}
		.property instance object SessionState()
		{
			.get instance object System.Activities.Presentation.Internal.PropertyEditing.PropertyInspector::get_SessionState()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.PropertyInspector::set_SessionState(object)
		}
		.property instance class [PresentationFramework]System.Windows.Controls.TextBlock UninitializedLabel()
		{
			.get instance class [PresentationFramework]System.Windows.Controls.TextBlock System.Activities.Presentation.Internal.PropertyEditing.PropertyInspector::get_UninitializedLabel()
		}
	}
	.class private PropertyInspectorFontAndColorDictionary
		extends [PresentationFramework]System.Windows.ResourceDictionary
	{
		.method assembly hidebysig specialname 
			instance void .ctor(class [mscorlib]'System.Collections.Generic.Dictionary`2'<string,object> fontAndColorData)
		{
			ret
		}
	}
	.class private abstract sealed PropertyInspectorMergedResources
		extends [mscorlib]System.Object
	{
		.method public static hidebysig specialname 
			string get_FontSizeKey()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_FontFamilyKey()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_FontWeightKey()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_TextBrushKey()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_SelectedForegroundBrushKey()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_SelectedBackgroundBrushKey()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_BackgroundBrushKey()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_BorderBrushKey()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_CategoryCaptionTextBrushKey()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_PaneBrushKey()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_PopupBrushKey()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ToolBarItemHoverBackgroundBrushKey()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ToolBarItemHoverBorderBrushKey()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ToolBarItemSelectedBackgroundBrushKey()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ToolBarItemSelectedBorderBrushKey()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ToolBarBackgroundBrushKey()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ToolBarSeparatorBrushKey()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ToolBarTextBoxBorderBrushKey()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DefaultCollectionStringValue()
		{
			ret
		}
		.property string BackgroundBrushKey()
		{
			.get string System.Activities.Presentation.Internal.PropertyEditing.PropertyInspectorMergedResources::get_BackgroundBrushKey()
		}
		.property string BorderBrushKey()
		{
			.get string System.Activities.Presentation.Internal.PropertyEditing.PropertyInspectorMergedResources::get_BorderBrushKey()
		}
		.property string CategoryCaptionTextBrushKey()
		{
			.get string System.Activities.Presentation.Internal.PropertyEditing.PropertyInspectorMergedResources::get_CategoryCaptionTextBrushKey()
		}
		.property string DefaultCollectionStringValue()
		{
			.get string System.Activities.Presentation.Internal.PropertyEditing.PropertyInspectorMergedResources::get_DefaultCollectionStringValue()
		}
		.property string FontFamilyKey()
		{
			.get string System.Activities.Presentation.Internal.PropertyEditing.PropertyInspectorMergedResources::get_FontFamilyKey()
		}
		.property string FontSizeKey()
		{
			.get string System.Activities.Presentation.Internal.PropertyEditing.PropertyInspectorMergedResources::get_FontSizeKey()
		}
		.property string FontWeightKey()
		{
			.get string System.Activities.Presentation.Internal.PropertyEditing.PropertyInspectorMergedResources::get_FontWeightKey()
		}
		.property string PaneBrushKey()
		{
			.get string System.Activities.Presentation.Internal.PropertyEditing.PropertyInspectorMergedResources::get_PaneBrushKey()
		}
		.property string PopupBrushKey()
		{
			.get string System.Activities.Presentation.Internal.PropertyEditing.PropertyInspectorMergedResources::get_PopupBrushKey()
		}
		.property string SelectedBackgroundBrushKey()
		{
			.get string System.Activities.Presentation.Internal.PropertyEditing.PropertyInspectorMergedResources::get_SelectedBackgroundBrushKey()
		}
		.property string SelectedForegroundBrushKey()
		{
			.get string System.Activities.Presentation.Internal.PropertyEditing.PropertyInspectorMergedResources::get_SelectedForegroundBrushKey()
		}
		.property string TextBrushKey()
		{
			.get string System.Activities.Presentation.Internal.PropertyEditing.PropertyInspectorMergedResources::get_TextBrushKey()
		}
		.property string ToolBarBackgroundBrushKey()
		{
			.get string System.Activities.Presentation.Internal.PropertyEditing.PropertyInspectorMergedResources::get_ToolBarBackgroundBrushKey()
		}
		.property string ToolBarItemHoverBackgroundBrushKey()
		{
			.get string System.Activities.Presentation.Internal.PropertyEditing.PropertyInspectorMergedResources::get_ToolBarItemHoverBackgroundBrushKey()
		}
		.property string ToolBarItemHoverBorderBrushKey()
		{
			.get string System.Activities.Presentation.Internal.PropertyEditing.PropertyInspectorMergedResources::get_ToolBarItemHoverBorderBrushKey()
		}
		.property string ToolBarItemSelectedBackgroundBrushKey()
		{
			.get string System.Activities.Presentation.Internal.PropertyEditing.PropertyInspectorMergedResources::get_ToolBarItemSelectedBackgroundBrushKey()
		}
		.property string ToolBarItemSelectedBorderBrushKey()
		{
			.get string System.Activities.Presentation.Internal.PropertyEditing.PropertyInspectorMergedResources::get_ToolBarItemSelectedBorderBrushKey()
		}
		.property string ToolBarSeparatorBrushKey()
		{
			.get string System.Activities.Presentation.Internal.PropertyEditing.PropertyInspectorMergedResources::get_ToolBarSeparatorBrushKey()
		}
		.property string ToolBarTextBoxBorderBrushKey()
		{
			.get string System.Activities.Presentation.Internal.PropertyEditing.PropertyInspectorMergedResources::get_ToolBarTextBoxBorderBrushKey()
		}
	}
	.class private PropertyPanel
		extends [PresentationFramework]System.Windows.Controls.Panel
	{
		.method public hidebysig specialname 
			instance float64 get_LastChildWidth()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LastChildWidth(float64 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Level()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Level(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_LevelIndent()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LevelIndent(float64 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationCore]System.Windows.Media.Brush get_OutlineBrush()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_OutlineBrush(class [PresentationCore]System.Windows.Media.Brush 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationCore]System.Windows.Media.Brush get_SelectionBrush()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_SelectionBrush(class [PresentationCore]System.Windows.Media.Brush 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_OutlineThickness()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_OutlineThickness(float64 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IgnoreFirstChildBackground()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IgnoreFirstChildBackground(bool 'value')
		{
			ret
		}
		.method family virtual hidebysig 
			instance valuetype [WindowsBase]System.Windows.Size MeasureOverride(valuetype [WindowsBase]System.Windows.Size availableSize)
		{
			ret
		}
		.method family virtual hidebysig 
			instance valuetype [WindowsBase]System.Windows.Size ArrangeOverride(valuetype [WindowsBase]System.Windows.Size finalSize)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnRender(class [PresentationCore]System.Windows.Media.DrawingContext dc)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty IgnoreFirstChildBackgroundProperty
		.field static public class [WindowsBase]System.Windows.DependencyProperty LastChildWidthProperty
		.field static public class [WindowsBase]System.Windows.DependencyProperty LevelIndentProperty
		.field static public class [WindowsBase]System.Windows.DependencyProperty LevelProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty OutlineBrushProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty OutlineThicknessProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty SelectionBrushProperty
		.property instance bool IgnoreFirstChildBackground()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.PropertyPanel::get_IgnoreFirstChildBackground()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.PropertyPanel::set_IgnoreFirstChildBackground(bool)
		}
		.property instance float64 LastChildWidth()
		{
			.get instance float64 System.Activities.Presentation.Internal.PropertyEditing.PropertyPanel::get_LastChildWidth()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.PropertyPanel::set_LastChildWidth(float64)
		}
		.property instance int32 Level()
		{
			.get instance int32 System.Activities.Presentation.Internal.PropertyEditing.PropertyPanel::get_Level()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.PropertyPanel::set_Level(int32)
		}
		.property instance float64 LevelIndent()
		{
			.get instance float64 System.Activities.Presentation.Internal.PropertyEditing.PropertyPanel::get_LevelIndent()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.PropertyPanel::set_LevelIndent(float64)
		}
		.property instance class [PresentationCore]System.Windows.Media.Brush OutlineBrush()
		{
			.get instance class [PresentationCore]System.Windows.Media.Brush System.Activities.Presentation.Internal.PropertyEditing.PropertyPanel::get_OutlineBrush()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.PropertyPanel::set_OutlineBrush(class [PresentationCore]System.Windows.Media.Brush)
		}
		.property instance float64 OutlineThickness()
		{
			.get instance float64 System.Activities.Presentation.Internal.PropertyEditing.PropertyPanel::get_OutlineThickness()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.PropertyPanel::set_OutlineThickness(float64)
		}
		.property instance class [PresentationCore]System.Windows.Media.Brush SelectionBrush()
		{
			.get instance class [PresentationCore]System.Windows.Media.Brush System.Activities.Presentation.Internal.PropertyEditing.PropertyPanel::get_SelectionBrush()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.PropertyPanel::set_SelectionBrush(class [PresentationCore]System.Windows.Media.Brush)
		}
	}
	.class private sealed PropertySelectionMode
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Activities.Presentation.Internal.PropertyEditing.PropertySelectionMode Default = int32(0x00000000)
		.field static public literal valuetype System.Activities.Presentation.Internal.PropertyEditing.PropertySelectionMode Sticky = int32(0x00000001)
	}
	.class private PropertyStateContainer
		extends System.Activities.Presentation.Internal.PropertyEditing.State.PersistedStateContainer
	{
		.method public static hidebysig specialname 
			class System.Activities.Presentation.Internal.PropertyEditing.PropertyStateContainer get_Instance()
		{
			ret
		}
		.method public hidebysig 
			instance class System.Activities.Presentation.Internal.PropertyEditing.State.PropertyState GetPropertyState(string propertyName)
		{
			ret
		}
		.method family virtual hidebysig 
			instance class System.Activities.Presentation.Internal.PropertyEditing.State.PersistedState CreateDefaultState(object key)
		{
			ret
		}
		.method family virtual hidebysig 
			instance class System.Activities.Presentation.Internal.PropertyEditing.State.PersistedState DeserializeState(string serializedValue)
		{
			ret
		}
		.property class System.Activities.Presentation.Internal.PropertyEditing.PropertyStateContainer Instance()
		{
			.get class System.Activities.Presentation.Internal.PropertyEditing.PropertyStateContainer System.Activities.Presentation.Internal.PropertyEditing.PropertyStateContainer::get_Instance()
		}
	}
	.class private sealed PropertyToolBar
		extends [PresentationFramework]System.Windows.Controls.Control
		implements [System]System.ComponentModel.INotifyPropertyChanged
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_CurrentViewManagerChanged(class [mscorlib]System.EventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void remove_CurrentViewManagerChanged(class [mscorlib]System.EventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Internal.PropertyEditing.Views.IPropertyViewManager get_CurrentViewManager()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_CurrentViewManager(class System.Activities.Presentation.Internal.PropertyEditing.Views.IPropertyViewManager 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Internal.PropertyEditing.CategoryList get_CategoryList()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_CategoryList(class System.Activities.Presentation.Internal.PropertyEditing.CategoryList 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_PersistenceId()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_PersistenceId(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsCategoryViewSelected()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsCategoryViewSelected(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsAlphaViewSelected()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsAlphaViewSelected(bool 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class [PresentationFramework]System.Windows.Controls.RadioButton get_ByCategoryViewButton()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class [PresentationFramework]System.Windows.Controls.RadioButton get_AlphaViewButton()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class [PresentationFramework]System.Windows.Controls.TextBlock get_SearchLabel()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class [PresentationFramework]System.Windows.Controls.TextBox get_SearchTextBox()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class [PresentationFramework]System.Windows.Controls.Button get_SearchClearButton()
		{
			ret
		}
		.method family virtual hidebysig 
			instance class [PresentationCore]System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer()
		{
			ret
		}
		.field static public class [WindowsBase]System.Windows.DependencyProperty CategoryListProperty
		.field static public class [WindowsBase]System.Windows.DependencyProperty CurrentViewManagerProperty
		.event [mscorlib]System.EventHandler CurrentViewManagerChanged
		{
			.addon instance void System.Activities.Presentation.Internal.PropertyEditing.PropertyToolBar::add_CurrentViewManagerChanged(class [mscorlib]System.EventHandler)
			.removeon instance void System.Activities.Presentation.Internal.PropertyEditing.PropertyToolBar::remove_CurrentViewManagerChanged(class [mscorlib]System.EventHandler)
		}
		.event [System]System.ComponentModel.PropertyChangedEventHandler PropertyChanged
		{
			.addon instance void System.Activities.Presentation.Internal.PropertyEditing.PropertyToolBar::add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
			.removeon instance void System.Activities.Presentation.Internal.PropertyEditing.PropertyToolBar::remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
		}
		.property instance class [PresentationFramework]System.Windows.Controls.RadioButton AlphaViewButton()
		{
			.get instance class [PresentationFramework]System.Windows.Controls.RadioButton System.Activities.Presentation.Internal.PropertyEditing.PropertyToolBar::get_AlphaViewButton()
		}
		.property instance class [PresentationFramework]System.Windows.Controls.RadioButton ByCategoryViewButton()
		{
			.get instance class [PresentationFramework]System.Windows.Controls.RadioButton System.Activities.Presentation.Internal.PropertyEditing.PropertyToolBar::get_ByCategoryViewButton()
		}
		.property instance class System.Activities.Presentation.Internal.PropertyEditing.CategoryList CategoryList()
		{
			.get instance class System.Activities.Presentation.Internal.PropertyEditing.CategoryList System.Activities.Presentation.Internal.PropertyEditing.PropertyToolBar::get_CategoryList()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.PropertyToolBar::set_CategoryList(class System.Activities.Presentation.Internal.PropertyEditing.CategoryList)
		}
		.property instance class System.Activities.Presentation.Internal.PropertyEditing.Views.IPropertyViewManager CurrentViewManager()
		{
			.get instance class System.Activities.Presentation.Internal.PropertyEditing.Views.IPropertyViewManager System.Activities.Presentation.Internal.PropertyEditing.PropertyToolBar::get_CurrentViewManager()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.PropertyToolBar::set_CurrentViewManager(class System.Activities.Presentation.Internal.PropertyEditing.Views.IPropertyViewManager)
		}
		.property instance bool IsAlphaViewSelected()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.PropertyToolBar::get_IsAlphaViewSelected()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.PropertyToolBar::set_IsAlphaViewSelected(bool)
		}
		.property instance bool IsCategoryViewSelected()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.PropertyToolBar::get_IsCategoryViewSelected()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.PropertyToolBar::set_IsCategoryViewSelected(bool)
		}
		.property instance string PersistenceId()
		{
			.get instance string System.Activities.Presentation.Internal.PropertyEditing.PropertyToolBar::get_PersistenceId()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.PropertyToolBar::set_PersistenceId(string)
		}
		.property instance class [PresentationFramework]System.Windows.Controls.Button SearchClearButton()
		{
			.get instance class [PresentationFramework]System.Windows.Controls.Button System.Activities.Presentation.Internal.PropertyEditing.PropertyToolBar::get_SearchClearButton()
		}
		.property instance class [PresentationFramework]System.Windows.Controls.TextBlock SearchLabel()
		{
			.get instance class [PresentationFramework]System.Windows.Controls.TextBlock System.Activities.Presentation.Internal.PropertyEditing.PropertyToolBar::get_SearchLabel()
		}
		.property instance class [PresentationFramework]System.Windows.Controls.TextBox SearchTextBox()
		{
			.get instance class [PresentationFramework]System.Windows.Controls.TextBox System.Activities.Presentation.Internal.PropertyEditing.PropertyToolBar::get_SearchTextBox()
		}
	}
	.class private PropertyValueDialogControl
		extends [PresentationFramework]System.Windows.Controls.Grid
		implements [System.Xaml]System.Windows.Markup.IComponentConnector
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.PropertyEditing.PropertyEntry 'property', class [PresentationFramework]System.Windows.DataTemplate valueDialogTemplate)
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void add_CloseParentDialog(class [mscorlib]System.EventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void remove_CloseParentDialog(class [mscorlib]System.EventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void OnParentDialogClosing()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void InitializeComponent()
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Windows.Markup.IComponentConnector.Connect(int32 connectionId, object target)
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.override [System.Xaml]System.Windows.Markup.IComponentConnector::Connect
			ret
		}
		.field assembly class [PresentationFramework]System.Windows.Controls.Button _OKButton
		.field assembly class [PresentationFramework]System.Windows.Controls.Button _cancelButton
		.field assembly class [PresentationFramework]System.Windows.Controls.ContentControl _contentControl
		.event [mscorlib]System.EventHandler CloseParentDialog
		{
			.addon instance void System.Activities.Presentation.Internal.PropertyEditing.PropertyValueDialogControl::add_CloseParentDialog(class [mscorlib]System.EventHandler)
			.removeon instance void System.Activities.Presentation.Internal.PropertyEditing.PropertyValueDialogControl::remove_CloseParentDialog(class [mscorlib]System.EventHandler)
		}
	}
	.class private PropertyValueDialogHost
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			void AttachOpenDialogHandlers(class [PresentationCore]System.Windows.UIElement dialogRoot)
		{
			ret
		}
		.method public hidebysig 
			instance void OnCanOpenDialogWindow(object sender, class [PresentationCore]System.Windows.Input.CanExecuteRoutedEventArgs e)
		{
			ret
		}
		.method public hidebysig 
			instance void OnOpenDialogWindow(object sender, class [PresentationCore]System.Windows.Input.ExecutedRoutedEventArgs e)
		{
			ret
		}
	}
	.class private PropertyValueEditorCommandHandler
		extends [mscorlib]System.Object
		implements [mscorlib]System.IDisposable
	{
		.method public hidebysig specialname 
			instance void .ctor(class [PresentationCore]System.Windows.UIElement commandHost)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Dispose()
		{
			ret
		}
		.method public hidebysig 
			instance void CommitOpenTransactions()
		{
			ret
		}
		.method public hidebysig 
			instance void AbortOpenTransactions()
		{
			ret
		}
	}
	.class private sealed SearchDirection
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Activities.Presentation.Internal.PropertyEditing.SearchDirection Next = int32(0x00000000)
		.field static public literal valuetype System.Activities.Presentation.Internal.PropertyEditing.SearchDirection Previous = int32(0x00000001)
	}
	.class private SharedPropertyValueColumnWidthContainer
		extends [WindowsBase]System.Windows.DependencyObject
		implements [System]System.ComponentModel.INotifyPropertyChanged
	{
		.method public final virtual hidebysig newslot specialname 
			instance void add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [PresentationFramework]System.Windows.GridLength get_ValueColumnWidth()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ValueColumnWidth(valuetype [PresentationFramework]System.Windows.GridLength 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_ContainerWidth()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_ContainerWidth(float64 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance float64 get_ValueColumnPercentage()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_ValueColumnPercentage(float64 'value')
		{
			ret
		}
		.method public static hidebysig 
			void SetOwningSharedPropertyValueColumnWidthContainer(class [WindowsBase]System.Windows.DependencyObject obj, class System.Activities.Presentation.Internal.PropertyEditing.SharedPropertyValueColumnWidthContainer 'value')
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			ret
		}
		.method public static hidebysig 
			class System.Activities.Presentation.Internal.PropertyEditing.SharedPropertyValueColumnWidthContainer GetOwningSharedPropertyValueColumnWidthContainer(class [WindowsBase]System.Windows.DependencyObject obj)
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty OwningSharedPropertyValueColumnWidthContainerProperty
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
		.event [System]System.ComponentModel.PropertyChangedEventHandler PropertyChanged
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.addon instance void System.Activities.Presentation.Internal.PropertyEditing.SharedPropertyValueColumnWidthContainer::add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
			.removeon instance void System.Activities.Presentation.Internal.PropertyEditing.SharedPropertyValueColumnWidthContainer::remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
		}
		.property instance float64 ContainerWidth()
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance float64 System.Activities.Presentation.Internal.PropertyEditing.SharedPropertyValueColumnWidthContainer::get_ContainerWidth()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.SharedPropertyValueColumnWidthContainer::set_ContainerWidth(float64)
		}
		.property instance float64 ValueColumnPercentage()
		{
			.get instance float64 System.Activities.Presentation.Internal.PropertyEditing.SharedPropertyValueColumnWidthContainer::get_ValueColumnPercentage()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.SharedPropertyValueColumnWidthContainer::set_ValueColumnPercentage(float64)
		}
		.property instance valuetype [PresentationFramework]System.Windows.GridLength ValueColumnWidth()
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance valuetype [PresentationFramework]System.Windows.GridLength System.Activities.Presentation.Internal.PropertyEditing.SharedPropertyValueColumnWidthContainer::get_ValueColumnWidth()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.SharedPropertyValueColumnWidthContainer::set_ValueColumnWidth(valuetype [PresentationFramework]System.Windows.GridLength)
		}
	}
	.class private abstract sealed VisualTreeUtils
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			!!0 GetNamedChild<([PresentationFramework]System.Windows.FrameworkElement) 'T'>(class [WindowsBase]System.Windows.DependencyObject container, string name)
		{
			ret
		}
		.method public static hidebysig 
			!!0 GetNamedChild<([PresentationFramework]System.Windows.FrameworkElement) 'T'>(class [WindowsBase]System.Windows.DependencyObject container, string name, int32 searchDepth)
		{
			ret
		}
		.method public static hidebysig 
			!!0 GetTemplateChild<([WindowsBase]System.Windows.DependencyObject) 'T'>(class [WindowsBase]System.Windows.DependencyObject element)
		{
			ret
		}
		.method public static hidebysig 
			!!0 FindVisualAncestor<([WindowsBase]System.Windows.DependencyObject) 'T'>(class [WindowsBase]System.Windows.DependencyObject child)
		{
			ret
		}
		.method public static hidebysig 
			!!0 FindFocusableElement<([PresentationCore]System.Windows.UIElement) 'T'>(!!0 reference)
		{
			ret
		}
		.method public static hidebysig 
			!!0 FindFocusableParent<([PresentationCore]System.Windows.UIElement) 'T'>(class [PresentationCore]System.Windows.UIElement reference)
		{
			ret
		}
		.method public static hidebysig 
			class [WindowsBase]System.Windows.DependencyObject GetIndexedVisualParent(class [WindowsBase]System.Windows.DependencyObject child, [out] int32& childrenCount, [out] int32& childIndex)
		{
			ret
		}
		.method public static hidebysig 
			bool IsVisible(class [PresentationCore]System.Windows.UIElement element)
		{
			ret
		}
		.method public static hidebysig 
			class [mscorlib]'System.Collections.Generic.ICollection`1'<!!0> PrunVisualTree<([WindowsBase]System.Windows.DependencyObject) 'T'>(class [PresentationCore]System.Windows.Media.Visual root)
		{
			ret
		}
		.method public static hidebysig 
			uint32 GetTreeDepth(class [WindowsBase]System.Windows.DependencyObject element)
		{
			ret
		}
	}
}
.namespace System.Activities.Presentation.Internal.PropertyEditing.Automation
{
	.class private AutomatedChoiceEditor
		extends System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor
	{
		.method assembly hidebysig specialname 
			instance void add_DependencyPropertyChanged(class [WindowsBase]System.Windows.DependencyPropertyChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void remove_DependencyPropertyChanged(class [WindowsBase]System.Windows.DependencyPropertyChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationFramework]System.Windows.Data.IValueConverter get_AutomationValueConverter()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_AutomationValueConverter(class [PresentationFramework]System.Windows.Data.IValueConverter 'value')
		{
			ret
		}
		.method family virtual hidebysig 
			instance class [PresentationCore]System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnPropertyChanged(valuetype [WindowsBase]System.Windows.DependencyPropertyChangedEventArgs e)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.field static public class [WindowsBase]System.Windows.DependencyProperty AutomationValueConverterProperty
		.event [WindowsBase]System.Windows.DependencyPropertyChangedEventHandler DependencyPropertyChanged
		{
			.addon instance void System.Activities.Presentation.Internal.PropertyEditing.Automation.AutomatedChoiceEditor::add_DependencyPropertyChanged(class [WindowsBase]System.Windows.DependencyPropertyChangedEventHandler)
			.removeon instance void System.Activities.Presentation.Internal.PropertyEditing.Automation.AutomatedChoiceEditor::remove_DependencyPropertyChanged(class [WindowsBase]System.Windows.DependencyPropertyChangedEventHandler)
		}
		.property instance class [PresentationFramework]System.Windows.Data.IValueConverter AutomationValueConverter()
		{
			.get instance class [PresentationFramework]System.Windows.Data.IValueConverter System.Activities.Presentation.Internal.PropertyEditing.Automation.AutomatedChoiceEditor::get_AutomationValueConverter()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.Automation.AutomatedChoiceEditor::set_AutomationValueConverter(class [PresentationFramework]System.Windows.Data.IValueConverter)
		}
	}
	.class private AutomatedComboBox
		extends [PresentationFramework]System.Windows.Controls.ComboBox
	{
		.method family virtual hidebysig 
			instance class [PresentationCore]System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private AutomatedListBox
		extends [PresentationFramework]System.Windows.Controls.ListBox
	{
		.method family virtual hidebysig 
			instance class [PresentationCore]System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private AutomatedListBoxItemAutomationPeer
		extends [PresentationFramework]System.Windows.Automation.Peers.ListBoxItemAutomationPeer
	{
		.method public hidebysig specialname 
			instance void .ctor(object item, class [PresentationFramework]System.Windows.Automation.Peers.SelectorAutomationPeer owner)
		{
			ret
		}
		.method family virtual hidebysig 
			instance string GetNameCore()
		{
			ret
		}
	}
	.class private CategoryContainerAutomationPeer
		extends [mscorlib]System.Object
		implements [UIAutomationProvider]System.Windows.Automation.Provider.IExpandCollapseProvider, [UIAutomationProvider]System.Windows.Automation.Provider.IScrollItemProvider
	{
		.class nested assembly CategoryContainerItemAutomationPeer
			extends [PresentationFramework]System.Windows.Automation.Peers.ItemAutomationPeer
			implements System.Activities.Presentation.Internal.PropertyEditing.Automation.IAutomationFocusChangedEventSource
		{
			.method public hidebysig specialname 
				instance void .ctor(class System.Activities.Presentation.Internal.PropertyEditing.Model.ModelCategoryEntry item, class System.Activities.Presentation.Internal.PropertyEditing.CiderCategoryContainer container, class System.Activities.Presentation.Internal.PropertyEditing.Automation.CategoryListAutomationPeer parentAutomationPeer)
			{
				ret
			}
			.method family virtual hidebysig 
				instance valuetype [PresentationCore]System.Windows.Automation.Peers.AutomationControlType GetAutomationControlTypeCore()
			{
				ret
			}
			.method family virtual hidebysig 
				instance class [mscorlib]'System.Collections.Generic.List`1'<class [PresentationCore]System.Windows.Automation.Peers.AutomationPeer> GetChildrenCore()
			{
				ret
			}
			.method family virtual hidebysig 
				instance string GetNameCore()
			{
				ret
			}
			.method family virtual hidebysig 
				instance string GetClassNameCore()
			{
				ret
			}
			.method family virtual hidebysig 
				instance string GetHelpTextCore()
			{
				ret
			}
			.method public virtual hidebysig 
				instance object GetPattern(valuetype [PresentationCore]System.Windows.Automation.Peers.PatternInterface patternInterface)
			{
				ret
			}
			.method public final virtual hidebysig newslot 
				instance void UnloadEventHook()
			{
				ret
			}
		}
		.method public final virtual hidebysig newslot specialname 
			instance valuetype [UIAutomationTypes]System.Windows.Automation.ExpandCollapseState get_ExpandCollapseState()
		{
			ret
		}
		.method public static hidebysig 
			class [PresentationCore]System.Windows.Automation.Peers.UIElementAutomationPeer CreateStandAloneAutomationPeer(class System.Activities.Presentation.Internal.PropertyEditing.CiderCategoryContainer container)
		{
			ret
		}
		.method public static hidebysig 
			class [PresentationFramework]System.Windows.Automation.Peers.ItemAutomationPeer CreateItemAutomationPeer(class System.Activities.Presentation.Internal.PropertyEditing.Model.ModelCategoryEntry category, class System.Activities.Presentation.Internal.PropertyEditing.CiderCategoryContainer container, class System.Activities.Presentation.Internal.PropertyEditing.Automation.CategoryListAutomationPeer parentAutomationPeer)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Collapse()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Expand()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void ScrollIntoView()
		{
			ret
		}
		.method public hidebysig 
			instance void AddFocusEvents()
		{
			ret
		}
		.method public hidebysig 
			instance void RemoveFocusEvents()
		{
			ret
		}
		.property instance valuetype [UIAutomationTypes]System.Windows.Automation.ExpandCollapseState ExpandCollapseState()
		{
			.get instance valuetype [UIAutomationTypes]System.Windows.Automation.ExpandCollapseState System.Activities.Presentation.Internal.PropertyEditing.Automation.CategoryContainerAutomationPeer::get_ExpandCollapseState()
		}
	}
	.class private CategoryListAutomationPeer
		extends [PresentationFramework]System.Windows.Automation.Peers.ItemsControlAutomationPeer
		implements System.Activities.Presentation.Internal.PropertyEditing.Automation.IAutomationFocusChangedEventSource
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.Internal.PropertyEditing.CategoryList owner)
		{
			ret
		}
		.method family virtual hidebysig 
			instance class [PresentationFramework]System.Windows.Automation.Peers.ItemAutomationPeer CreateItemAutomationPeer(object item)
		{
			ret
		}
		.method family virtual hidebysig 
			instance string GetClassNameCore()
		{
			ret
		}
		.method family virtual hidebysig 
			instance string GetNameCore()
		{
			ret
		}
		.method family virtual hidebysig 
			instance string GetItemStatusCore()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void UnloadEventHook()
		{
			ret
		}
	}
	.class private HiddenUIElementAutomationPeer
		extends [PresentationCore]System.Windows.Automation.Peers.UIElementAutomationPeer
	{
		.method public hidebysig specialname 
			instance void .ctor(class [PresentationCore]System.Windows.UIElement owner)
		{
			ret
		}
		.method family virtual hidebysig 
			instance bool IsControlElementCore()
		{
			ret
		}
	}
	.class private interface abstract IAutomationFocusChangedEventSource
	{
		.method public virtual hidebysig newslot abstract 
			instance void UnloadEventHook()
		{
		}
	}
	.class private PropertyContainerAutomationPeer
		extends [PresentationCore]System.Windows.Automation.Peers.UIElementAutomationPeer
		implements [UIAutomationProvider]System.Windows.Automation.Provider.IValueProvider, [UIAutomationProvider]System.Windows.Automation.Provider.IScrollItemProvider, System.Activities.Presentation.Internal.PropertyEditing.Automation.IAutomationFocusChangedEventSource
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.PropertyEditing.PropertyContainer container)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_IsReadOnly()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance string get_Value()
		{
			ret
		}
		.method assembly hidebysig 
			instance void AddFocusEvents()
		{
			ret
		}
		.method family virtual hidebysig 
			instance string GetClassNameCore()
		{
			ret
		}
		.method family virtual hidebysig 
			instance string GetNameCore()
		{
			ret
		}
		.method public virtual hidebysig 
			instance object GetPattern(valuetype [PresentationCore]System.Windows.Automation.Peers.PatternInterface patternInterface)
		{
			ret
		}
		.method public hidebysig 
			instance void RemoveFocusEvents()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void SetValue(string 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void ScrollIntoView()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void UnloadEventHook()
		{
			ret
		}
		.property instance bool IsReadOnly()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.Automation.PropertyContainerAutomationPeer::get_IsReadOnly()
		}
		.property instance string Value()
		{
			.get instance string System.Activities.Presentation.Internal.PropertyEditing.Automation.PropertyContainerAutomationPeer::get_Value()
		}
	}
	.class private PropertyInspectorAutomationPeer
		extends [PresentationCore]System.Windows.Automation.Peers.UIElementAutomationPeer
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.Internal.PropertyEditing.PropertyInspector owner)
		{
			ret
		}
		.method family virtual hidebysig 
			instance class [mscorlib]'System.Collections.Generic.List`1'<class [PresentationCore]System.Windows.Automation.Peers.AutomationPeer> GetChildrenCore()
		{
			ret
		}
		.method family virtual hidebysig 
			instance valuetype [WindowsBase]System.Windows.Point GetClickablePointCore()
		{
			ret
		}
		.method family virtual hidebysig 
			instance string GetHelpTextCore()
		{
			ret
		}
		.method family virtual hidebysig 
			instance string GetNameCore()
		{
			ret
		}
		.method family virtual hidebysig 
			instance string GetClassNameCore()
		{
			ret
		}
	}
	.class private SubPropertyEditorAutomationPeer
		extends [PresentationCore]System.Windows.Automation.Peers.UIElementAutomationPeer
		implements [UIAutomationProvider]System.Windows.Automation.Provider.IExpandCollapseProvider
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.Internal.PropertyEditing.Editors.SubPropertyEditor editor)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance valuetype [UIAutomationTypes]System.Windows.Automation.ExpandCollapseState get_ExpandCollapseState()
		{
			ret
		}
		.method family virtual hidebysig 
			instance string GetNameCore()
		{
			ret
		}
		.method family virtual hidebysig 
			instance string GetClassNameCore()
		{
			ret
		}
		.method public virtual hidebysig 
			instance object GetPattern(valuetype [PresentationCore]System.Windows.Automation.Peers.PatternInterface patternInterface)
		{
			ret
		}
		.method family virtual hidebysig 
			instance class [mscorlib]'System.Collections.Generic.List`1'<class [PresentationCore]System.Windows.Automation.Peers.AutomationPeer> GetChildrenCore()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Collapse()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Expand()
		{
			ret
		}
		.property instance valuetype [UIAutomationTypes]System.Windows.Automation.ExpandCollapseState ExpandCollapseState()
		{
			.get instance valuetype [UIAutomationTypes]System.Windows.Automation.ExpandCollapseState System.Activities.Presentation.Internal.PropertyEditing.Automation.SubPropertyEditorAutomationPeer::get_ExpandCollapseState()
		}
	}
	.class private TextFormatConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method public hidebysig specialname 
			instance string get_Format()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Format(string 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object Convert(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance string Format()
		{
			.get instance string System.Activities.Presentation.Internal.PropertyEditing.Automation.TextFormatConverter::get_Format()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.Automation.TextFormatConverter::set_Format(string)
		}
	}
}
.namespace System.Activities.Presentation.Internal.PropertyEditing.Editors
{
	.class private BoolViewEditor
		extends System.Activities.Presentation.PropertyEditing.PropertyValueEditor
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private abstract sealed EditorUtilities
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			bool IsConcreteWithDefaultCtor(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public static hidebysig 
			string GetDisplayName(object item)
		{
			ret
		}
		.method public static hidebysig 
			bool IsNullableEnumType(class [mscorlib]System.Type t)
		{
			ret
		}
		.field static public literal string NullString = "(null)"
	}
	.class private FlagEditor
		extends [PresentationFramework]System.Windows.Controls.ComboBox
		implements [System.Xaml]System.Windows.Markup.IComponentConnector
	{
		.method public hidebysig specialname 
			instance class [mscorlib]System.Type get_FlagType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_FlagType(class [mscorlib]System.Type 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnPreviewKeyDown(class [PresentationCore]System.Windows.Input.KeyEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnDropDownOpened(class [mscorlib]System.EventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnLostKeyboardFocus(class [PresentationCore]System.Windows.Input.KeyboardFocusChangedEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnDropDownClosed(class [mscorlib]System.EventArgs e)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void InitializeComponent()
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Windows.Markup.IComponentConnector.Connect(int32 connectionId, object target)
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.override [System.Xaml]System.Windows.Markup.IComponentConnector::Connect
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty FlagTypeProperty
		.property instance class [mscorlib]System.Type FlagType()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.Internal.PropertyEditing.Editors.FlagEditor::get_FlagType()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.Editors.FlagEditor::set_FlagType(class [mscorlib]System.Type)
		}
	}
	.class private sealed FlagPanel
		extends [PresentationFramework]System.Windows.Controls.StackPanel
	{
		.method public hidebysig specialname 
			instance class [mscorlib]System.Type get_FlagType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_FlagType(class [mscorlib]System.Type 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_FlagString()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_FlagString(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty FlagStringProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty FlagTypeProperty
		.property instance string FlagString()
		{
			.get instance string System.Activities.Presentation.Internal.PropertyEditing.Editors.FlagPanel::get_FlagString()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.Editors.FlagPanel::set_FlagString(string)
		}
		.property instance class [mscorlib]System.Type FlagType()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.Internal.PropertyEditing.Editors.FlagPanel::get_FlagType()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.Editors.FlagPanel::set_FlagType(class [mscorlib]System.Type)
		}
	}
	.class private sealed FlagStringConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private ImageSourceToImageConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private NewItemFactoryTypeModelToDisplayNameConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method public static hidebysig specialname 
			class System.Activities.Presentation.Internal.PropertyEditing.Editors.NewItemFactoryTypeModelToDisplayNameConverter get_Instance()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object Convert(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property class System.Activities.Presentation.Internal.PropertyEditing.Editors.NewItemFactoryTypeModelToDisplayNameConverter Instance()
		{
			.get class System.Activities.Presentation.Internal.PropertyEditing.Editors.NewItemFactoryTypeModelToDisplayNameConverter System.Activities.Presentation.Internal.PropertyEditing.Editors.NewItemFactoryTypeModelToDisplayNameConverter::get_Instance()
		}
	}
	.class private NewItemFactoryTypeModelToTypeNameConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private NonZeroToBoolConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method public hidebysig specialname 
			instance bool get_Invert()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Invert(bool 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object Convert(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance bool Invert()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.Editors.NonZeroToBoolConverter::get_Invert()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.Editors.NonZeroToBoolConverter::set_Invert(bool)
		}
	}
	.class private PropertyValueToDisplayNameConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method public static hidebysig specialname 
			class System.Activities.Presentation.Internal.PropertyEditing.Editors.PropertyValueToDisplayNameConverter get_Instance()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object Convert(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property class System.Activities.Presentation.Internal.PropertyEditing.Editors.PropertyValueToDisplayNameConverter Instance()
		{
			.get class System.Activities.Presentation.Internal.PropertyEditing.Editors.PropertyValueToDisplayNameConverter System.Activities.Presentation.Internal.PropertyEditing.Editors.PropertyValueToDisplayNameConverter::get_Instance()
		}
	}
	.class private PropertyValueToStandardValuesConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private QuickItemTemplateSelector
		extends [PresentationFramework]System.Windows.Controls.DataTemplateSelector
	{
		.method public hidebysig specialname 
			instance class [PresentationFramework]System.Windows.DataTemplate get_PopupTemplate()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_PopupTemplate(class [PresentationFramework]System.Windows.DataTemplate 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationFramework]System.Windows.DataTemplate get_InlineTemplate()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_InlineTemplate(class [PresentationFramework]System.Windows.DataTemplate 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [PresentationFramework]System.Windows.DataTemplate SelectTemplate(object item, class [WindowsBase]System.Windows.DependencyObject container)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class [PresentationFramework]System.Windows.DataTemplate InlineTemplate()
		{
			.get instance class [PresentationFramework]System.Windows.DataTemplate System.Activities.Presentation.Internal.PropertyEditing.Editors.QuickItemTemplateSelector::get_InlineTemplate()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.Editors.QuickItemTemplateSelector::set_InlineTemplate(class [PresentationFramework]System.Windows.DataTemplate)
		}
		.property instance class [PresentationFramework]System.Windows.DataTemplate PopupTemplate()
		{
			.get instance class [PresentationFramework]System.Windows.DataTemplate System.Activities.Presentation.Internal.PropertyEditing.Editors.QuickItemTemplateSelector::get_PopupTemplate()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.Editors.QuickItemTemplateSelector::set_PopupTemplate(class [PresentationFramework]System.Windows.DataTemplate)
		}
	}
	.class private RTLValueConveter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IMultiValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object[] values, class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object[] ConvertBack(object 'value', class [mscorlib]System.Type[] targetTypes, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private SubPropertyEditor
		extends [PresentationFramework]System.Windows.Controls.Control
		implements [System]System.ComponentModel.INotifyPropertyChanged, System.Activities.Presentation.Internal.PropertyEditing.Selection.ISelectionStop
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void add_VisualsChanged(class [mscorlib]System.EventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void remove_VisualsChanged(class [mscorlib]System.EventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.PropertyEditing.PropertyEntry get_PropertyEntry()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_PropertyEntry(class System.Activities.Presentation.PropertyEditing.PropertyEntry 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_IsExpanded()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_IsExpanded(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.NewItemFactoryTypeModel get_CurrentQuickType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_CurrentQuickType(class System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.NewItemFactoryTypeModel 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_HasQuickTypes()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [WindowsBase]System.ComponentModel.ICollectionView get_QuickTypes()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.PropertyEditing.PropertyEntry> get_SelectiveSubProperties()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_IsExpandable()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance class System.Activities.Presentation.Internal.PropertyEditing.Selection.SelectionPath get_Path()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance string get_Description()
		{
			ret
		}
		.method family virtual hidebysig 
			instance class [PresentationCore]System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnPropertyChanged(valuetype [WindowsBase]System.Windows.DependencyPropertyChangedEventArgs e)
		{
			ret
		}
		.method assembly hidebysig 
			instance class System.Activities.Presentation.PropertyEditing.PropertyEntry FindSubPropertyEntry(string propertyName)
		{
			ret
		}
		.method assembly hidebysig 
			instance class System.Activities.Presentation.PropertyEditing.PropertyContainer FindSubPropertyEntryVisual(class System.Activities.Presentation.PropertyEditing.PropertyEntry 'property')
		{
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty CurrentQuickTypeProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty IsExpandedProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty PropertyEntryProperty
		.event [System]System.ComponentModel.PropertyChangedEventHandler PropertyChanged
		{
			.addon instance void System.Activities.Presentation.Internal.PropertyEditing.Editors.SubPropertyEditor::add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
			.removeon instance void System.Activities.Presentation.Internal.PropertyEditing.Editors.SubPropertyEditor::remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
		}
		.event [mscorlib]System.EventHandler VisualsChanged
		{
			.addon instance void System.Activities.Presentation.Internal.PropertyEditing.Editors.SubPropertyEditor::add_VisualsChanged(class [mscorlib]System.EventHandler)
			.removeon instance void System.Activities.Presentation.Internal.PropertyEditing.Editors.SubPropertyEditor::remove_VisualsChanged(class [mscorlib]System.EventHandler)
		}
		.property instance class System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.NewItemFactoryTypeModel CurrentQuickType()
		{
			.get instance class System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.NewItemFactoryTypeModel System.Activities.Presentation.Internal.PropertyEditing.Editors.SubPropertyEditor::get_CurrentQuickType()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.Editors.SubPropertyEditor::set_CurrentQuickType(class System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.NewItemFactoryTypeModel)
		}
		.property instance string Description()
		{
			.get instance string System.Activities.Presentation.Internal.PropertyEditing.Editors.SubPropertyEditor::get_Description()
		}
		.property instance bool HasQuickTypes()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.Editors.SubPropertyEditor::get_HasQuickTypes()
		}
		.property instance bool IsExpandable()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.Editors.SubPropertyEditor::get_IsExpandable()
		}
		.property instance bool IsExpanded()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.Editors.SubPropertyEditor::get_IsExpanded()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.Editors.SubPropertyEditor::set_IsExpanded(bool)
		}
		.property instance class System.Activities.Presentation.Internal.PropertyEditing.Selection.SelectionPath Path()
		{
			.get instance class System.Activities.Presentation.Internal.PropertyEditing.Selection.SelectionPath System.Activities.Presentation.Internal.PropertyEditing.Editors.SubPropertyEditor::get_Path()
		}
		.property instance class System.Activities.Presentation.PropertyEditing.PropertyEntry PropertyEntry()
		{
			.get instance class System.Activities.Presentation.PropertyEditing.PropertyEntry System.Activities.Presentation.Internal.PropertyEditing.Editors.SubPropertyEditor::get_PropertyEntry()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.Editors.SubPropertyEditor::set_PropertyEntry(class System.Activities.Presentation.PropertyEditing.PropertyEntry)
		}
		.property instance class [WindowsBase]System.ComponentModel.ICollectionView QuickTypes()
		{
			.get instance class [WindowsBase]System.ComponentModel.ICollectionView System.Activities.Presentation.Internal.PropertyEditing.Editors.SubPropertyEditor::get_QuickTypes()
		}
		.property instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.PropertyEditing.PropertyEntry> SelectiveSubProperties()
		{
			.get instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.PropertyEditing.PropertyEntry> System.Activities.Presentation.Internal.PropertyEditing.Editors.SubPropertyEditor::get_SelectiveSubProperties()
		}
	}
	.class private SubPropertyViewEditor
		extends System.Activities.Presentation.PropertyEditing.ExtendedPropertyValueEditor
	{
		.method public static hidebysig specialname 
			class System.Activities.Presentation.Internal.PropertyEditing.Editors.SubPropertyViewEditor get_Instance()
		{
			ret
		}
		.property class System.Activities.Presentation.Internal.PropertyEditing.Editors.SubPropertyViewEditor Instance()
		{
			.get class System.Activities.Presentation.Internal.PropertyEditing.Editors.SubPropertyViewEditor System.Activities.Presentation.Internal.PropertyEditing.Editors.SubPropertyViewEditor::get_Instance()
		}
	}
	.class private ValueToToolTipConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IMultiValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object[] values, class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object[] ConvertBack(object 'value', class [mscorlib]System.Type[] targetTypes, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
}
.namespace System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Diagnostics.Automation
{
	.class private abstract sealed AutomationElement
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			string GetId(class [WindowsBase]System.Windows.DependencyObject o)
		{
			ret
		}
		.method public static hidebysig 
			void SetId(class [WindowsBase]System.Windows.DependencyObject o, string val)
		{
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty IdProperty
	}
}
.namespace System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework
{
	.class private ExceptionStringTable
		extends [mscorlib]System.Object
	{
		.method assembly static hidebysig specialname 
			string get_CanOnlySetFocusScopePriorityOnAnElementThatIsAFocusScope()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_CategoryIconLoadFailed()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_CategoryEditorTypeLoadFailed()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_MethodOrOperationIsNotImplemented()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_NewItemFactoryIconLoadFailed()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_NoConvertBackForValueToIconConverter()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_SwitchConverterIsOneWay()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_UnexpectedImageSourceType()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_UnexpectedDrawingType()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_UnexpectedBrushType()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			string get_ValueEditorLoadFailed()
		{
			ret
		}
		.property string CanOnlySetFocusScopePriorityOnAnElementThatIsAFocusScope()
		{
			.get string System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ExceptionStringTable::get_CanOnlySetFocusScopePriorityOnAnElementThatIsAFocusScope()
		}
		.property string CategoryEditorTypeLoadFailed()
		{
			.get string System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ExceptionStringTable::get_CategoryEditorTypeLoadFailed()
		}
		.property string CategoryIconLoadFailed()
		{
			.get string System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ExceptionStringTable::get_CategoryIconLoadFailed()
		}
		.property string MethodOrOperationIsNotImplemented()
		{
			.get string System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ExceptionStringTable::get_MethodOrOperationIsNotImplemented()
		}
		.property string NewItemFactoryIconLoadFailed()
		{
			.get string System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ExceptionStringTable::get_NewItemFactoryIconLoadFailed()
		}
		.property string NoConvertBackForValueToIconConverter()
		{
			.get string System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ExceptionStringTable::get_NoConvertBackForValueToIconConverter()
		}
		.property string SwitchConverterIsOneWay()
		{
			.get string System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ExceptionStringTable::get_SwitchConverterIsOneWay()
		}
		.property string UnexpectedBrushType()
		{
			.get string System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ExceptionStringTable::get_UnexpectedBrushType()
		}
		.property string UnexpectedDrawingType()
		{
			.get string System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ExceptionStringTable::get_UnexpectedDrawingType()
		}
		.property string UnexpectedImageSourceType()
		{
			.get string System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ExceptionStringTable::get_UnexpectedImageSourceType()
		}
		.property string ValueEditorLoadFailed()
		{
			.get string System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ExceptionStringTable::get_ValueEditorLoadFailed()
		}
	}
	.class private interface abstract IMessageLogger
	{
		.method public virtual hidebysig newslot abstract 
			instance void Clear()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Write(string text)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void WriteLine(string text)
		{
		}
	}
	.class private sealed MixedProperty
		extends [mscorlib]System.Object
	{
		.field static public initonly object Mixed
	}
	.class private abstract sealed Tolerances
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			bool NearZero(float64 d)
		{
			ret
		}
	}
	.class private UIThreadDispatcher
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public static hidebysig specialname 
			class System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.UIThreadDispatcher get_Instance()
		{
			ret
		}
		.method public static hidebysig specialname 
			void set_Instance(class System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.UIThreadDispatcher 'value')
		{
			ret
		}
		.method public static hidebysig 
			void InitializeInstance()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void BeginInvoke(valuetype [WindowsBase]System.Windows.Threading.DispatcherPriority priority, class [mscorlib]System.Delegate 'method')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void BeginInvoke(valuetype [WindowsBase]System.Windows.Threading.DispatcherPriority priority, class [mscorlib]System.Delegate 'method', object arg)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void BeginInvoke(valuetype [WindowsBase]System.Windows.Threading.DispatcherPriority priority, class [mscorlib]System.Delegate 'method', object arg, object[] args)
		{
			.param [4]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(valuetype [WindowsBase]System.Windows.Threading.DispatcherPriority priority, class [mscorlib]System.Delegate 'method')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(valuetype [WindowsBase]System.Windows.Threading.DispatcherPriority priority, class [mscorlib]System.Delegate 'method', object arg)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(valuetype [WindowsBase]System.Windows.Threading.DispatcherPriority priority, class [mscorlib]System.Delegate 'method', object arg, object[] args)
		{
			.param [4]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.property class System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.UIThreadDispatcher Instance()
		{
			.get class System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.UIThreadDispatcher System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.UIThreadDispatcher::get_Instance()
			.set void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.UIThreadDispatcher::set_Instance(class System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.UIThreadDispatcher)
		}
	}
}
.namespace System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.Controls
{
	.class private WorkaroundPopup
		extends [PresentationFramework]System.Windows.Controls.Primitives.Popup
	{
		.method family virtual hidebysig 
			instance void OnOpened(class [mscorlib]System.EventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnGotKeyboardFocus(class [PresentationCore]System.Windows.Input.KeyboardFocusChangedEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnLostKeyboardFocus(class [PresentationCore]System.Windows.Input.KeyboardFocusChangedEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnGotFocus(class [PresentationCore]System.Windows.RoutedEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnLostFocus(class [PresentationCore]System.Windows.RoutedEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnLostMouseCapture(class [PresentationCore]System.Windows.Input.MouseEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnPreviewMouseDown(class [PresentationCore]System.Windows.Input.MouseButtonEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnKeyDown(class [PresentationCore]System.Windows.Input.KeyEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnClosed(class [mscorlib]System.EventArgs e)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
}
.namespace System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.Data
{
	.class private AppendSuffixConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method public hidebysig specialname 
			instance string get_Suffix()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Suffix(string 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object o, class [mscorlib]System.Type targetType, object 'value', class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object Convert(object o, class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance string Suffix()
		{
			.get instance string System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.Data.AppendSuffixConverter::get_Suffix()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.Data.AppendSuffixConverter::set_Suffix(string)
		}
	}
	.class private BoolToDoubleConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method public hidebysig specialname 
			instance float64 get_TrueValue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_TrueValue(float64 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_FalseValue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_FalseValue(float64 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object o, class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object Convert(object o, class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance float64 FalseValue()
		{
			.get instance float64 System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.Data.BoolToDoubleConverter::get_FalseValue()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.Data.BoolToDoubleConverter::set_FalseValue(float64)
		}
		.property instance float64 TrueValue()
		{
			.get instance float64 System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.Data.BoolToDoubleConverter::get_TrueValue()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.Data.BoolToDoubleConverter::set_TrueValue(float64)
		}
	}
	.class private BoolToVisibilityCollapsedConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method public hidebysig specialname 
			instance bool get_InvertBoolean()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_InvertBoolean(bool 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object o, class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object Convert(object o, class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance bool InvertBoolean()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.Data.BoolToVisibilityCollapsedConverter::get_InvertBoolean()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.Data.BoolToVisibilityCollapsedConverter::set_InvertBoolean(bool)
		}
	}
	.class private sealed BoolToVisibilityConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object o, class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object Convert(object o, class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private BoolToVisibilityHiddenConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method public hidebysig specialname 
			instance bool get_InvertBoolean()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_InvertBoolean(bool 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object o, class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object Convert(object o, class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance bool InvertBoolean()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.Data.BoolToVisibilityHiddenConverter::get_InvertBoolean()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.Data.BoolToVisibilityHiddenConverter::set_InvertBoolean(bool)
		}
	}
	.class private sealed ComposingConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.List`1'<class [PresentationFramework]System.Windows.Data.IValueConverter> get_Converters()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object Convert(object o, class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class [mscorlib]'System.Collections.Generic.List`1'<class [PresentationFramework]System.Windows.Data.IValueConverter> Converters()
		{
			.get instance class [mscorlib]'System.Collections.Generic.List`1'<class [PresentationFramework]System.Windows.Data.IValueConverter> System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.Data.ComposingConverter::get_Converters()
		}
	}
	.class private sealed DelegateCommand
		extends [mscorlib]System.Object
		implements [System]System.Windows.Input.ICommand
	{
		.class nested public sealed SimpleEventHandler
			extends [mscorlib]System.MulticastDelegate
		{
			.method public hidebysig specialname 
				instance void .ctor(object 'object', native int 'method')
				runtime 
			{
			}
			.method public virtual hidebysig newslot 
				instance void Invoke()
				runtime 
			{
			}
			.method public virtual hidebysig newslot 
				instance class [mscorlib]System.IAsyncResult BeginInvoke(class [mscorlib]System.AsyncCallback callback, object 'object')
				runtime 
			{
			}
			.method public virtual hidebysig newslot 
				instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
				runtime 
			{
			}
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.Data.DelegateCommand/SimpleEventHandler 'handler')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_CanExecuteChanged(class [mscorlib]System.EventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_CanExecuteChanged(class [mscorlib]System.EventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsEnabled()
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Windows.Input.ICommand.Execute(object arg)
		{
			.override [System]System.Windows.Input.ICommand::Execute
			ret
		}
		.method private final virtual hidebysig newslot 
			instance bool System.Windows.Input.ICommand.CanExecute(object arg)
		{
			.override [System]System.Windows.Input.ICommand::CanExecute
			ret
		}
		.event [mscorlib]System.EventHandler CanExecuteChanged
		{
			.addon instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.Data.DelegateCommand::add_CanExecuteChanged(class [mscorlib]System.EventHandler)
			.removeon instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.Data.DelegateCommand::remove_CanExecuteChanged(class [mscorlib]System.EventHandler)
		}
		.property instance bool IsEnabled()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.Data.DelegateCommand::get_IsEnabled()
		}
	}
	.class private EqualsConverter
		extends [WindowsBase]System.Windows.DependencyObject
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private IntegerToVisibilityConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method public hidebysig specialname 
			instance valuetype [PresentationCore]System.Windows.Visibility get_ZeroValue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ZeroValue(valuetype [PresentationCore]System.Windows.Visibility 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [PresentationCore]System.Windows.Visibility get_NonzeroValue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_NonzeroValue(valuetype [PresentationCore]System.Windows.Visibility 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object Convert(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance valuetype [PresentationCore]System.Windows.Visibility NonzeroValue()
		{
			.get instance valuetype [PresentationCore]System.Windows.Visibility System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.Data.IntegerToVisibilityConverter::get_NonzeroValue()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.Data.IntegerToVisibilityConverter::set_NonzeroValue(valuetype [PresentationCore]System.Windows.Visibility)
		}
		.property instance valuetype [PresentationCore]System.Windows.Visibility ZeroValue()
		{
			.get instance valuetype [PresentationCore]System.Windows.Visibility System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.Data.IntegerToVisibilityConverter::get_ZeroValue()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.Data.IntegerToVisibilityConverter::set_ZeroValue(valuetype [PresentationCore]System.Windows.Visibility)
		}
	}
	.class private IsNullConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private sealed NotConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object o, class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object o, class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private NullToBoolConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object o, class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object Convert(object o, class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private sealed 'ObservableCollectionWorkaround`1'<'T'>
		extends class [System]'System.Collections.ObjectModel.ObservableCollection`1'<!0>
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]'System.Collections.Generic.List`1'<!0> list)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Collections.ICollection collection)
		{
			ret
		}
		.method public hidebysig 
			instance int32 BinarySearch(!0 'value', class [mscorlib]'System.Collections.Generic.IComparer`1'<!0> comparer)
		{
			ret
		}
		.method public hidebysig 
			instance void Sort()
		{
			ret
		}
		.method public hidebysig 
			instance void Sort(class [mscorlib]'System.Collections.Generic.IComparer`1'<!0> comparer)
		{
			ret
		}
		.method public hidebysig 
			instance void Sort(class [mscorlib]'System.Comparison`1'<!0> comparison)
		{
			ret
		}
		.method public hidebysig 
			instance void Reverse()
		{
			ret
		}
	}
	.class private SwitchCase
		extends [WindowsBase]System.Windows.DependencyObject
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_In()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_In(object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_Out()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Out(object 'value')
		{
			ret
		}
		.property instance object In()
		{
			.get instance object System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.Data.SwitchCase::get_In()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.Data.SwitchCase::set_In(object)
		}
		.property instance object Out()
		{
			.get instance object System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.Data.SwitchCase::get_Out()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.Data.SwitchCase::set_Out(object)
		}
	}
	.class private SwitchConverter
		extends [WindowsBase]System.Windows.DependencyObject
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.custom instance void [System.Xaml]System.Windows.Markup.ContentPropertyAttribute::.ctor(string) = { string('Cases') }
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.Data.SwitchCase> get_Cases()
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_DefaultValue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_DefaultValue(object 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object Convert(object o, class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object o, class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.property instance class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.Data.SwitchCase> Cases()
		{
			.get instance class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.Data.SwitchCase> System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.Data.SwitchConverter::get_Cases()
		}
		.property instance object DefaultValue()
		{
			.get instance object System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.Data.SwitchConverter::get_DefaultValue()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.Data.SwitchConverter::set_DefaultValue(object)
		}
	}
	.class private sealed TypeReference
		extends [WindowsBase]System.Windows.DependencyObject
	{
		.method public hidebysig specialname 
			instance class [mscorlib]System.Type get_Type()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Type(class [mscorlib]System.Type 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class [mscorlib]System.Type Type()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.Data.TypeReference::get_Type()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.Data.TypeReference::set_Type(class [mscorlib]System.Type)
		}
	}
	.class private abstract sealed ValueConverterUtilities
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			bool AssureBool(object 'value', bool defaultIfNull)
		{
			ret
		}
	}
	.class private VisibilityAndConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IMultiValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object[] values, class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object[] ConvertBack(object 'value', class [mscorlib]System.Type[] targetTypes, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
}
.namespace System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector
{
	.class private abstract CategoryBase
		extends System.Activities.Presentation.PropertyEditing.CategoryEntry
		implements class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.PropertyEditing.PropertyEntry>, [mscorlib]System.Collections.IEnumerable
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = { string('Item') }
		.method family hidebysig specialname 
			instance void .ctor(string name)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.PropertyEditing.PropertyEntry> get_Properties()
		{
			ret
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.PropertyEditing.PropertyEntry> get_BasicProperties()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.PropertyEditing.PropertyEntry> get_AdvancedProperties()
		{
		}
		.method public hidebysig specialname 
			instance bool get_BasicPropertyMatchesFilter()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BasicPropertyMatchesFilter(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_AdvancedPropertyMatchesFilter()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_AdvancedPropertyMatchesFilter(bool 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class [mscorlib]System.IComparable get_SortOrdering()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.PropertyEditing.CategoryEditor> get_CategoryEditors()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationCore]System.Windows.Media.ImageSource get_CategoryIcon()
		{
			ret
		}
		.method family hidebysig specialname 
			instance void set_CategoryIcon(class [PresentationCore]System.Windows.Media.ImageSource 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Activities.Presentation.PropertyEditing.PropertyEntry get_Item(string propertyName)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void ReportCategoryException(string message)
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [mscorlib]'System.Collections.Generic.IEnumerator`1'<class System.Activities.Presentation.PropertyEditing.PropertyEntry> 'System.Collections.Generic.IEnumerable<System.Activities.Presentation.PropertyEditing.PropertyEntry>.GetEnumerator'()
		{
			.override method instance class [mscorlib]'System.Collections.Generic.IEnumerator`1'<!0> class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.PropertyEditing.PropertyEntry>::GetEnumerator()
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			.override [mscorlib]System.Collections.IEnumerable::GetEnumerator
			ret
		}
		.method public hidebysig 
			instance void AddCategoryEditor(class System.Activities.Presentation.PropertyEditing.CategoryEditor categoryEditor)
		{
			ret
		}
		.method public hidebysig 
			instance void RemoveCategoryEditor(class [mscorlib]System.Type categoryEditor)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void ApplyFilter(class System.Activities.Presentation.PropertyEditing.PropertyFilter 'filter')
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool MatchesPredicate(class System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate predicate)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance bool DoesPropertyMatchFilter(class System.Activities.Presentation.PropertyEditing.PropertyFilter 'filter', class System.Activities.Presentation.PropertyEditing.PropertyEntry 'property')
		{
			ret
		}
		.property instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.PropertyEditing.PropertyEntry> AdvancedProperties()
		{
			.get instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.PropertyEditing.PropertyEntry> System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.CategoryBase::get_AdvancedProperties()
		}
		.property instance bool AdvancedPropertyMatchesFilter()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.CategoryBase::get_AdvancedPropertyMatchesFilter()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.CategoryBase::set_AdvancedPropertyMatchesFilter(bool)
		}
		.property instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.PropertyEditing.PropertyEntry> BasicProperties()
		{
			.get instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.PropertyEditing.PropertyEntry> System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.CategoryBase::get_BasicProperties()
		}
		.property instance bool BasicPropertyMatchesFilter()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.CategoryBase::get_BasicPropertyMatchesFilter()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.CategoryBase::set_BasicPropertyMatchesFilter(bool)
		}
		.property instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.PropertyEditing.CategoryEditor> CategoryEditors()
		{
			.get instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.PropertyEditing.CategoryEditor> System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.CategoryBase::get_CategoryEditors()
		}
		.property instance class [PresentationCore]System.Windows.Media.ImageSource CategoryIcon()
		{
			.get instance class [PresentationCore]System.Windows.Media.ImageSource System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.CategoryBase::get_CategoryIcon()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.CategoryBase::set_CategoryIcon(class [PresentationCore]System.Windows.Media.ImageSource)
		}
		.property instance class System.Activities.Presentation.PropertyEditing.PropertyEntry Item(string)
		{
			.get instance class System.Activities.Presentation.PropertyEditing.PropertyEntry System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.CategoryBase::get_Item(string)
		}
		.property instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.PropertyEditing.PropertyEntry> Properties()
		{
			.get instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.PropertyEditing.PropertyEntry> System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.CategoryBase::get_Properties()
		}
		.property instance class [mscorlib]System.IComparable SortOrdering()
		{
			.get instance class [mscorlib]System.IComparable System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.CategoryBase::get_SortOrdering()
		}
	}
	.class private CategoryContainer
		extends [PresentationFramework]System.Windows.Controls.ContentControl
		implements [System.Xaml]System.Windows.Markup.IComponentConnector
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(bool initializeComponent)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.PropertyEditing.CategoryEditor> get_BasicCategoryEditors()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.PropertyEditing.CategoryEditor> get_AdvancedCategoryEditors()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.PropertyEditing.PropertyEntry> get_UnconsumedBasicProperties()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.PropertyEditing.PropertyEntry> get_UnconsumedAdvancedProperties()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.CategoryBase get_Category()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Category(class System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.CategoryBase 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_Expanded()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Expanded(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_AdvancedSectionPinned()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_AdvancedSectionPinned(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_BasicPropertyMatchesFilter()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BasicPropertyMatchesFilter(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_AdvancedPropertyMatchesFilter()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_AdvancedPropertyMatchesFilter(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_ShowAdvancedHeader()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ShowAdvancedHeader(bool 'value')
		{
			ret
		}
		.method public static hidebysig 
			void SetOwningCategoryContainer(class [WindowsBase]System.Windows.DependencyObject dependencyObject, class System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.CategoryContainer 'value')
		{
			ret
		}
		.method public static hidebysig 
			class System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.CategoryContainer GetOwningCategoryContainer(class [WindowsBase]System.Windows.DependencyObject dependencyObject)
		{
			ret
		}
		.method public static hidebysig 
			class [PresentationFramework]System.Windows.Controls.Primitives.Popup GetPopupHost(class [WindowsBase]System.Windows.DependencyObject target)
		{
			ret
		}
		.method public static hidebysig 
			void SetPopupHost(class [WindowsBase]System.Windows.DependencyObject target, class [PresentationFramework]System.Windows.Controls.Primitives.Popup 'value')
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void AddProperty(class System.Activities.Presentation.PropertyEditing.PropertyEntry 'property', class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.PropertyEditing.PropertyEntry> unconsumedProperties, class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.PropertyEditing.PropertyEntry> referenceOrder, class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.PropertyEditing.CategoryEditor> categoryEditors)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnInitialized(class [mscorlib]System.EventArgs e)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void InitializeComponent()
		{
			ret
		}
		.method assembly hidebysig 
			instance class [mscorlib]System.Delegate _CreateDelegate(class [mscorlib]System.Type delegateType, string 'handler')
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Windows.Markup.IComponentConnector.Connect(int32 connectionId, object target)
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.override [System.Xaml]System.Windows.Markup.IComponentConnector::Connect
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty AdvancedPropertyMatchesFilterProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty AdvancedSectionPinnedProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty BasicPropertyMatchesFilterProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty CategoryProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ExpandedProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty OwningCategoryContainerProperty
		.field assembly class [PresentationFramework]System.Windows.Controls.Border PaletteBGrec
		.field assembly class [PresentationFramework]System.Windows.Controls.Expander PopupHost
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty PopupHostProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ShowAdvancedHeaderProperty
		.field assembly class System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.CategoryContainer UserControlSelf
		.field assembly class System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.CategoryLayoutContainer _advancedEditors
		.field assembly class System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.StandardCategoryLayout _advancedProperties
		.field assembly class System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.CategoryLayoutContainer _basicEditors
		.field assembly class System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.StandardCategoryLayout _basicProperties
		.property instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.PropertyEditing.CategoryEditor> AdvancedCategoryEditors()
		{
			.get instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.PropertyEditing.CategoryEditor> System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.CategoryContainer::get_AdvancedCategoryEditors()
		}
		.property instance bool AdvancedPropertyMatchesFilter()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.CategoryContainer::get_AdvancedPropertyMatchesFilter()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.CategoryContainer::set_AdvancedPropertyMatchesFilter(bool)
		}
		.property instance bool AdvancedSectionPinned()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.CategoryContainer::get_AdvancedSectionPinned()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.CategoryContainer::set_AdvancedSectionPinned(bool)
		}
		.property instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.PropertyEditing.CategoryEditor> BasicCategoryEditors()
		{
			.get instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.PropertyEditing.CategoryEditor> System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.CategoryContainer::get_BasicCategoryEditors()
		}
		.property instance bool BasicPropertyMatchesFilter()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.CategoryContainer::get_BasicPropertyMatchesFilter()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.CategoryContainer::set_BasicPropertyMatchesFilter(bool)
		}
		.property instance class System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.CategoryBase Category()
		{
			.get instance class System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.CategoryBase System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.CategoryContainer::get_Category()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.CategoryContainer::set_Category(class System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.CategoryBase)
		}
		.property instance bool Expanded()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.CategoryContainer::get_Expanded()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.CategoryContainer::set_Expanded(bool)
		}
		.property instance bool ShowAdvancedHeader()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.CategoryContainer::get_ShowAdvancedHeader()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.CategoryContainer::set_ShowAdvancedHeader(bool)
		}
		.property instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.PropertyEditing.PropertyEntry> UnconsumedAdvancedProperties()
		{
			.get instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.PropertyEditing.PropertyEntry> System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.CategoryContainer::get_UnconsumedAdvancedProperties()
		}
		.property instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.PropertyEditing.PropertyEntry> UnconsumedBasicProperties()
		{
			.get instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.PropertyEditing.PropertyEntry> System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.CategoryContainer::get_UnconsumedBasicProperties()
		}
	}
	.class private abstract sealed CategoryContainerCommands
		extends [mscorlib]System.Object
	{
		.method public static hidebysig specialname 
			class [PresentationCore]System.Windows.Input.RoutedCommand get_TogglePinAdvancedProperties()
		{
			ret
		}
		.method public static hidebysig specialname 
			class [PresentationCore]System.Windows.Input.RoutedCommand get_UpdateCategoryExpansionState()
		{
			ret
		}
		.property class [PresentationCore]System.Windows.Input.RoutedCommand TogglePinAdvancedProperties()
		{
			.get class [PresentationCore]System.Windows.Input.RoutedCommand System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.CategoryContainerCommands::get_TogglePinAdvancedProperties()
		}
		.property class [PresentationCore]System.Windows.Input.RoutedCommand UpdateCategoryExpansionState()
		{
			.get class [PresentationCore]System.Windows.Input.RoutedCommand System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.CategoryContainerCommands::get_UpdateCategoryExpansionState()
		}
	}
	.class private CategoryLayoutContainer
		extends [PresentationFramework]System.Windows.Controls.ItemsControl
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void PrepareContainerForItemOverride(class [WindowsBase]System.Windows.DependencyObject element, object item)
		{
			ret
		}
	}
	.class private abstract sealed ExtensibilityMetadataHelper
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			class System.Activities.Presentation.PropertyEditing.PropertyValueEditor GetValueEditor(class [mscorlib]System.Collections.IEnumerable attributes, class System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.IMessageLogger exceptionLogger)
		{
			ret
		}
		.method public static hidebysig 
			class [mscorlib]System.Type GetCategoryEditorType(class [System]System.ComponentModel.EditorAttribute attribute, class System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.IMessageLogger exceptionLogger)
		{
			ret
		}
		.method public static hidebysig 
			string GetExceptionMessage(class [mscorlib]System.Exception e)
		{
			ret
		}
		.method public static hidebysig 
			bool IsEditorReusable(class [mscorlib]System.Collections.IEnumerable attributes)
		{
			ret
		}
	}
	.class private interface abstract IPropertyInspector
	{
		.method public virtual hidebysig newslot abstract 
			instance bool IsCategoryExpanded(string categoryName)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void UpdateTransaction()
		{
		}
	}
	.class private NewItemFactoryTypeModel
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type 'type', class System.Activities.Presentation.PropertyEditing.NewItemFactory factory)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type 'type', class System.Activities.Presentation.PropertyEditing.NewItemFactory factory, class System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.IMessageLogger exceptionLogger)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_DisplayName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Type get_Type()
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_Image()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [WindowsBase]System.Windows.Size get_DesiredSize()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_DesiredSize(valuetype [WindowsBase]System.Windows.Size 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.PropertyEditing.NewItemFactory get_ItemFactory()
		{
			ret
		}
		.method public hidebysig 
			instance object CreateInstance()
		{
			ret
		}
		.method public virtual hidebysig 
			instance string ToString()
		{
			ret
		}
		.property instance valuetype [WindowsBase]System.Windows.Size DesiredSize()
		{
			.get instance valuetype [WindowsBase]System.Windows.Size System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.NewItemFactoryTypeModel::get_DesiredSize()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.NewItemFactoryTypeModel::set_DesiredSize(valuetype [WindowsBase]System.Windows.Size)
		}
		.property instance string DisplayName()
		{
			.get instance string System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.NewItemFactoryTypeModel::get_DisplayName()
		}
		.property instance object Image()
		{
			.get instance object System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.NewItemFactoryTypeModel::get_Image()
		}
		.property instance class System.Activities.Presentation.PropertyEditing.NewItemFactory ItemFactory()
		{
			.get instance class System.Activities.Presentation.PropertyEditing.NewItemFactory System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.NewItemFactoryTypeModel::get_ItemFactory()
		}
		.property instance class [mscorlib]System.Type Type()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.NewItemFactoryTypeModel::get_Type()
		}
	}
	.class private PropertyContainerPopup
		extends System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.Controls.WorkaroundPopup
	{
		.method public static hidebysig specialname 
			class [PresentationFramework]System.Windows.Controls.Primitives.CustomPopupPlacementCallback get_RightAlignedPopupPlacement()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnOpened(class [mscorlib]System.EventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnClosed(class [mscorlib]System.EventArgs e)
		{
			ret
		}
		.method public static hidebysig 
			valuetype [PresentationFramework]System.Windows.Controls.Primitives.CustomPopupPlacement[] RightAlignedPopupPlacementCallback(valuetype [WindowsBase]System.Windows.Size popupSize, valuetype [WindowsBase]System.Windows.Size targetSize, valuetype [WindowsBase]System.Windows.Point offset)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.field static public initonly class [PresentationCore]System.Windows.Input.RoutedCommand OnBeginExtendedEdit
		.field static public initonly class [PresentationCore]System.Windows.Input.RoutedCommand OnEndExtendedEdit
		.property class [PresentationFramework]System.Windows.Controls.Primitives.CustomPopupPlacementCallback RightAlignedPopupPlacement()
		{
			.get class [PresentationFramework]System.Windows.Controls.Primitives.CustomPopupPlacementCallback System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.PropertyContainerPopup::get_RightAlignedPopupPlacement()
		}
	}
	.class private PropertyInspectorHelper
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			void SetOwningPropertyInspectorModel(class [WindowsBase]System.Windows.DependencyObject dependencyObject, class System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.IPropertyInspector 'value')
		{
			ret
		}
		.method public static hidebysig 
			class System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.IPropertyInspector GetOwningPropertyInspectorModel(class [WindowsBase]System.Windows.DependencyObject dependencyObject)
		{
			ret
		}
		.method public static hidebysig 
			void SetOwningPropertyInspectorElement(class [WindowsBase]System.Windows.DependencyObject dependencyObject, class [PresentationCore]System.Windows.UIElement 'value')
		{
			ret
		}
		.method public static hidebysig 
			class [PresentationCore]System.Windows.UIElement GetOwningPropertyInspectorElement(class [WindowsBase]System.Windows.DependencyObject dependencyObject)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty OwningPropertyInspectorElementProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty OwningPropertyInspectorModelProperty
	}
	.class private StandardCategoryLayout
		extends [PresentationFramework]System.Windows.Controls.ItemsControl
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family virtual hidebysig 
			instance class [WindowsBase]System.Windows.DependencyObject GetContainerForItemOverride()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void PrepareContainerForItemOverride(class [WindowsBase]System.Windows.DependencyObject element, object item)
		{
			ret
		}
	}
}
.namespace System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.UserInterface
{
	.class private FocusScopeManager
		extends [mscorlib]System.Object
	{
		.method public static hidebysig specialname 
			class System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.UserInterface.FocusScopeManager get_Instance()
		{
			ret
		}
		.method public static hidebysig specialname 
			bool get_HasInstance()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.UserInterface.ReturnFocusCallback get_ReturnFocusCallback()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ReturnFocusCallback(class System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.UserInterface.ReturnFocusCallback 'value')
		{
			ret
		}
		.method public static hidebysig 
			void SetFocusToFocusScope(class [PresentationCore]System.Windows.IInputElement newFocus)
		{
			ret
		}
		.method public static hidebysig 
			void DenyNextFocusChange()
		{
			ret
		}
		.method public static hidebysig 
			void SetFocusScopePriority(class [WindowsBase]System.Windows.DependencyObject element, int32 'value')
		{
			ret
		}
		.method public static hidebysig 
			int32 GetFocusScopePriority(class [WindowsBase]System.Windows.DependencyObject element)
		{
			ret
		}
		.method public static hidebysig 
			void SetAllowedFocus(class [WindowsBase]System.Windows.DependencyObject element, bool 'value')
		{
			ret
		}
		.method public static hidebysig 
			bool GetAllowedFocus(class [WindowsBase]System.Windows.DependencyObject element)
		{
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty AllowedFocusProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty FocusScopePriorityProperty
		.property bool HasInstance()
		{
			.get bool System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.UserInterface.FocusScopeManager::get_HasInstance()
		}
		.property class System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.UserInterface.FocusScopeManager Instance()
		{
			.get class System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.UserInterface.FocusScopeManager System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.UserInterface.FocusScopeManager::get_Instance()
		}
		.property instance class System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.UserInterface.ReturnFocusCallback ReturnFocusCallback()
		{
			.get instance class System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.UserInterface.ReturnFocusCallback System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.UserInterface.FocusScopeManager::get_ReturnFocusCallback()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.UserInterface.FocusScopeManager::set_ReturnFocusCallback(class System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.UserInterface.ReturnFocusCallback)
		}
	}
	.class private sealed ReturnFocusCallback
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke()
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
}
.namespace System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors
{
	.class private ChoiceEditor
		extends [PresentationFramework]System.Windows.Controls.Control
		implements [System]System.ComponentModel.INotifyPropertyChanged, System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.IIconProvider
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance object get_Value()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Value(object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ValueIndex()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ValueIndex(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Collections.IEnumerable get_ItemsSource()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ItemsSource(class [mscorlib]System.Collections.IEnumerable 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System]System.ComponentModel.TypeConverter get_Converter()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Converter(class [System]System.ComponentModel.TypeConverter 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditorViewType get_ViewType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ViewType(valuetype System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditorViewType 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsEditable()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsEditable(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_IconResourcePrefix()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IconResourcePrefix(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_IconResourceSuffix()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IconResourceSuffix(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsNinched()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsNinched(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_ShowFullControl()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ShowFullControl(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationFramework]System.Windows.DataTemplate get_ItemTemplate()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ItemTemplate(class [PresentationFramework]System.Windows.DataTemplate 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationFramework]System.Windows.Controls.DataTemplateSelector get_ItemTemplateSelector()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ItemTemplateSelector(class [PresentationFramework]System.Windows.Controls.DataTemplateSelector 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_UseItemTemplateForSelection()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_UseItemTemplateForSelection(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_BorderCornerRadius()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BorderCornerRadius(float64 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [PresentationFramework]System.Windows.Thickness get_DropButtonInset()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_DropButtonInset(valuetype [PresentationFramework]System.Windows.Thickness 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [PresentationFramework]System.Windows.Thickness get_TextAreaInset()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_TextAreaInset(valuetype [PresentationFramework]System.Windows.Thickness 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationCore]System.Windows.Media.Brush get_DropButtonBrush()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_DropButtonBrush(class [PresentationCore]System.Windows.Media.Brush 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_InnerCornerRadius()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_InnerCornerRadius(float64 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationCore]System.Windows.Media.ImageSource get_ButtonIcon()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ButtonIcon(class [PresentationCore]System.Windows.Media.ImageSource 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_IconWidth()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IconWidth(float64 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_IconHeight()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IconHeight(float64 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System]System.Windows.Input.ICommand get_BeginCommand()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BeginCommand(class [System]System.Windows.Input.ICommand 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System]System.Windows.Input.ICommand get_UpdateCommand()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_UpdateCommand(class [System]System.Windows.Input.ICommand 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System]System.Windows.Input.ICommand get_CancelCommand()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_CancelCommand(class [System]System.Windows.Input.ICommand 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System]System.Windows.Input.ICommand get_CommitCommand()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_CommitCommand(class [System]System.Windows.Input.ICommand 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System]System.Windows.Input.ICommand get_FinishEditingCommand()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_FinishEditingCommand(class [System]System.Windows.Input.ICommand 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationCore]System.Windows.Input.Cursor get_ComboBoxLoadingCursor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ComboBoxLoadingCursor(class [PresentationCore]System.Windows.Input.Cursor 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System]System.Windows.Input.ICommand get_NextValueCommand()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System]System.Windows.Input.ICommand get_PreviousValueCommand()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_ForceBinding()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ForceBinding(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_InternalValue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_InternalValue(object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_InternalStringValue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_InternalStringValue(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_InternalIsSelectingValue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_InternalIsSelectingValue(bool 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void SelectNextValue()
		{
			ret
		}
		.method public hidebysig 
			instance void SelectPreviousValue()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [PresentationCore]System.Windows.Media.ImageSource GetIconAsImageSource(object key, object parameter)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnPreviewGotKeyboardFocus(class [PresentationCore]System.Windows.Input.KeyboardFocusChangedEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnPreviewKeyDown(class [PresentationCore]System.Windows.Input.KeyEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnLostKeyboardFocus(class [PresentationCore]System.Windows.Input.KeyboardFocusChangedEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnPreviewLostKeyboardFocus(class [PresentationCore]System.Windows.Input.KeyboardFocusChangedEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnRender(class [PresentationCore]System.Windows.Media.DrawingContext drawingContext)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnTemplateChanged(class [PresentationFramework]System.Windows.Controls.ControlTemplate oldTemplate, class [PresentationFramework]System.Windows.Controls.ControlTemplate newTemplate)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void OnApplyTemplate()
		{
			ret
		}
		.method family hidebysig 
			instance void UpdateInternalValuesFromValue()
		{
			ret
		}
		.method public hidebysig 
			instance void UpdateInternalValuesFromValueIndex()
		{
			ret
		}
		.method family hidebysig 
			instance bool UpdateValueFromInternalValues()
		{
			ret
		}
		.method family hidebysig 
			instance void BeginNoCommitInternalValueChangeBlock()
		{
			ret
		}
		.method family hidebysig 
			instance void EndNoCommitInternalValueChangeBlock()
		{
			ret
		}
		.method family hidebysig 
			instance void BeginNoCommitInternalStringValueChangeBlock()
		{
			ret
		}
		.method family hidebysig 
			instance void EndNoCommitInternalStringValueChangeBlock()
		{
			ret
		}
		.method family hidebysig 
			instance void BeginIgnoreExternalValueChangeBlock()
		{
			ret
		}
		.method family hidebysig 
			instance void EndIgnoreExternalValueChangeBlock()
		{
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty BeginCommandProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty BorderCornerRadiusProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ButtonIconProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty CancelCommandProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ComboBoxLoadingCursorProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty CommitCommandProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ConverterProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty DropButtonBrushProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty DropButtonInsetProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty FinishEditingCommandProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ForceBindingProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty IconHeightProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty IconResourcePrefixProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty IconResourceSuffixProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty IconWidthProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty InnerCornerRadiusProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty IsEditableProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty IsNinchedProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ItemTemplateProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ItemTemplateSelectorProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ItemsSourceProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ShowFullControlProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty TextAreaInsetProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty UpdateCommandProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty UseItemTemplateForSelectionProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ValueIndexProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ValueProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ViewTypeProperty
		.event [System]System.ComponentModel.PropertyChangedEventHandler PropertyChanged
		{
			.addon instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
			.removeon instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
		}
		.property instance class [System]System.Windows.Input.ICommand BeginCommand()
		{
			.get instance class [System]System.Windows.Input.ICommand System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::get_BeginCommand()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::set_BeginCommand(class [System]System.Windows.Input.ICommand)
		}
		.property instance float64 BorderCornerRadius()
		{
			.get instance float64 System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::get_BorderCornerRadius()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::set_BorderCornerRadius(float64)
		}
		.property instance class [PresentationCore]System.Windows.Media.ImageSource ButtonIcon()
		{
			.get instance class [PresentationCore]System.Windows.Media.ImageSource System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::get_ButtonIcon()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::set_ButtonIcon(class [PresentationCore]System.Windows.Media.ImageSource)
		}
		.property instance class [System]System.Windows.Input.ICommand CancelCommand()
		{
			.get instance class [System]System.Windows.Input.ICommand System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::get_CancelCommand()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::set_CancelCommand(class [System]System.Windows.Input.ICommand)
		}
		.property instance class [PresentationCore]System.Windows.Input.Cursor ComboBoxLoadingCursor()
		{
			.get instance class [PresentationCore]System.Windows.Input.Cursor System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::get_ComboBoxLoadingCursor()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::set_ComboBoxLoadingCursor(class [PresentationCore]System.Windows.Input.Cursor)
		}
		.property instance class [System]System.Windows.Input.ICommand CommitCommand()
		{
			.get instance class [System]System.Windows.Input.ICommand System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::get_CommitCommand()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::set_CommitCommand(class [System]System.Windows.Input.ICommand)
		}
		.property instance class [System]System.ComponentModel.TypeConverter Converter()
		{
			.get instance class [System]System.ComponentModel.TypeConverter System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::get_Converter()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::set_Converter(class [System]System.ComponentModel.TypeConverter)
		}
		.property instance class [PresentationCore]System.Windows.Media.Brush DropButtonBrush()
		{
			.get instance class [PresentationCore]System.Windows.Media.Brush System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::get_DropButtonBrush()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::set_DropButtonBrush(class [PresentationCore]System.Windows.Media.Brush)
		}
		.property instance valuetype [PresentationFramework]System.Windows.Thickness DropButtonInset()
		{
			.get instance valuetype [PresentationFramework]System.Windows.Thickness System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::get_DropButtonInset()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::set_DropButtonInset(valuetype [PresentationFramework]System.Windows.Thickness)
		}
		.property instance class [System]System.Windows.Input.ICommand FinishEditingCommand()
		{
			.get instance class [System]System.Windows.Input.ICommand System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::get_FinishEditingCommand()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::set_FinishEditingCommand(class [System]System.Windows.Input.ICommand)
		}
		.property instance bool ForceBinding()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::get_ForceBinding()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::set_ForceBinding(bool)
		}
		.property instance float64 IconHeight()
		{
			.get instance float64 System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::get_IconHeight()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::set_IconHeight(float64)
		}
		.property instance string IconResourcePrefix()
		{
			.get instance string System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::get_IconResourcePrefix()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::set_IconResourcePrefix(string)
		}
		.property instance string IconResourceSuffix()
		{
			.get instance string System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::get_IconResourceSuffix()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::set_IconResourceSuffix(string)
		}
		.property instance float64 IconWidth()
		{
			.get instance float64 System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::get_IconWidth()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::set_IconWidth(float64)
		}
		.property instance float64 InnerCornerRadius()
		{
			.get instance float64 System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::get_InnerCornerRadius()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::set_InnerCornerRadius(float64)
		}
		.property instance bool InternalIsSelectingValue()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::get_InternalIsSelectingValue()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::set_InternalIsSelectingValue(bool)
		}
		.property instance string InternalStringValue()
		{
			.get instance string System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::get_InternalStringValue()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::set_InternalStringValue(string)
		}
		.property instance object InternalValue()
		{
			.get instance object System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::get_InternalValue()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::set_InternalValue(object)
		}
		.property instance bool IsEditable()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::get_IsEditable()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::set_IsEditable(bool)
		}
		.property instance bool IsNinched()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::get_IsNinched()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::set_IsNinched(bool)
		}
		.property instance class [PresentationFramework]System.Windows.DataTemplate ItemTemplate()
		{
			.get instance class [PresentationFramework]System.Windows.DataTemplate System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::get_ItemTemplate()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::set_ItemTemplate(class [PresentationFramework]System.Windows.DataTemplate)
		}
		.property instance class [PresentationFramework]System.Windows.Controls.DataTemplateSelector ItemTemplateSelector()
		{
			.get instance class [PresentationFramework]System.Windows.Controls.DataTemplateSelector System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::get_ItemTemplateSelector()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::set_ItemTemplateSelector(class [PresentationFramework]System.Windows.Controls.DataTemplateSelector)
		}
		.property instance class [mscorlib]System.Collections.IEnumerable ItemsSource()
		{
			.get instance class [mscorlib]System.Collections.IEnumerable System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::get_ItemsSource()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::set_ItemsSource(class [mscorlib]System.Collections.IEnumerable)
		}
		.property instance class [System]System.Windows.Input.ICommand NextValueCommand()
		{
			.get instance class [System]System.Windows.Input.ICommand System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::get_NextValueCommand()
		}
		.property instance class [System]System.Windows.Input.ICommand PreviousValueCommand()
		{
			.get instance class [System]System.Windows.Input.ICommand System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::get_PreviousValueCommand()
		}
		.property instance bool ShowFullControl()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::get_ShowFullControl()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::set_ShowFullControl(bool)
		}
		.property instance valuetype [PresentationFramework]System.Windows.Thickness TextAreaInset()
		{
			.get instance valuetype [PresentationFramework]System.Windows.Thickness System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::get_TextAreaInset()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::set_TextAreaInset(valuetype [PresentationFramework]System.Windows.Thickness)
		}
		.property instance class [System]System.Windows.Input.ICommand UpdateCommand()
		{
			.get instance class [System]System.Windows.Input.ICommand System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::get_UpdateCommand()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::set_UpdateCommand(class [System]System.Windows.Input.ICommand)
		}
		.property instance bool UseItemTemplateForSelection()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::get_UseItemTemplateForSelection()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::set_UseItemTemplateForSelection(bool)
		}
		.property instance object Value()
		{
			.get instance object System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::get_Value()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::set_Value(object)
		}
		.property instance int32 ValueIndex()
		{
			.get instance int32 System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::get_ValueIndex()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::set_ValueIndex(int32)
		}
		.property instance valuetype System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditorViewType ViewType()
		{
			.get instance valuetype System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditorViewType System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::get_ViewType()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditor::set_ViewType(valuetype System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditorViewType)
		}
	}
	.class private sealed ChoiceEditorViewType
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditorViewType Buttons = int32(0x00000001)
		.field static public literal valuetype System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditorViewType Combo = int32(0x00000000)
		.field static public literal valuetype System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditorViewType Toggle = int32(0x00000003)
		.field static public literal valuetype System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.ChoiceEditorViewType ToggleButtons = int32(0x00000002)
	}
	.class private interface abstract IIconProvider
	{
		.method public virtual hidebysig newslot abstract 
			instance class [PresentationCore]System.Windows.Media.ImageSource GetIconAsImageSource(object key, object parameter)
		{
		}
	}
	.class private sealed RenderUtils
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			bool DrawInscribedRoundedRect(class [PresentationCore]System.Windows.Media.DrawingContext drawingContext, class [PresentationCore]System.Windows.Media.Brush fill, class [PresentationCore]System.Windows.Media.Pen stroke, valuetype [WindowsBase]System.Windows.Rect outerBounds, float64 cornerRadius)
		{
			ret
		}
		.method public static hidebysig 
			valuetype [WindowsBase]System.Windows.Rect CalculateInnerRect(valuetype [WindowsBase]System.Windows.Rect outerBounds, float64 strokeThickness)
		{
			ret
		}
	}
	.class private StringEditor
		extends [PresentationFramework]System.Windows.Controls.TextBox
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Value()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Value(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsNinched()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsNinched(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_AutomationName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_AutomationName(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsEditing()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsEditing(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_CornerRadius()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_CornerRadius(float64 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_BorderWidth()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BorderWidth(float64 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System]System.Windows.Input.ICommand get_BeginCommand()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BeginCommand(class [System]System.Windows.Input.ICommand 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System]System.Windows.Input.ICommand get_CommitCommand()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_CommitCommand(class [System]System.Windows.Input.ICommand 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System]System.Windows.Input.ICommand get_CancelCommand()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_CancelCommand(class [System]System.Windows.Input.ICommand 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System]System.Windows.Input.ICommand get_FinishEditingCommand()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_FinishEditingCommand(class [System]System.Windows.Input.ICommand 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System]System.Windows.Input.ICommand get_LostFocusCommand()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LostFocusCommand(class [System]System.Windows.Input.ICommand 'value')
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnGotFocus(class [PresentationCore]System.Windows.RoutedEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnGotKeyboardFocus(class [PresentationCore]System.Windows.Input.KeyboardFocusChangedEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnPreviewLostKeyboardFocus(class [PresentationCore]System.Windows.Input.KeyboardFocusChangedEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnLostKeyboardFocus(class [PresentationCore]System.Windows.Input.KeyboardFocusChangedEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnLostFocus(class [PresentationCore]System.Windows.RoutedEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnTextChanged(class [PresentationFramework]System.Windows.Controls.TextChangedEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnKeyDown(class [PresentationCore]System.Windows.Input.KeyEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnInitialized(class [mscorlib]System.EventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnRender(class [PresentationCore]System.Windows.Media.DrawingContext drawingContext)
		{
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty AutomationNameProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty BeginCommandProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty BorderWidthProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty CancelCommandProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty CommitCommandProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty CornerRadiusProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty FinishEditingCommandProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty IsEditingProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty IsNinchedProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty LostFocusCommandProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ValueProperty
		.property instance string AutomationName()
		{
			.get instance string System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.StringEditor::get_AutomationName()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.StringEditor::set_AutomationName(string)
		}
		.property instance class [System]System.Windows.Input.ICommand BeginCommand()
		{
			.get instance class [System]System.Windows.Input.ICommand System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.StringEditor::get_BeginCommand()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.StringEditor::set_BeginCommand(class [System]System.Windows.Input.ICommand)
		}
		.property instance float64 BorderWidth()
		{
			.get instance float64 System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.StringEditor::get_BorderWidth()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.StringEditor::set_BorderWidth(float64)
		}
		.property instance class [System]System.Windows.Input.ICommand CancelCommand()
		{
			.get instance class [System]System.Windows.Input.ICommand System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.StringEditor::get_CancelCommand()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.StringEditor::set_CancelCommand(class [System]System.Windows.Input.ICommand)
		}
		.property instance class [System]System.Windows.Input.ICommand CommitCommand()
		{
			.get instance class [System]System.Windows.Input.ICommand System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.StringEditor::get_CommitCommand()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.StringEditor::set_CommitCommand(class [System]System.Windows.Input.ICommand)
		}
		.property instance float64 CornerRadius()
		{
			.get instance float64 System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.StringEditor::get_CornerRadius()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.StringEditor::set_CornerRadius(float64)
		}
		.property instance class [System]System.Windows.Input.ICommand FinishEditingCommand()
		{
			.get instance class [System]System.Windows.Input.ICommand System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.StringEditor::get_FinishEditingCommand()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.StringEditor::set_FinishEditingCommand(class [System]System.Windows.Input.ICommand)
		}
		.property instance bool IsEditing()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.StringEditor::get_IsEditing()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.StringEditor::set_IsEditing(bool)
		}
		.property instance bool IsNinched()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.StringEditor::get_IsNinched()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.StringEditor::set_IsNinched(bool)
		}
		.property instance class [System]System.Windows.Input.ICommand LostFocusCommand()
		{
			.get instance class [System]System.Windows.Input.ICommand System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.StringEditor::get_LostFocusCommand()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.StringEditor::set_LostFocusCommand(class [System]System.Windows.Input.ICommand)
		}
		.property instance string Value()
		{
			.get instance string System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.StringEditor::get_Value()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.StringEditor::set_Value(string)
		}
	}
	.class private sealed UpdateBindingType
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.UpdateBindingType Both = int32(0x00000002)
		.field static public literal valuetype System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.UpdateBindingType Source = int32(0x00000000)
		.field static public literal valuetype System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.UpdateBindingType Target = int32(0x00000001)
	}
	.class private abstract sealed ValueEditorUtils
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			bool GetHandlesCommitKeys(class [WindowsBase]System.Windows.DependencyObject dependencyObject)
		{
			ret
		}
		.method public static hidebysig 
			void SetHandlesCommitKeys(class [WindowsBase]System.Windows.DependencyObject dependencyObject, bool 'value')
		{
			ret
		}
		.method public static hidebysig 
			void UpdateBinding(class [PresentationFramework]System.Windows.FrameworkElement element, class [WindowsBase]System.Windows.DependencyProperty 'property', bool updateSource)
		{
			ret
		}
		.method public static hidebysig 
			void UpdateBinding(class [PresentationFramework]System.Windows.FrameworkElement element, class [WindowsBase]System.Windows.DependencyProperty 'property', valuetype System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.ValueEditors.UpdateBindingType updateType)
		{
			ret
		}
		.method public static hidebysig 
			void ExecuteCommand(class [System]System.Windows.Input.ICommand command, class [PresentationCore]System.Windows.IInputElement element, object parameter)
		{
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty HandlesCommitKeysProperty
	}
	.class private ValueToIconConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IMultiValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object[] values, class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object[] ConvertBack(object 'value', class [mscorlib]System.Type[] targetTypes, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
}
.namespace System.Activities.Presentation.Internal.PropertyEditing.Metadata
{
	.class private abstract sealed PropertyInspectorMetadata
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			void Initialize()
		{
			ret
		}
	}
}
.namespace System.Activities.Presentation.Internal.PropertyEditing.Model
{
	.class private ModelCategoryEntry
		extends System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.PropertyInspector.CategoryBase
		implements [System]System.Collections.Specialized.INotifyCollectionChanged
	{
		.method public hidebysig specialname 
			instance void .ctor(string categoryName)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_CollectionChanged(class [System]System.Collections.Specialized.NotifyCollectionChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_CollectionChanged(class [System]System.Collections.Specialized.NotifyCollectionChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.PropertyEditing.PropertyEntry> get_AdvancedProperties()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.PropertyEditing.PropertyEntry> get_BasicProperties()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance bool get_IsEmpty()
		{
			ret
		}
		.method assembly hidebysig 
			instance class 'System.Activities.Presentation.Internal.PropertyEditing.FromExpression.Framework.Data.ObservableCollectionWorkaround`1'<class System.Activities.Presentation.PropertyEditing.PropertyEntry> GetBucket(class System.Activities.Presentation.PropertyEditing.PropertyEntry 'property')
		{
			ret
		}
		.method assembly hidebysig 
			instance void Add(class System.Activities.Presentation.PropertyEditing.PropertyEntry 'property', class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.PropertyEditing.PropertyEntry> bucket, class [mscorlib]'System.Collections.Generic.IComparer`1'<class System.Activities.Presentation.PropertyEditing.PropertyEntry> comparer)
		{
			ret
		}
		.method assembly hidebysig 
			instance void Refresh(class System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyEntry 'property', class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.PropertyEditing.PropertyEntry> bucket, class [mscorlib]'System.Collections.Generic.IComparer`1'<class System.Activities.Presentation.PropertyEditing.PropertyEntry> sortComparer)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void ApplyFilter(class System.Activities.Presentation.PropertyEditing.PropertyFilter 'filter')
		{
			ret
		}
		.method family virtual hidebysig 
			instance bool DoesPropertyMatchFilter(class System.Activities.Presentation.PropertyEditing.PropertyFilter 'filter', class System.Activities.Presentation.PropertyEditing.PropertyEntry 'property')
		{
			ret
		}
		.method assembly hidebysig 
			instance void MarkAllPropertiesDisassociated()
		{
			ret
		}
		.method assembly hidebysig 
			instance void MarkAttachedPropertiesDisassociated()
		{
			ret
		}
		.method assembly hidebysig 
			instance void CullDisassociatedProperties()
		{
			ret
		}
		.event [System]System.Collections.Specialized.NotifyCollectionChangedEventHandler CollectionChanged
		{
			.addon instance void System.Activities.Presentation.Internal.PropertyEditing.Model.ModelCategoryEntry::add_CollectionChanged(class [System]System.Collections.Specialized.NotifyCollectionChangedEventHandler)
			.removeon instance void System.Activities.Presentation.Internal.PropertyEditing.Model.ModelCategoryEntry::remove_CollectionChanged(class [System]System.Collections.Specialized.NotifyCollectionChangedEventHandler)
		}
		.property instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.PropertyEditing.PropertyEntry> AdvancedProperties()
		{
			.get instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.PropertyEditing.PropertyEntry> System.Activities.Presentation.Internal.PropertyEditing.Model.ModelCategoryEntry::get_AdvancedProperties()
		}
		.property instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.PropertyEditing.PropertyEntry> BasicProperties()
		{
			.get instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.PropertyEditing.PropertyEntry> System.Activities.Presentation.Internal.PropertyEditing.Model.ModelCategoryEntry::get_BasicProperties()
		}
		.property instance bool IsEmpty()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.Model.ModelCategoryEntry::get_IsEmpty()
		}
	}
	.class private ModelPropertyEntry
		extends System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyEntryBase
		implements [mscorlib]System.IComparable
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.Model.ModelProperty 'property', class System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyValue parentValue)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelProperty> propertySet, class System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyValue parentValue)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_PropertyName()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_DisplayName()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]System.Type get_PropertyType()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_CategoryName()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Description()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_IsReadOnly()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_IsAdvanced()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsBrowsable()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]System.Collections.ICollection get_StandardValues()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_StandardValuesExclusive()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Activities.Presentation.PropertyEditing.PropertyValueEditor get_PropertyValueEditor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [System]System.ComponentModel.TypeConverter get_Converter()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]System.Type get_CommonValueType()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_IsMixedValue()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Activities.Presentation.PropertyEditing.PropertyValueSource get_Source()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Activities.Presentation.PropertyEditing.PropertyEntryCollection get_SubProperties()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Activities.Presentation.PropertyEditing.PropertyValueCollection get_Collection()
		{
			ret
		}
		.method assembly virtual hidebysig strict specialname 
			instance bool get_CollectionInstanceExists()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.ICollection`1'<class System.Activities.Presentation.Model.ModelProperty> get_ModelPropertySet()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelProperty get_FirstModelProperty()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class System.Activities.Presentation.PropertyEditing.PropertyOrder get_PropertyOrder()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance bool get_Disassociated()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_Disassociated(bool 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance bool get_IsAttached()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class [mscorlib]System.Type> get_CategoryEditorTypes()
		{
			ret
		}
		.method family virtual hidebysig specialname 
			instance bool get_HasStandardValues()
		{
			ret
		}
		.method public hidebysig 
			instance void SetUnderlyingModelProperty(class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelProperty> propertySet)
		{
			ret
		}
		.method assembly hidebysig 
			instance void Disconnect()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void RefreshCache()
		{
			ret
		}
		.method public virtual hidebysig 
			instance object GetValueCore()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void SetValueCore(object 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance void ClearValue()
		{
			ret
		}
		.method assembly hidebysig 
			instance void OnUnderlyingModelChanged()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnUnderlyingSubModelChangedCore()
		{
			ret
		}
		.method family virtual hidebysig 
			instance class System.Activities.Presentation.PropertyEditing.PropertyValue CreatePropertyValueInstance()
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance class System.Activities.Presentation.Model.ModelEditingScope BeginEdit(string description)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool MatchesPredicate(class System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate predicate)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance int32 CompareTo(object obj)
		{
			ret
		}
		.method public virtual hidebysig 
			instance string ToString()
		{
			ret
		}
		.property instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class [mscorlib]System.Type> CategoryEditorTypes()
		{
			.get instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class [mscorlib]System.Type> System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyEntry::get_CategoryEditorTypes()
		}
		.property instance string CategoryName()
		{
			.get instance string System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyEntry::get_CategoryName()
		}
		.property instance class System.Activities.Presentation.PropertyEditing.PropertyValueCollection Collection()
		{
			.get instance class System.Activities.Presentation.PropertyEditing.PropertyValueCollection System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyEntry::get_Collection()
		}
		.property instance bool CollectionInstanceExists()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyEntry::get_CollectionInstanceExists()
		}
		.property instance class [mscorlib]System.Type CommonValueType()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyEntry::get_CommonValueType()
		}
		.property instance class [System]System.ComponentModel.TypeConverter Converter()
		{
			.get instance class [System]System.ComponentModel.TypeConverter System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyEntry::get_Converter()
		}
		.property instance string Description()
		{
			.get instance string System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyEntry::get_Description()
		}
		.property instance bool Disassociated()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyEntry::get_Disassociated()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyEntry::set_Disassociated(bool)
		}
		.property instance string DisplayName()
		{
			.get instance string System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyEntry::get_DisplayName()
		}
		.property instance class System.Activities.Presentation.Model.ModelProperty FirstModelProperty()
		{
			.get instance class System.Activities.Presentation.Model.ModelProperty System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyEntry::get_FirstModelProperty()
		}
		.property instance bool HasStandardValues()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyEntry::get_HasStandardValues()
		}
		.property instance bool IsAdvanced()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyEntry::get_IsAdvanced()
		}
		.property instance bool IsAttached()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyEntry::get_IsAttached()
		}
		.property instance bool IsBrowsable()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyEntry::get_IsBrowsable()
		}
		.property instance bool IsMixedValue()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyEntry::get_IsMixedValue()
		}
		.property instance bool IsReadOnly()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyEntry::get_IsReadOnly()
		}
		.property instance class [mscorlib]'System.Collections.Generic.ICollection`1'<class System.Activities.Presentation.Model.ModelProperty> ModelPropertySet()
		{
			.get instance class [mscorlib]'System.Collections.Generic.ICollection`1'<class System.Activities.Presentation.Model.ModelProperty> System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyEntry::get_ModelPropertySet()
		}
		.property instance string PropertyName()
		{
			.get instance string System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyEntry::get_PropertyName()
		}
		.property instance class System.Activities.Presentation.PropertyEditing.PropertyOrder PropertyOrder()
		{
			.get instance class System.Activities.Presentation.PropertyEditing.PropertyOrder System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyEntry::get_PropertyOrder()
		}
		.property instance class [mscorlib]System.Type PropertyType()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyEntry::get_PropertyType()
		}
		.property instance class System.Activities.Presentation.PropertyEditing.PropertyValueEditor PropertyValueEditor()
		{
			.get instance class System.Activities.Presentation.PropertyEditing.PropertyValueEditor System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyEntry::get_PropertyValueEditor()
		}
		.property instance class System.Activities.Presentation.PropertyEditing.PropertyValueSource Source()
		{
			.get instance class System.Activities.Presentation.PropertyEditing.PropertyValueSource System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyEntry::get_Source()
		}
		.property instance class [mscorlib]System.Collections.ICollection StandardValues()
		{
			.get instance class [mscorlib]System.Collections.ICollection System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyEntry::get_StandardValues()
		}
		.property instance bool StandardValuesExclusive()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyEntry::get_StandardValuesExclusive()
		}
		.property instance class System.Activities.Presentation.PropertyEditing.PropertyEntryCollection SubProperties()
		{
			.get instance class System.Activities.Presentation.PropertyEditing.PropertyEntryCollection System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyEntry::get_SubProperties()
		}
	}
	.class private abstract ModelPropertyEntryBase
		extends System.Activities.Presentation.PropertyEditing.PropertyEntry
	{
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.PropertyEditing.PropertyValue parentValue)
		{
			ret
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.Activities.Presentation.PropertyEditing.PropertyValueSource get_Source()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_IsMixedValue()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class [mscorlib]System.Type get_CommonValueType()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class [System]System.ComponentModel.TypeConverter get_Converter()
		{
		}
		.method public hidebysig specialname 
			instance bool get_HasSubProperties()
		{
			ret
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.Activities.Presentation.PropertyEditing.PropertyEntryCollection get_SubProperties()
		{
		}
		.method public hidebysig specialname 
			instance bool get_IsCollection()
		{
			ret
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.Activities.Presentation.PropertyEditing.PropertyValueCollection get_Collection()
		{
		}
		.method public virtual hidebysig newslot specialname 
			instance int32 get_Depth()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_SubPropertyHierarchyPath()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance bool get_IsMarkupExtension()
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict abstract specialname 
			instance bool get_CollectionInstanceExists()
		{
		}
		.method family hidebysig specialname 
			instance class System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyValue get_ModelPropertyValue()
		{
			ret
		}
		.method public virtual hidebysig newslot abstract 
			instance object GetValueCore()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetValueCore(object 'value')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void ClearValue()
		{
		}
		.method public hidebysig 
			instance void OnUnderlyingSubModelChanged()
		{
			ret
		}
		.method family virtual hidebysig newslot abstract 
			instance void OnUnderlyingSubModelChangedCore()
		{
		}
		.method family virtual hidebysig newslot 
			instance void RefreshCache()
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict abstract 
			instance class System.Activities.Presentation.Model.ModelEditingScope BeginEdit(string description)
		{
		}
		.property instance class System.Activities.Presentation.PropertyEditing.PropertyValueCollection Collection()
		{
			.get instance class System.Activities.Presentation.PropertyEditing.PropertyValueCollection System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyEntryBase::get_Collection()
		}
		.property instance bool CollectionInstanceExists()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyEntryBase::get_CollectionInstanceExists()
		}
		.property instance class [mscorlib]System.Type CommonValueType()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyEntryBase::get_CommonValueType()
		}
		.property instance class [System]System.ComponentModel.TypeConverter Converter()
		{
			.get instance class [System]System.ComponentModel.TypeConverter System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyEntryBase::get_Converter()
		}
		.property instance int32 Depth()
		{
			.get instance int32 System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyEntryBase::get_Depth()
		}
		.property instance bool HasSubProperties()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyEntryBase::get_HasSubProperties()
		}
		.property instance bool IsCollection()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyEntryBase::get_IsCollection()
		}
		.property instance bool IsMarkupExtension()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyEntryBase::get_IsMarkupExtension()
		}
		.property instance bool IsMixedValue()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyEntryBase::get_IsMixedValue()
		}
		.property instance class System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyValue ModelPropertyValue()
		{
			.get instance class System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyValue System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyEntryBase::get_ModelPropertyValue()
		}
		.property instance class System.Activities.Presentation.PropertyEditing.PropertyValueSource Source()
		{
			.get instance class System.Activities.Presentation.PropertyEditing.PropertyValueSource System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyEntryBase::get_Source()
		}
		.property instance class System.Activities.Presentation.PropertyEditing.PropertyEntryCollection SubProperties()
		{
			.get instance class System.Activities.Presentation.PropertyEditing.PropertyEntryCollection System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyEntryBase::get_SubProperties()
		}
		.property instance string SubPropertyHierarchyPath()
		{
			.get instance string System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyEntryBase::get_SubPropertyHierarchyPath()
		}
	}
	.class private ModelPropertyEntryCollection
		extends System.Activities.Presentation.PropertyEditing.PropertyEntryCollection
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = { string('Item') }
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyEntry parentProperty)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyIndexer parentProperty)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance int32 get_Count()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Activities.Presentation.PropertyEditing.PropertyEntry get_Item(string propertyName)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]'System.Collections.Generic.IEnumerator`1'<class System.Activities.Presentation.PropertyEditing.PropertyEntry> GetEnumerator()
		{
			ret
		}
		.property instance int32 Count()
		{
			.get instance int32 System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyEntryCollection::get_Count()
		}
		.property instance class System.Activities.Presentation.PropertyEditing.PropertyEntry Item(string)
		{
			.get instance class System.Activities.Presentation.PropertyEditing.PropertyEntry System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyEntryCollection::get_Item(string)
		}
	}
	.class private ModelPropertyIndexer
		extends System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyEntryBase
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.Model.ModelItem modelItem, int32 index, class System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyValueCollection parentCollection)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Index()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_Index(int32 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_CategoryName()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Description()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_IsAdvanced()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_IsReadOnly()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_PropertyName()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]System.Type get_PropertyType()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Activities.Presentation.PropertyEditing.PropertyValueEditor get_PropertyValueEditor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]System.Collections.ICollection get_StandardValues()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_IsMixedValue()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Activities.Presentation.PropertyEditing.PropertyValueSource get_Source()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [System]System.ComponentModel.TypeConverter get_Converter()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]System.Type get_CommonValueType()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Activities.Presentation.PropertyEditing.PropertyEntryCollection get_SubProperties()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Activities.Presentation.PropertyEditing.PropertyValueCollection get_Collection()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance int32 get_Depth()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_ModelItem()
		{
			ret
		}
		.method assembly virtual hidebysig strict specialname 
			instance bool get_CollectionInstanceExists()
		{
			ret
		}
		.method family virtual hidebysig 
			instance class System.Activities.Presentation.PropertyEditing.PropertyValue CreatePropertyValueInstance()
		{
			ret
		}
		.method public virtual hidebysig 
			instance object GetValueCore()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void SetValueCore(object 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance void ClearValue()
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance class System.Activities.Presentation.Model.ModelEditingScope BeginEdit(string description)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnUnderlyingSubModelChangedCore()
		{
			ret
		}
		.property instance string CategoryName()
		{
			.get instance string System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyIndexer::get_CategoryName()
		}
		.property instance class System.Activities.Presentation.PropertyEditing.PropertyValueCollection Collection()
		{
			.get instance class System.Activities.Presentation.PropertyEditing.PropertyValueCollection System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyIndexer::get_Collection()
		}
		.property instance bool CollectionInstanceExists()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyIndexer::get_CollectionInstanceExists()
		}
		.property instance class [mscorlib]System.Type CommonValueType()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyIndexer::get_CommonValueType()
		}
		.property instance class [System]System.ComponentModel.TypeConverter Converter()
		{
			.get instance class [System]System.ComponentModel.TypeConverter System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyIndexer::get_Converter()
		}
		.property instance int32 Depth()
		{
			.get instance int32 System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyIndexer::get_Depth()
		}
		.property instance string Description()
		{
			.get instance string System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyIndexer::get_Description()
		}
		.property instance int32 Index()
		{
			.get instance int32 System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyIndexer::get_Index()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyIndexer::set_Index(int32)
		}
		.property instance bool IsAdvanced()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyIndexer::get_IsAdvanced()
		}
		.property instance bool IsMixedValue()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyIndexer::get_IsMixedValue()
		}
		.property instance bool IsReadOnly()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyIndexer::get_IsReadOnly()
		}
		.property instance class System.Activities.Presentation.Model.ModelItem ModelItem()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyIndexer::get_ModelItem()
		}
		.property instance string PropertyName()
		{
			.get instance string System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyIndexer::get_PropertyName()
		}
		.property instance class [mscorlib]System.Type PropertyType()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyIndexer::get_PropertyType()
		}
		.property instance class System.Activities.Presentation.PropertyEditing.PropertyValueEditor PropertyValueEditor()
		{
			.get instance class System.Activities.Presentation.PropertyEditing.PropertyValueEditor System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyIndexer::get_PropertyValueEditor()
		}
		.property instance class System.Activities.Presentation.PropertyEditing.PropertyValueSource Source()
		{
			.get instance class System.Activities.Presentation.PropertyEditing.PropertyValueSource System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyIndexer::get_Source()
		}
		.property instance class [mscorlib]System.Collections.ICollection StandardValues()
		{
			.get instance class [mscorlib]System.Collections.ICollection System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyIndexer::get_StandardValues()
		}
		.property instance class System.Activities.Presentation.PropertyEditing.PropertyEntryCollection SubProperties()
		{
			.get instance class System.Activities.Presentation.PropertyEditing.PropertyEntryCollection System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyIndexer::get_SubProperties()
		}
	}
	.class private abstract sealed ModelPropertyMerger
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class [mscorlib]'System.Collections.Generic.IList`1'<class System.Activities.Presentation.Model.ModelProperty>> GetMergedProperties(class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> items, int32 itemCount)
		{
			ret
		}
		.method public static hidebysig 
			class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class [mscorlib]'System.Collections.Generic.IList`1'<class System.Activities.Presentation.Model.ModelProperty>> GetMergedSubProperties(class [mscorlib]'System.Collections.Generic.ICollection`1'<class System.Activities.Presentation.Model.ModelProperty> parentProperties)
		{
			ret
		}
		.method public static hidebysig 
			string GetMergedDefaultProperty(class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> items)
		{
			ret
		}
	}
	.class private ModelPropertyValue
		extends System.Activities.Presentation.PropertyEditing.PropertyValue
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyEntryBase parentProperty)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Activities.Presentation.PropertyEditing.PropertyValueSource get_Source()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_IsDefaultValue()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_IsMixedValue()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_CanConvertFromString()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_HasSubProperties()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Activities.Presentation.PropertyEditing.PropertyEntryCollection get_SubProperties()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_IsCollection()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Activities.Presentation.PropertyEditing.PropertyValueCollection get_Collection()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.PropertyEditing.PropertyValue get_NameSensitiveInstance()
		{
			ret
		}
		.method family virtual hidebysig specialname 
			instance bool get_CatchExceptions()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void ValidateValue(object valueToValidate)
		{
			ret
		}
		.method assembly hidebysig 
			instance void OnNameSubPropertyChanged()
		{
			ret
		}
		.method family virtual hidebysig 
			instance object ConvertStringToValue(string stringToConvert)
		{
			ret
		}
		.method family virtual hidebysig 
			instance string ConvertValueToString(object valueToConvert)
		{
			ret
		}
		.method family virtual hidebysig 
			instance object GetValueCore()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void SetValueCore(object 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance void ClearValue()
		{
			ret
		}
		.method public hidebysig 
			instance void OnUnderlyingModelChanged()
		{
			ret
		}
		.method public hidebysig 
			instance void OnUnderlyingSubModelChanged()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnPropertyValueException(class System.Activities.Presentation.PropertyEditing.PropertyValueExceptionEventArgs e)
		{
			ret
		}
		.method public virtual hidebysig 
			instance string ToString()
		{
			ret
		}
		.property instance bool CanConvertFromString()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyValue::get_CanConvertFromString()
		}
		.property instance bool CatchExceptions()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyValue::get_CatchExceptions()
		}
		.property instance class System.Activities.Presentation.PropertyEditing.PropertyValueCollection Collection()
		{
			.get instance class System.Activities.Presentation.PropertyEditing.PropertyValueCollection System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyValue::get_Collection()
		}
		.property instance bool HasSubProperties()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyValue::get_HasSubProperties()
		}
		.property instance bool IsCollection()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyValue::get_IsCollection()
		}
		.property instance bool IsDefaultValue()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyValue::get_IsDefaultValue()
		}
		.property instance bool IsMixedValue()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyValue::get_IsMixedValue()
		}
		.property instance class System.Activities.Presentation.PropertyEditing.PropertyValue NameSensitiveInstance()
		{
			.get instance class System.Activities.Presentation.PropertyEditing.PropertyValue System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyValue::get_NameSensitiveInstance()
		}
		.property instance class System.Activities.Presentation.PropertyEditing.PropertyValueSource Source()
		{
			.get instance class System.Activities.Presentation.PropertyEditing.PropertyValueSource System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyValue::get_Source()
		}
		.property instance class System.Activities.Presentation.PropertyEditing.PropertyEntryCollection SubProperties()
		{
			.get instance class System.Activities.Presentation.PropertyEditing.PropertyEntryCollection System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyValue::get_SubProperties()
		}
	}
	.class private ModelPropertyValueCollection
		extends System.Activities.Presentation.PropertyEditing.PropertyValueCollection
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = { string('Item') }
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyValue parentValue)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance int32 get_Count()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Activities.Presentation.PropertyEditing.PropertyValue get_Item(int32 index)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class System.Activities.Presentation.PropertyEditing.PropertyValue Add(object 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance class System.Activities.Presentation.PropertyEditing.PropertyValue Insert(object 'value', int32 index)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Remove(class System.Activities.Presentation.PropertyEditing.PropertyValue propertyValue)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void RemoveAt(int32 index)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void SetIndex(int32 currentIndex, int32 newIndex)
		{
			ret
		}
		.method assembly hidebysig 
			instance class System.Activities.Presentation.Model.ModelItemCollection GetRawCollection()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]'System.Collections.Generic.IEnumerator`1'<class System.Activities.Presentation.PropertyEditing.PropertyValue> GetEnumerator()
		{
			ret
		}
		.property instance int32 Count()
		{
			.get instance int32 System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyValueCollection::get_Count()
		}
		.property instance class System.Activities.Presentation.PropertyEditing.PropertyValue Item(int32)
		{
			.get instance class System.Activities.Presentation.PropertyEditing.PropertyValue System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyValueCollection::get_Item(int32)
		}
	}
	.class private abstract sealed ModelUtilities
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			class [mscorlib]System.Type GetPropertyType(class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelProperty> propertySet)
		{
			ret
		}
		.method public static hidebysig 
			bool AreEquivalent(class System.Activities.Presentation.Model.ModelProperty a, class System.Activities.Presentation.Model.ModelProperty b)
		{
			ret
		}
		.method public static hidebysig 
			object GetSafeRawValue(class System.Activities.Presentation.Model.ModelProperty 'property')
		{
			ret
		}
		.method public static hidebysig 
			object GetSafeComputedValue(class System.Activities.Presentation.Model.ModelProperty 'property')
		{
			ret
		}
		.method public static hidebysig 
			string GetPropertyName(class System.Activities.Presentation.PropertyEditing.PropertyValue propertyValue)
		{
			ret
		}
		.method public static hidebysig 
			string GetSubPropertyHierarchyPath(class System.Activities.Presentation.PropertyEditing.PropertyEntry 'property')
		{
			ret
		}
		.method public static hidebysig 
			string GetCachedSubPropertyHierarchyPath(class System.Activities.Presentation.PropertyEditing.PropertyEntry 'property')
		{
			ret
		}
		.method public static hidebysig 
			bool ImplementsIList(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public static hidebysig 
			bool ImplementsICollection(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public static hidebysig 
			class [mscorlib]System.Type GetCommonAncestor(class [mscorlib]System.Type t1, class [mscorlib]System.Type t2)
		{
			ret
		}
	}
	.class private PropertyEntryNameComparer
		extends [mscorlib]System.Object
		implements [mscorlib]System.Collections.IComparer, class [mscorlib]'System.Collections.Generic.IComparer`1'<class System.Activities.Presentation.PropertyEditing.PropertyEntry>
	{
		.method public final virtual hidebysig newslot 
			instance int32 Compare(class System.Activities.Presentation.PropertyEditing.PropertyEntry x, class System.Activities.Presentation.PropertyEditing.PropertyEntry y)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance int32 Compare(object x, object y)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.field static public initonly class System.Activities.Presentation.Internal.PropertyEditing.Model.PropertyEntryNameComparer Instance
	}
	.class private PropertyEntryPropertyOrderComparer
		extends [mscorlib]System.Object
		implements [mscorlib]System.Collections.IComparer, class [mscorlib]'System.Collections.Generic.IComparer`1'<class System.Activities.Presentation.PropertyEditing.PropertyEntry>
	{
		.method public static hidebysig specialname 
			class System.Activities.Presentation.Internal.PropertyEditing.Model.PropertyEntryPropertyOrderComparer get_Instance()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance int32 Compare(object x, object y)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance int32 Compare(class System.Activities.Presentation.PropertyEditing.PropertyEntry x, class System.Activities.Presentation.PropertyEditing.PropertyEntry y)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property class System.Activities.Presentation.Internal.PropertyEditing.Model.PropertyEntryPropertyOrderComparer Instance()
		{
			.get class System.Activities.Presentation.Internal.PropertyEditing.Model.PropertyEntryPropertyOrderComparer System.Activities.Presentation.Internal.PropertyEditing.Model.PropertyEntryPropertyOrderComparer::get_Instance()
		}
	}
}
.namespace System.Activities.Presentation.Internal.PropertyEditing.Resources
{
	.class private PropertyInspectorResources
		extends [mscorlib]System.Object
	{
		.method public static hidebysig specialname 
			string get_DefaultCollectionStringValue()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_NamePropertyHeader()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_PropertyEditing_AlphabeticalCaption()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_PropertyEditing_CategorizedCaption()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_PropertyEditing_ClearButtonCaption()
		{
			ret
		}
		.method public static hidebysig 
			class [PresentationFramework]System.Windows.ResourceDictionary GetResources()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property string DefaultCollectionStringValue()
		{
			.get string System.Activities.Presentation.Internal.PropertyEditing.Resources.PropertyInspectorResources::get_DefaultCollectionStringValue()
		}
		.property string NamePropertyHeader()
		{
			.get string System.Activities.Presentation.Internal.PropertyEditing.Resources.PropertyInspectorResources::get_NamePropertyHeader()
		}
		.property string PropertyEditing_AlphabeticalCaption()
		{
			.get string System.Activities.Presentation.Internal.PropertyEditing.Resources.PropertyInspectorResources::get_PropertyEditing_AlphabeticalCaption()
		}
		.property string PropertyEditing_CategorizedCaption()
		{
			.get string System.Activities.Presentation.Internal.PropertyEditing.Resources.PropertyInspectorResources::get_PropertyEditing_CategorizedCaption()
		}
		.property string PropertyEditing_ClearButtonCaption()
		{
			.get string System.Activities.Presentation.Internal.PropertyEditing.Resources.PropertyInspectorResources::get_PropertyEditing_ClearButtonCaption()
		}
	}
	.class private abstract sealed ResourceUtilities
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			float64 GetDouble(class [PresentationFramework]System.Windows.FrameworkElement element, string key, float64 fallbackValue)
		{
			ret
		}
		.method public static hidebysig 
			valuetype [WindowsBase]System.Windows.Size GetDesiredTypeIconSize(class [PresentationFramework]System.Windows.FrameworkElement queryRoot)
		{
			ret
		}
	}
}
.namespace System.Activities.Presentation.Internal.PropertyEditing.Selection
{
	.class private CategoryContainerSelectionPathInterpreter
		extends [mscorlib]System.Object
		implements System.Activities.Presentation.Internal.PropertyEditing.Selection.ISelectionPathInterpreter
	{
		.method public static hidebysig specialname 
			class System.Activities.Presentation.Internal.PropertyEditing.Selection.CategoryContainerSelectionPathInterpreter get_Instance()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance string get_PathTypeId()
		{
			ret
		}
		.method public hidebysig 
			instance class System.Activities.Presentation.Internal.PropertyEditing.Selection.SelectionPath ConstructSelectionPath(string categoryName, bool isAdvanced)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [WindowsBase]System.Windows.DependencyObject ResolveSelectionPath(class System.Activities.Presentation.Internal.PropertyEditing.CategoryList root, class System.Activities.Presentation.Internal.PropertyEditing.Selection.SelectionPath path, [out] bool& pendingGeneration)
		{
			ret
		}
		.property class System.Activities.Presentation.Internal.PropertyEditing.Selection.CategoryContainerSelectionPathInterpreter Instance()
		{
			.get class System.Activities.Presentation.Internal.PropertyEditing.Selection.CategoryContainerSelectionPathInterpreter System.Activities.Presentation.Internal.PropertyEditing.Selection.CategoryContainerSelectionPathInterpreter::get_Instance()
		}
		.property instance string PathTypeId()
		{
			.get instance string System.Activities.Presentation.Internal.PropertyEditing.Selection.CategoryContainerSelectionPathInterpreter::get_PathTypeId()
		}
	}
	.class private CategoryEditorSelectionPathInterpreter
		extends [mscorlib]System.Object
		implements System.Activities.Presentation.Internal.PropertyEditing.Selection.ISelectionPathInterpreter
	{
		.method public static hidebysig specialname 
			class System.Activities.Presentation.Internal.PropertyEditing.Selection.CategoryEditorSelectionPathInterpreter get_Instance()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance string get_PathTypeId()
		{
			ret
		}
		.method public hidebysig 
			instance class System.Activities.Presentation.Internal.PropertyEditing.Selection.SelectionPath ConstructSelectionPath(string editorTypeName)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [WindowsBase]System.Windows.DependencyObject ResolveSelectionPath(class System.Activities.Presentation.Internal.PropertyEditing.CategoryList root, class System.Activities.Presentation.Internal.PropertyEditing.Selection.SelectionPath path, [out] bool& pendingGeneration)
		{
			ret
		}
		.property class System.Activities.Presentation.Internal.PropertyEditing.Selection.CategoryEditorSelectionPathInterpreter Instance()
		{
			.get class System.Activities.Presentation.Internal.PropertyEditing.Selection.CategoryEditorSelectionPathInterpreter System.Activities.Presentation.Internal.PropertyEditing.Selection.CategoryEditorSelectionPathInterpreter::get_Instance()
		}
		.property instance string PathTypeId()
		{
			.get instance string System.Activities.Presentation.Internal.PropertyEditing.Selection.CategoryEditorSelectionPathInterpreter::get_PathTypeId()
		}
	}
	.class private CategoryEditorSelectionStop
		extends [mscorlib]System.Object
		implements System.Activities.Presentation.Internal.PropertyEditing.Selection.ISelectionStop
	{
		.method public hidebysig specialname 
			instance void .ctor(string editorTypeName)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_IsExpanded()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_IsExpanded(bool 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_IsExpandable()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance class System.Activities.Presentation.Internal.PropertyEditing.Selection.SelectionPath get_Path()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance string get_Description()
		{
			ret
		}
		.property instance string Description()
		{
			.get instance string System.Activities.Presentation.Internal.PropertyEditing.Selection.CategoryEditorSelectionStop::get_Description()
		}
		.property instance bool IsExpandable()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.Selection.CategoryEditorSelectionStop::get_IsExpandable()
		}
		.property instance bool IsExpanded()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.Selection.CategoryEditorSelectionStop::get_IsExpanded()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.Selection.CategoryEditorSelectionStop::set_IsExpanded(bool)
		}
		.property instance class System.Activities.Presentation.Internal.PropertyEditing.Selection.SelectionPath Path()
		{
			.get instance class System.Activities.Presentation.Internal.PropertyEditing.Selection.SelectionPath System.Activities.Presentation.Internal.PropertyEditing.Selection.CategoryEditorSelectionStop::get_Path()
		}
	}
	.class private CategorySelectionStop
		extends [mscorlib]System.Object
		implements System.Activities.Presentation.Internal.PropertyEditing.Selection.ISelectionStop
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.Internal.PropertyEditing.CiderCategoryContainer parent, bool isAdvanced)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_IsExpanded()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_IsExpanded(bool 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_IsExpandable()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance class System.Activities.Presentation.Internal.PropertyEditing.Selection.SelectionPath get_Path()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance string get_Description()
		{
			ret
		}
		.property instance string Description()
		{
			.get instance string System.Activities.Presentation.Internal.PropertyEditing.Selection.CategorySelectionStop::get_Description()
		}
		.property instance bool IsExpandable()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.Selection.CategorySelectionStop::get_IsExpandable()
		}
		.property instance bool IsExpanded()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.Selection.CategorySelectionStop::get_IsExpanded()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.Selection.CategorySelectionStop::set_IsExpanded(bool)
		}
		.property instance class System.Activities.Presentation.Internal.PropertyEditing.Selection.SelectionPath Path()
		{
			.get instance class System.Activities.Presentation.Internal.PropertyEditing.Selection.SelectionPath System.Activities.Presentation.Internal.PropertyEditing.Selection.CategorySelectionStop::get_Path()
		}
	}
	.class private interface abstract ISelectionPathInterpreter
	{
		.method public virtual hidebysig newslot abstract specialname 
			instance string get_PathTypeId()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [WindowsBase]System.Windows.DependencyObject ResolveSelectionPath(class System.Activities.Presentation.Internal.PropertyEditing.CategoryList root, class System.Activities.Presentation.Internal.PropertyEditing.Selection.SelectionPath path, [out] bool& pendingGeneration)
		{
		}
		.property instance string PathTypeId()
		{
			.get instance string System.Activities.Presentation.Internal.PropertyEditing.Selection.ISelectionPathInterpreter::get_PathTypeId()
		}
	}
	.class private interface abstract ISelectionStop
	{
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_IsExpanded()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void set_IsExpanded(bool 'value')
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_IsExpandable()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.Activities.Presentation.Internal.PropertyEditing.Selection.SelectionPath get_Path()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance string get_Description()
		{
		}
		.property instance string Description()
		{
			.get instance string System.Activities.Presentation.Internal.PropertyEditing.Selection.ISelectionStop::get_Description()
		}
		.property instance bool IsExpandable()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.Selection.ISelectionStop::get_IsExpandable()
		}
		.property instance bool IsExpanded()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.Selection.ISelectionStop::get_IsExpanded()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.Selection.ISelectionStop::set_IsExpanded(bool)
		}
		.property instance class System.Activities.Presentation.Internal.PropertyEditing.Selection.SelectionPath Path()
		{
			.get instance class System.Activities.Presentation.Internal.PropertyEditing.Selection.SelectionPath System.Activities.Presentation.Internal.PropertyEditing.Selection.ISelectionStop::get_Path()
		}
	}
	.class private abstract sealed PropertySelection
		extends [mscorlib]System.Object
	{
		.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
		.method assembly static hidebysig 
			bool GetIsSelected(class [WindowsBase]System.Windows.DependencyObject obj)
		{
			ret
		}
		.method assembly static hidebysig 
			void SetIsSelected(class [WindowsBase]System.Windows.DependencyObject obj, bool 'value')
		{
			ret
		}
		.method assembly static hidebysig 
			class System.Activities.Presentation.Internal.PropertyEditing.Selection.ISelectionStop GetSelectionStop(class [WindowsBase]System.Windows.DependencyObject obj)
		{
			ret
		}
		.method assembly static hidebysig 
			void SetSelectionStop(class [WindowsBase]System.Windows.DependencyObject obj, class System.Activities.Presentation.Internal.PropertyEditing.Selection.ISelectionStop 'value')
		{
			ret
		}
		.method assembly static hidebysig 
			void ClearSelectionStop(class [WindowsBase]System.Windows.DependencyObject obj)
		{
			ret
		}
		.method assembly static hidebysig 
			bool GetIsSelectionStopDoubleClickTarget(class [WindowsBase]System.Windows.DependencyObject obj)
		{
			ret
		}
		.method assembly static hidebysig 
			void SetIsSelectionStopDoubleClickTarget(class [WindowsBase]System.Windows.DependencyObject obj, bool 'value')
		{
			ret
		}
		.method assembly static hidebysig 
			void ClearIsSelectionStopDoubleClickTarget(class [WindowsBase]System.Windows.DependencyObject obj)
		{
			ret
		}
		.method assembly static hidebysig 
			bool GetIsSelectionScope(class [WindowsBase]System.Windows.DependencyObject obj)
		{
			ret
		}
		.method assembly static hidebysig 
			void SetIsSelectionScope(class [WindowsBase]System.Windows.DependencyObject obj, bool 'value')
		{
			ret
		}
		.method assembly static hidebysig 
			class [PresentationFramework]System.Windows.FrameworkElement GetKeyDownTarget(class [WindowsBase]System.Windows.DependencyObject obj)
		{
			ret
		}
		.method assembly static hidebysig 
			void SetKeyDownTarget(class [WindowsBase]System.Windows.DependencyObject obj, class [PresentationFramework]System.Windows.FrameworkElement 'value')
		{
			ret
		}
		.method assembly static hidebysig 
			!!0 FindParentSelectionStop<([WindowsBase]System.Windows.DependencyObject) 'T'>(class [WindowsBase]System.Windows.DependencyObject element)
		{
			ret
		}
		.method assembly static hidebysig 
			!!0 FindNeighborSelectionStop<([WindowsBase]System.Windows.DependencyObject) 'T'>(class [WindowsBase]System.Windows.DependencyObject element, valuetype System.Activities.Presentation.Internal.PropertyEditing.SearchDirection direction)
		{
			ret
		}
		.field static assembly initonly class [WindowsBase]System.Windows.DependencyProperty IsSelectedProperty
		.field static assembly initonly class [WindowsBase]System.Windows.DependencyProperty IsSelectionScopeProperty
		.field static assembly initonly class [WindowsBase]System.Windows.DependencyProperty IsSelectionStopDoubleClickTargetProperty
		.field static assembly initonly class [WindowsBase]System.Windows.DependencyProperty KeyDownTargetProperty
		.field static assembly initonly class [WindowsBase]System.Windows.DependencyProperty SelectionStopProperty
	}
	.class private PropertySelectionPathInterpreter
		extends [mscorlib]System.Object
		implements System.Activities.Presentation.Internal.PropertyEditing.Selection.ISelectionPathInterpreter
	{
		.method public static hidebysig specialname 
			class System.Activities.Presentation.Internal.PropertyEditing.Selection.PropertySelectionPathInterpreter get_Instance()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance string get_PathTypeId()
		{
			ret
		}
		.method public hidebysig 
			instance class System.Activities.Presentation.Internal.PropertyEditing.Selection.SelectionPath ConstructSelectionPath(class System.Activities.Presentation.PropertyEditing.PropertyEntry 'property')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [WindowsBase]System.Windows.DependencyObject ResolveSelectionPath(class System.Activities.Presentation.Internal.PropertyEditing.CategoryList root, class System.Activities.Presentation.Internal.PropertyEditing.Selection.SelectionPath path, [out] bool& pendingGeneration)
		{
			ret
		}
		.field static assembly literal string PropertyPathTypeId = "Cider_PropertyPath"
		.property class System.Activities.Presentation.Internal.PropertyEditing.Selection.PropertySelectionPathInterpreter Instance()
		{
			.get class System.Activities.Presentation.Internal.PropertyEditing.Selection.PropertySelectionPathInterpreter System.Activities.Presentation.Internal.PropertyEditing.Selection.PropertySelectionPathInterpreter::get_Instance()
		}
		.property instance string PathTypeId()
		{
			.get instance string System.Activities.Presentation.Internal.PropertyEditing.Selection.PropertySelectionPathInterpreter::get_PathTypeId()
		}
	}
	.class private PropertySelectionStop
		extends [mscorlib]System.Object
		implements System.Activities.Presentation.Internal.PropertyEditing.Selection.ISelectionStop
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.PropertyEditing.PropertyEntry 'property')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_IsExpanded()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_IsExpanded(bool 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_IsExpandable()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance class System.Activities.Presentation.Internal.PropertyEditing.Selection.SelectionPath get_Path()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance string get_Description()
		{
			ret
		}
		.property instance string Description()
		{
			.get instance string System.Activities.Presentation.Internal.PropertyEditing.Selection.PropertySelectionStop::get_Description()
		}
		.property instance bool IsExpandable()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.Selection.PropertySelectionStop::get_IsExpandable()
		}
		.property instance bool IsExpanded()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.Selection.PropertySelectionStop::get_IsExpanded()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.Selection.PropertySelectionStop::set_IsExpanded(bool)
		}
		.property instance class System.Activities.Presentation.Internal.PropertyEditing.Selection.SelectionPath Path()
		{
			.get instance class System.Activities.Presentation.Internal.PropertyEditing.Selection.SelectionPath System.Activities.Presentation.Internal.PropertyEditing.Selection.PropertySelectionStop::get_Path()
		}
	}
	.class private SelectionPath
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor(string pathTypeId, string path)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_PathTypeId()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Path()
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_State()
		{
			ret
		}
		.method public static hidebysig 
			class System.Activities.Presentation.Internal.PropertyEditing.Selection.SelectionPath FromState(object state)
		{
			ret
		}
		.property instance string Path()
		{
			.get instance string System.Activities.Presentation.Internal.PropertyEditing.Selection.SelectionPath::get_Path()
		}
		.property instance string PathTypeId()
		{
			.get instance string System.Activities.Presentation.Internal.PropertyEditing.Selection.SelectionPath::get_PathTypeId()
		}
		.property instance object State()
		{
			.get instance object System.Activities.Presentation.Internal.PropertyEditing.Selection.SelectionPath::get_State()
		}
	}
	.class private abstract sealed SelectionPathResolver
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			class [WindowsBase]System.Windows.DependencyObject ResolveSelectionPath(class System.Activities.Presentation.Internal.PropertyEditing.CategoryList root, class System.Activities.Presentation.Internal.PropertyEditing.Selection.SelectionPath path, [out] bool& pendingGeneration)
		{
			ret
		}
	}
}
.namespace System.Activities.Presentation.Internal.PropertyEditing.State
{
	.class private AggregateStateContainer
		extends [mscorlib]System.Object
		implements System.Activities.Presentation.Internal.PropertyEditing.State.IStateContainer
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.Internal.PropertyEditing.State.IStateContainer[] containers)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object RetrieveState()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void RestoreState(object state)
		{
			ret
		}
	}
	.class private CategoryState
		extends System.Activities.Presentation.Internal.PropertyEditing.State.PersistedState
	{
		.method public hidebysig specialname 
			instance void .ctor(string categoryName)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance object get_Key()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_IsSignificant()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_CategoryExpanded()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_CategoryExpanded(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_AdvancedSectionExpanded()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_AdvancedSectionExpanded(bool 'value')
		{
			ret
		}
		.method family virtual hidebysig 
			instance string SerializeCore()
		{
			ret
		}
		.method public static hidebysig 
			class System.Activities.Presentation.Internal.PropertyEditing.State.CategoryState Deserialize(string categoryStateString)
		{
			ret
		}
		.property instance bool AdvancedSectionExpanded()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.State.CategoryState::get_AdvancedSectionExpanded()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.State.CategoryState::set_AdvancedSectionExpanded(bool)
		}
		.property instance bool CategoryExpanded()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.State.CategoryState::get_CategoryExpanded()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.State.CategoryState::set_CategoryExpanded(bool)
		}
		.property instance bool IsSignificant()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.State.CategoryState::get_IsSignificant()
		}
		.property instance object Key()
		{
			.get instance object System.Activities.Presentation.Internal.PropertyEditing.State.CategoryState::get_Key()
		}
	}
	.class private CategoryStateContainer
		extends System.Activities.Presentation.Internal.PropertyEditing.State.PersistedStateContainer
	{
		.method public hidebysig 
			instance class System.Activities.Presentation.Internal.PropertyEditing.State.CategoryState GetCategoryState(string categoryName)
		{
			ret
		}
		.method family virtual hidebysig 
			instance class System.Activities.Presentation.Internal.PropertyEditing.State.PersistedState CreateDefaultState(object key)
		{
			ret
		}
		.method family virtual hidebysig 
			instance class System.Activities.Presentation.Internal.PropertyEditing.State.PersistedState DeserializeState(string serializedValue)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private interface abstract IStateContainer
	{
		.method public virtual hidebysig newslot abstract 
			instance object RetrieveState()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void RestoreState(object state)
		{
		}
	}
	.class private abstract PersistedState
		extends [mscorlib]System.Object
	{
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_IsSignificant()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance object get_Key()
		{
		}
		.method public hidebysig 
			instance string Serialize()
		{
			ret
		}
		.method family virtual hidebysig newslot abstract 
			instance string SerializeCore()
		{
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance bool IsSignificant()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.State.PersistedState::get_IsSignificant()
		}
		.property instance object Key()
		{
			.get instance object System.Activities.Presentation.Internal.PropertyEditing.State.PersistedState::get_Key()
		}
	}
	.class private abstract PersistedStateContainer
		extends [mscorlib]System.Object
		implements System.Activities.Presentation.Internal.PropertyEditing.State.IStateContainer
	{
		.method family hidebysig 
			instance class System.Activities.Presentation.Internal.PropertyEditing.State.PersistedState GetState(object key)
		{
			ret
		}
		.method family virtual hidebysig newslot abstract 
			instance class System.Activities.Presentation.Internal.PropertyEditing.State.PersistedState CreateDefaultState(object key)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance class System.Activities.Presentation.Internal.PropertyEditing.State.PersistedState DeserializeState(string serializedValue)
		{
		}
		.method public final virtual hidebysig newslot 
			instance void RestoreState(object state)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object RetrieveState()
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private abstract sealed PersistedStateUtilities
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			string Escape(string s)
		{
			ret
		}
		.method public static hidebysig 
			string Unescape(string s)
		{
			ret
		}
		.method public static hidebysig 
			valuetype [mscorlib]'System.Nullable`1'<bool> DigitToBool(string digit)
		{
			ret
		}
		.method public static hidebysig 
			string BoolToDigit(bool 'value')
		{
			ret
		}
	}
	.class private PropertyActiveEditModeStateContainer
		extends [mscorlib]System.Object
		implements System.Activities.Presentation.Internal.PropertyEditing.State.IStateContainer
	{
		.method public hidebysig 
			instance valuetype System.Activities.Presentation.PropertyEditing.PropertyContainerEditMode GetActiveEditMode(class System.Activities.Presentation.PropertyEditing.PropertyEntry 'property')
		{
			ret
		}
		.method public hidebysig 
			instance void StoreActiveEditMode(class System.Activities.Presentation.PropertyEditing.PropertyEntry 'property', valuetype System.Activities.Presentation.PropertyEditing.PropertyContainerEditMode editMode)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object RetrieveState()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void RestoreState(object state)
		{
			ret
		}
		.field static public initonly class System.Activities.Presentation.Internal.PropertyEditing.State.PropertyActiveEditModeStateContainer Instance
	}
	.class private PropertyState
		extends System.Activities.Presentation.Internal.PropertyEditing.State.PersistedState
	{
		.method public hidebysig specialname 
			instance void .ctor(string propertyName)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance object get_Key()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_IsSignificant()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_SubPropertiesExpanded()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_SubPropertiesExpanded(bool 'value')
		{
			ret
		}
		.method family virtual hidebysig 
			instance string SerializeCore()
		{
			ret
		}
		.method public static hidebysig 
			class System.Activities.Presentation.Internal.PropertyEditing.State.PropertyState Deserialize(string propertyStateString)
		{
			ret
		}
		.property instance bool IsSignificant()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.State.PropertyState::get_IsSignificant()
		}
		.property instance object Key()
		{
			.get instance object System.Activities.Presentation.Internal.PropertyEditing.State.PropertyState::get_Key()
		}
		.property instance bool SubPropertiesExpanded()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.State.PropertyState::get_SubPropertiesExpanded()
			.set instance void System.Activities.Presentation.Internal.PropertyEditing.State.PropertyState::set_SubPropertiesExpanded(bool)
		}
	}
	.class private PropertyViewManagerStateContainer
		extends [mscorlib]System.Object
		implements System.Activities.Presentation.Internal.PropertyEditing.State.IStateContainer
	{
		.method public hidebysig specialname 
			instance void add_ContentRestored(class [mscorlib]System.EventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void remove_ContentRestored(class [mscorlib]System.EventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class System.Activities.Presentation.Internal.PropertyEditing.Views.IPropertyViewManager GetPropertyViewManager(string persistenceId)
		{
			ret
		}
		.method public hidebysig 
			instance void StorePropertyViewManager(string persistenceId, class System.Activities.Presentation.Internal.PropertyEditing.Views.IPropertyViewManager manager)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object RetrieveState()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void RestoreState(object state)
		{
			ret
		}
		.field static public initonly class System.Activities.Presentation.Internal.PropertyEditing.State.PropertyViewManagerStateContainer Instance
		.field static public literal string RootPropertyInspectorPersistenceId = "RootPropertyInspector"
		.event [mscorlib]System.EventHandler ContentRestored
		{
			.addon instance void System.Activities.Presentation.Internal.PropertyEditing.State.PropertyViewManagerStateContainer::add_ContentRestored(class [mscorlib]System.EventHandler)
			.removeon instance void System.Activities.Presentation.Internal.PropertyEditing.State.PropertyViewManagerStateContainer::remove_ContentRestored(class [mscorlib]System.EventHandler)
		}
	}
}
.namespace System.Activities.Presentation.Internal.PropertyEditing.Views
{
	.class private AlphabeticalViewManager
		extends [mscorlib]System.Object
		implements System.Activities.Presentation.Internal.PropertyEditing.Views.IPropertyViewManager
	{
		.method public final virtual hidebysig newslot specialname 
			instance bool get_ShowCategoryHeaders()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyEntry AddProperty(class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelProperty> propertySet, string propertyName, class System.Activities.Presentation.Internal.PropertyEditing.CategoryList categoryList)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [mscorlib]'System.Collections.Generic.Dictionary`2'<class [mscorlib]System.Type,object> GetCategoryEditors(class [mscorlib]System.Type ownerType, class System.Activities.Presentation.Internal.PropertyEditing.CategoryList categoryList)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class System.Activities.Presentation.Internal.PropertyEditing.Selection.SelectionPath GetDefaultSelectionPath(class System.Activities.Presentation.Internal.PropertyEditing.CategoryList categoryList)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance string GetCategoryName(class System.Activities.Presentation.PropertyEditing.PropertyEntry 'property')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void AddProperty(class System.Activities.Presentation.PropertyEditing.PropertyEntry 'property', class System.Activities.Presentation.Internal.PropertyEditing.Model.ModelCategoryEntry category)
		{
			ret
		}
		.field static public initonly class System.Activities.Presentation.Internal.PropertyEditing.Views.AlphabeticalViewManager Instance
		.property instance bool ShowCategoryHeaders()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.Views.AlphabeticalViewManager::get_ShowCategoryHeaders()
		}
	}
	.class private ByCategoryViewManager
		extends [mscorlib]System.Object
		implements System.Activities.Presentation.Internal.PropertyEditing.Views.IPropertyViewManager
	{
		.method public final virtual hidebysig newslot specialname 
			instance bool get_ShowCategoryHeaders()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyEntry AddProperty(class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelProperty> propertySet, string propertyName, class System.Activities.Presentation.Internal.PropertyEditing.CategoryList categoryList)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [mscorlib]'System.Collections.Generic.Dictionary`2'<class [mscorlib]System.Type,object> GetCategoryEditors(class [mscorlib]System.Type ownerType, class System.Activities.Presentation.Internal.PropertyEditing.CategoryList categoryList)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class System.Activities.Presentation.Internal.PropertyEditing.Selection.SelectionPath GetDefaultSelectionPath(class System.Activities.Presentation.Internal.PropertyEditing.CategoryList categoryList)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance string GetCategoryName(class System.Activities.Presentation.PropertyEditing.PropertyEntry 'property')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void AddProperty(class System.Activities.Presentation.PropertyEditing.PropertyEntry 'property', class System.Activities.Presentation.Internal.PropertyEditing.Model.ModelCategoryEntry category)
		{
			ret
		}
		.field static public initonly class System.Activities.Presentation.Internal.PropertyEditing.Views.ByCategoryViewManager Instance
		.property instance bool ShowCategoryHeaders()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.Views.ByCategoryViewManager::get_ShowCategoryHeaders()
		}
	}
	.class private interface abstract IPropertyViewManager
	{
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_ShowCategoryHeaders()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.Activities.Presentation.Internal.PropertyEditing.Model.ModelPropertyEntry AddProperty(class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelProperty> propertySet, string propertyName, class System.Activities.Presentation.Internal.PropertyEditing.CategoryList categoryList)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]'System.Collections.Generic.Dictionary`2'<class [mscorlib]System.Type,object> GetCategoryEditors(class [mscorlib]System.Type ownerType, class System.Activities.Presentation.Internal.PropertyEditing.CategoryList categoryList)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.Activities.Presentation.Internal.PropertyEditing.Selection.SelectionPath GetDefaultSelectionPath(class System.Activities.Presentation.Internal.PropertyEditing.CategoryList categoryList)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance string GetCategoryName(class System.Activities.Presentation.PropertyEditing.PropertyEntry 'property')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void AddProperty(class System.Activities.Presentation.PropertyEditing.PropertyEntry 'property', class System.Activities.Presentation.Internal.PropertyEditing.Model.ModelCategoryEntry category)
		{
		}
		.property instance bool ShowCategoryHeaders()
		{
			.get instance bool System.Activities.Presentation.Internal.PropertyEditing.Views.IPropertyViewManager::get_ShowCategoryHeaders()
		}
	}
}
.namespace System.Activities.Presentation.Metadata
{
	.class public abstract sealed ActivityArgumentHelper
		extends [mscorlib]System.Object
	{
		.class nested assembly sealed ArgumentAccessorWrapper
			extends [mscorlib]System.Object
		{
			.method public hidebysig specialname 
				instance void .ctor(class System.Activities.Presentation.ArgumentAccessor argumentAccessor, class [System.Activities]System.Activities.Argument argument)
			{
				ret
			}
			.method public hidebysig specialname 
				instance class System.Activities.Presentation.ArgumentAccessor get_ArgumentAccessor()
			{
				.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
				ret
			}
			.method public hidebysig specialname 
				instance class [System.Activities]System.Activities.Argument get_Argument()
			{
				.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
				ret
			}
			.property instance class [System.Activities]System.Activities.Argument Argument()
			{
				.get instance class [System.Activities]System.Activities.Argument System.Activities.Presentation.Metadata.ActivityArgumentHelper/ArgumentAccessorWrapper::get_Argument()
			}
			.property instance class System.Activities.Presentation.ArgumentAccessor ArgumentAccessor()
			{
				.get instance class System.Activities.Presentation.ArgumentAccessor System.Activities.Presentation.Metadata.ActivityArgumentHelper/ArgumentAccessorWrapper::get_ArgumentAccessor()
			}
		}
		.class nested assembly sealed ArgumentAccessorWrapperCache
			extends [mscorlib]System.Object
		{
			.method public hidebysig specialname 
				instance void .ctor()
			{
				ret
			}
			.method public hidebysig 
				instance class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Metadata.ActivityArgumentHelper/ArgumentAccessorWrapper> GetArgumentAccessorWrappers(class [System.Activities]System.Activities.Activity activity)
			{
				ret
			}
		}
		.class nested assembly sealed ExpressionReplacement
			extends [mscorlib]System.Object
		{
			.method public hidebysig specialname 
				instance void .ctor(class [System.Activities]System.Activities.ActivityWithResult expressionToReplace, class [System.Activities]System.Activities.Argument oldArgument, class [System.Activities]System.Activities.Argument newArgument, class System.Activities.Presentation.ArgumentAccessor argumentAccessor)
			{
				ret
			}
			.method public hidebysig specialname 
				instance class [System.Activities]System.Activities.ActivityWithResult get_ExpressionToReplace()
			{
				.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
				ret
			}
			.method public hidebysig specialname 
				instance class [System.Activities]System.Activities.Argument get_OldArgument()
			{
				.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
				ret
			}
			.method public hidebysig specialname 
				instance class [System.Activities]System.Activities.Argument get_NewArgument()
			{
				.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
				ret
			}
			.method public hidebysig specialname 
				instance class System.Activities.Presentation.ArgumentAccessor get_ArgumentAccessor()
			{
				.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
				ret
			}
			.method public hidebysig 
				instance bool TryReplaceArgument(class System.Activities.Presentation.Model.ModelTreeManager modelTreeManager, class System.Activities.Presentation.Validation.ValidationService validationService)
			{
				ret
			}
			.property instance class System.Activities.Presentation.ArgumentAccessor ArgumentAccessor()
			{
				.get instance class System.Activities.Presentation.ArgumentAccessor System.Activities.Presentation.Metadata.ActivityArgumentHelper/ExpressionReplacement::get_ArgumentAccessor()
			}
			.property instance class [System.Activities]System.Activities.ActivityWithResult ExpressionToReplace()
			{
				.get instance class [System.Activities]System.Activities.ActivityWithResult System.Activities.Presentation.Metadata.ActivityArgumentHelper/ExpressionReplacement::get_ExpressionToReplace()
			}
			.property instance class [System.Activities]System.Activities.Argument NewArgument()
			{
				.get instance class [System.Activities]System.Activities.Argument System.Activities.Presentation.Metadata.ActivityArgumentHelper/ExpressionReplacement::get_NewArgument()
			}
			.property instance class [System.Activities]System.Activities.Argument OldArgument()
			{
				.get instance class [System.Activities]System.Activities.Argument System.Activities.Presentation.Metadata.ActivityArgumentHelper/ExpressionReplacement::get_OldArgument()
			}
		}
		.method public static hidebysig 
			void RegisterAccessorsGenerator(class [mscorlib]System.Type activityType, class [mscorlib]'System.Func`2'<class [System.Activities]System.Activities.Activity,class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.ArgumentAccessor>> argumentAccessorsGenerator)
		{
			ret
		}
		.method assembly static hidebysig 
			bool TryGetArgumentAccessorsGenerator(class [mscorlib]System.Type activityType, [out] class [mscorlib]'System.Func`2'<class [System.Activities]System.Activities.Activity,class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.ArgumentAccessor>>& argumentAccessorsGenerator)
		{
			ret
		}
		.method assembly static hidebysig 
			void UpdateInvalidArgumentsIfNecessary(object sender, class System.Activities.Presentation.Validation.ValidationService/ErrorsMarkedEventArgs args)
		{
			ret
		}
		.method assembly static hidebysig 
			class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Metadata.ActivityArgumentHelper/ExpressionReplacement> ComputeExpressionReplacements(class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class [System.Activities]System.Activities.ActivityWithResult> expressions, class System.Activities.Presentation.EditingContext context, class System.Activities.Presentation.Metadata.ActivityArgumentHelper/ArgumentAccessorWrapperCache argumentAccessorWrapperCache)
		{
			ret
		}
		.method assembly static hidebysig 
			class System.Activities.Presentation.Metadata.ActivityArgumentHelper/ExpressionReplacement ComputeExpressionReplacement(class [System.Activities]System.Activities.ActivityWithResult expression, class [System.Activities]System.Activities.Activity parentActivity, class System.Activities.Presentation.EditingContext context, class System.Activities.Presentation.Metadata.ActivityArgumentHelper/ArgumentAccessorWrapperCache argumentAccessorWrapperCache, [opt] class [mscorlib]System.Type preferredReturnType)
		{
			.param [5] = nullref
			ret
		}
	}
	.class private sealed ActivityDelegateArgumentDirection
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Activities.Presentation.Metadata.ActivityDelegateArgumentDirection In = int32(0x00000000)
		.field static public literal valuetype System.Activities.Presentation.Metadata.ActivityDelegateArgumentDirection Out = int32(0x00000001)
	}
	.class private ActivityDelegateArgumentMetadata
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance string get_Name()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_Name(string 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.Activities.Presentation.Metadata.ActivityDelegateArgumentDirection get_Direction()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_Direction(valuetype System.Activities.Presentation.Metadata.ActivityDelegateArgumentDirection 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Type get_Type()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_Type(class [mscorlib]System.Type 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance valuetype System.Activities.Presentation.Metadata.ActivityDelegateArgumentDirection Direction()
		{
			.get instance valuetype System.Activities.Presentation.Metadata.ActivityDelegateArgumentDirection System.Activities.Presentation.Metadata.ActivityDelegateArgumentMetadata::get_Direction()
			.set instance void System.Activities.Presentation.Metadata.ActivityDelegateArgumentMetadata::set_Direction(valuetype System.Activities.Presentation.Metadata.ActivityDelegateArgumentDirection)
		}
		.property instance string Name()
		{
			.get instance string System.Activities.Presentation.Metadata.ActivityDelegateArgumentMetadata::get_Name()
			.set instance void System.Activities.Presentation.Metadata.ActivityDelegateArgumentMetadata::set_Name(string)
		}
		.property instance class [mscorlib]System.Type Type()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.Metadata.ActivityDelegateArgumentMetadata::get_Type()
			.set instance void System.Activities.Presentation.Metadata.ActivityDelegateArgumentMetadata::set_Type(class [mscorlib]System.Type)
		}
	}
	.class private ActivityDelegateMetadata
		extends class [mscorlib]'System.Collections.ObjectModel.Collection`1'<class System.Activities.Presentation.Metadata.ActivityDelegateArgumentMetadata>
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed AttributeCallback
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(class System.Activities.Presentation.Metadata.AttributeCallbackBuilder builder)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(class System.Activities.Presentation.Metadata.AttributeCallbackBuilder builder, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public sealed AttributeCallbackBuilder
		extends [mscorlib]System.Object
	{
		.method assembly hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.Internal.Metadata.MutableAttributeTable table, class [mscorlib]System.Type callbackType)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Type get_CallbackType()
		{
			ret
		}
		.method public hidebysig 
			instance void AddCustomAttributes(class [mscorlib]System.Attribute[] attributes)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void AddCustomAttributes(class [System]System.ComponentModel.MemberDescriptor descriptor, class [mscorlib]System.Attribute[] attributes)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void AddCustomAttributes(class [mscorlib]System.Reflection.MemberInfo member, class [mscorlib]System.Attribute[] attributes)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void AddCustomAttributes(string memberName, class [mscorlib]System.Attribute[] attributes)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void AddCustomAttributes(class [WindowsBase]System.Windows.DependencyProperty dp, class [mscorlib]System.Attribute[] attributes)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.property instance class [mscorlib]System.Type CallbackType()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.Metadata.AttributeCallbackBuilder::get_CallbackType()
		}
	}
	.class public sealed AttributeTable
		extends [mscorlib]System.Object
	{
		.method assembly hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.Internal.Metadata.MutableAttributeTable attributes)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class [mscorlib]System.Type> get_AttributedTypes()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class System.Activities.Presentation.Internal.Metadata.MutableAttributeTable get_MutableTable()
		{
			ret
		}
		.method public hidebysig 
			instance bool ContainsAttributes(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.Collections.IEnumerable GetCustomAttributes(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.Collections.IEnumerable GetCustomAttributes(class [mscorlib]System.Type ownerType, class [System]System.ComponentModel.MemberDescriptor descriptor)
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.Collections.IEnumerable GetCustomAttributes(class [mscorlib]System.Type ownerType, class [WindowsBase]System.Windows.DependencyProperty dp)
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.Collections.IEnumerable GetCustomAttributes(class [mscorlib]System.Type ownerType, class [mscorlib]System.Reflection.MemberInfo member)
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.Collections.IEnumerable GetCustomAttributes(class [mscorlib]System.Type ownerType, string memberName)
		{
			ret
		}
		.method assembly hidebysig 
			instance void DebugValidateProvider()
		{
			ret
		}
		.property instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class [mscorlib]System.Type> AttributedTypes()
		{
			.get instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class [mscorlib]System.Type> System.Activities.Presentation.Metadata.AttributeTable::get_AttributedTypes()
		}
		.property instance class System.Activities.Presentation.Internal.Metadata.MutableAttributeTable MutableTable()
		{
			.get instance class System.Activities.Presentation.Internal.Metadata.MutableAttributeTable System.Activities.Presentation.Metadata.AttributeTable::get_MutableTable()
		}
	}
	.class public AttributeTableBuilder
		extends [mscorlib]System.Object
	{
		.method public hidebysig 
			instance void AddCallback(class [mscorlib]System.Type 'type', class System.Activities.Presentation.Metadata.AttributeCallback callback)
		{
			ret
		}
		.method public hidebysig 
			instance void AddCustomAttributes(class [mscorlib]System.Type 'type', class [mscorlib]System.Attribute[] attributes)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void AddCustomAttributes(class [mscorlib]System.Type ownerType, class [System]System.ComponentModel.MemberDescriptor descriptor, class [mscorlib]System.Attribute[] attributes)
		{
			.param [3]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void AddCustomAttributes(class [mscorlib]System.Type ownerType, class [mscorlib]System.Reflection.MemberInfo member, class [mscorlib]System.Attribute[] attributes)
		{
			.param [3]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void AddCustomAttributes(class [mscorlib]System.Type ownerType, string memberName, class [mscorlib]System.Attribute[] attributes)
		{
			.param [3]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void AddCustomAttributes(class [mscorlib]System.Type ownerType, class [WindowsBase]System.Windows.DependencyProperty dp, class [mscorlib]System.Attribute[] attributes)
		{
			.param [3]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void AddTable(class System.Activities.Presentation.Metadata.AttributeTable table)
		{
			ret
		}
		.method public hidebysig 
			instance class System.Activities.Presentation.Metadata.AttributeTable CreateTable()
		{
			ret
		}
		.method public hidebysig 
			instance void ValidateTable()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public serializable AttributeTableValidationException
		extends [mscorlib]System.Exception
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string message)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string message, class [mscorlib]System.Exception inner)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string message, class [mscorlib]'System.Collections.Generic.IEnumerable`1'<string> validationErrors)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string message, class [mscorlib]System.Exception inner, class [mscorlib]'System.Collections.Generic.IEnumerable`1'<string> validationErrors)
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo info, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext context)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<string> get_ValidationErrors()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void GetObjectData(class [mscorlib]System.Runtime.Serialization.SerializationInfo info, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext context)
		{
			ret
		}
		.property instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<string> ValidationErrors()
		{
			.get instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<string> System.Activities.Presentation.Metadata.AttributeTableValidationException::get_ValidationErrors()
		}
	}
	.class public interface abstract IRegisterMetadata
	{
		.method public virtual hidebysig newslot abstract 
			instance void Register()
		{
		}
	}
	.class public abstract sealed MetadataStore
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			void AddAttributeTable(class System.Activities.Presentation.Metadata.AttributeTable table)
		{
			ret
		}
		.method assembly static hidebysig 
			void AddSystemAttributeTable(class System.Activities.Presentation.Metadata.AttributeTable table)
		{
			ret
		}
	}
}
.namespace System.Activities.Presentation.Model
{
	.class private AttachablePropertyChange
		extends System.Activities.Presentation.Model.ModelChange
	{
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_Owner()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_Owner(class System.Activities.Presentation.Model.ModelItem 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Xaml]System.Xaml.AttachableMemberIdentifier get_AttachablePropertyIdentifier()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_AttachablePropertyIdentifier(class [System.Xaml]System.Xaml.AttachableMemberIdentifier 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance object get_OldValue()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_OldValue(object 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance object get_NewValue()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_NewValue(object 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_PropertyName()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_PropertyName(string 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Description()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Apply()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class System.Activities.Presentation.Model.Change GetInverse()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class [System.Xaml]System.Xaml.AttachableMemberIdentifier AttachablePropertyIdentifier()
		{
			.get instance class [System.Xaml]System.Xaml.AttachableMemberIdentifier System.Activities.Presentation.Model.AttachablePropertyChange::get_AttachablePropertyIdentifier()
			.set instance void System.Activities.Presentation.Model.AttachablePropertyChange::set_AttachablePropertyIdentifier(class [System.Xaml]System.Xaml.AttachableMemberIdentifier)
		}
		.property instance string Description()
		{
			.get instance string System.Activities.Presentation.Model.AttachablePropertyChange::get_Description()
		}
		.property instance object NewValue()
		{
			.get instance object System.Activities.Presentation.Model.AttachablePropertyChange::get_NewValue()
			.set instance void System.Activities.Presentation.Model.AttachablePropertyChange::set_NewValue(object)
		}
		.property instance object OldValue()
		{
			.get instance object System.Activities.Presentation.Model.AttachablePropertyChange::get_OldValue()
			.set instance void System.Activities.Presentation.Model.AttachablePropertyChange::set_OldValue(object)
		}
		.property instance class System.Activities.Presentation.Model.ModelItem Owner()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Model.AttachablePropertyChange::get_Owner()
			.set instance void System.Activities.Presentation.Model.AttachablePropertyChange::set_Owner(class System.Activities.Presentation.Model.ModelItem)
		}
		.property instance string PropertyName()
		{
			.get instance string System.Activities.Presentation.Model.AttachablePropertyChange::get_PropertyName()
			.set instance void System.Activities.Presentation.Model.AttachablePropertyChange::set_PropertyName(string)
		}
	}
	.class public AttachedPropertiesService
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig 
			instance void AddProperty(class System.Activities.Presentation.Model.AttachedProperty 'property')
		{
			ret
		}
		.method assembly hidebysig 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.AttachedProperty> GetAttachedProperties(class [mscorlib]System.Type modelItemType)
		{
			ret
		}
	}
	.class public abstract AttachedProperty
		extends [mscorlib]System.Object
	{
		.method public virtual hidebysig newslot abstract specialname 
			instance class [mscorlib]System.Type get_Type()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_IsReadOnly()
		{
		}
		.method public hidebysig specialname 
			instance bool get_IsBrowsable()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsBrowsable(bool 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance bool get_IsVisibleToModelItem()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_IsVisibleToModelItem(bool 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_Name(string 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Type get_OwnerType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_OwnerType(class [mscorlib]System.Type 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot abstract 
			instance object GetValue(class System.Activities.Presentation.Model.ModelItem modelItem)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetValue(class System.Activities.Presentation.Model.ModelItem modelItem, object 'value')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void ResetValue(class System.Activities.Presentation.Model.ModelItem modelItem)
		{
		}
		.method public hidebysig 
			instance void NotifyPropertyChanged(class System.Activities.Presentation.Model.ModelItem modelItem)
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance bool IsBrowsable()
		{
			.get instance bool System.Activities.Presentation.Model.AttachedProperty::get_IsBrowsable()
			.set instance void System.Activities.Presentation.Model.AttachedProperty::set_IsBrowsable(bool)
		}
		.property instance bool IsReadOnly()
		{
			.get instance bool System.Activities.Presentation.Model.AttachedProperty::get_IsReadOnly()
		}
		.property instance bool IsVisibleToModelItem()
		{
			.get instance bool System.Activities.Presentation.Model.AttachedProperty::get_IsVisibleToModelItem()
			.set instance void System.Activities.Presentation.Model.AttachedProperty::set_IsVisibleToModelItem(bool)
		}
		.property instance string Name()
		{
			.get instance string System.Activities.Presentation.Model.AttachedProperty::get_Name()
			.set instance void System.Activities.Presentation.Model.AttachedProperty::set_Name(string)
		}
		.property instance class [mscorlib]System.Type OwnerType()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.Model.AttachedProperty::get_OwnerType()
			.set instance void System.Activities.Presentation.Model.AttachedProperty::set_OwnerType(class [mscorlib]System.Type)
		}
		.property instance class [mscorlib]System.Type Type()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.Model.AttachedProperty::get_Type()
		}
	}
	.class private AttachedPropertyDescriptor
		extends [System]System.ComponentModel.PropertyDescriptor
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.Model.AttachedProperty AttachedProperty, class System.Activities.Presentation.Model.ModelItem owner)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [System]System.ComponentModel.AttributeCollection get_Attributes()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]System.Type get_ComponentType()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_IsReadOnly()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]System.Type get_PropertyType()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_IsBrowsable()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool CanResetValue(object component)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object GetValue(object component)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void ResetValue(object component)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void SetValue(object component, object 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool ShouldSerializeValue(object component)
		{
			ret
		}
		.property instance class [System]System.ComponentModel.AttributeCollection Attributes()
		{
			.get instance class [System]System.ComponentModel.AttributeCollection System.Activities.Presentation.Model.AttachedPropertyDescriptor::get_Attributes()
		}
		.property instance class [mscorlib]System.Type ComponentType()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.Model.AttachedPropertyDescriptor::get_ComponentType()
		}
		.property instance bool IsBrowsable()
		{
			.get instance bool System.Activities.Presentation.Model.AttachedPropertyDescriptor::get_IsBrowsable()
		}
		.property instance bool IsReadOnly()
		{
			.get instance bool System.Activities.Presentation.Model.AttachedPropertyDescriptor::get_IsReadOnly()
		}
		.property instance class [mscorlib]System.Type PropertyType()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.Model.AttachedPropertyDescriptor::get_PropertyType()
		}
	}
	.class public abstract AttachedPropertyInfo
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance string get_PropertyName()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_PropertyName(string 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance bool get_IsBrowsable()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_IsBrowsable(bool 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance bool get_IsVisibleToModelItem()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_IsVisibleToModelItem(bool 'value')
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict abstract 
			instance void Register(class System.Activities.Presentation.ViewStateAttachedPropertyFeature viewStateAttachedPropertyFeature)
		{
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance bool IsBrowsable()
		{
			.get instance bool System.Activities.Presentation.Model.AttachedPropertyInfo::get_IsBrowsable()
			.set instance void System.Activities.Presentation.Model.AttachedPropertyInfo::set_IsBrowsable(bool)
		}
		.property instance bool IsVisibleToModelItem()
		{
			.get instance bool System.Activities.Presentation.Model.AttachedPropertyInfo::get_IsVisibleToModelItem()
			.set instance void System.Activities.Presentation.Model.AttachedPropertyInfo::set_IsVisibleToModelItem(bool)
		}
		.property instance string PropertyName()
		{
			.get instance string System.Activities.Presentation.Model.AttachedPropertyInfo::get_PropertyName()
			.set instance void System.Activities.Presentation.Model.AttachedPropertyInfo::set_PropertyName(string)
		}
	}
	.class public sealed 'AttachedPropertyInfo`1'<'T'>
		extends System.Activities.Presentation.Model.AttachedPropertyInfo
	{
		.method public hidebysig specialname 
			instance !0 get_DefaultValue()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_DefaultValue(!0 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly virtual hidebysig strict 
			instance void Register(class System.Activities.Presentation.ViewStateAttachedPropertyFeature viewStateAttachedPropertyFeature)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance !0 DefaultValue()
		{
			.get instance !0 'System.Activities.Presentation.Model.AttachedPropertyInfo`1'::get_DefaultValue()
			.set instance void 'System.Activities.Presentation.Model.AttachedPropertyInfo`1'::set_DefaultValue(!0)
		}
	}
	.class public 'AttachedProperty`1'<'T'>
		extends System.Activities.Presentation.Model.AttachedProperty
	{
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Func`2'<class System.Activities.Presentation.Model.ModelItem,!0> get_Getter()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_Getter(class [mscorlib]'System.Func`2'<class System.Activities.Presentation.Model.ModelItem,!0> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Action`2'<class System.Activities.Presentation.Model.ModelItem,!0> get_Setter()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_Setter(class [mscorlib]'System.Action`2'<class System.Activities.Presentation.Model.ModelItem,!0> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]System.Type get_Type()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_IsReadOnly()
		{
			ret
		}
		.method public virtual hidebysig 
			instance object GetValue(class System.Activities.Presentation.Model.ModelItem modelItem)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void SetValue(class System.Activities.Presentation.Model.ModelItem modelItem, object Value)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void ResetValue(class System.Activities.Presentation.Model.ModelItem modelItem)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class [mscorlib]'System.Func`2'<class System.Activities.Presentation.Model.ModelItem,!0> Getter()
		{
			.get instance class [mscorlib]'System.Func`2'<class System.Activities.Presentation.Model.ModelItem,!0> 'System.Activities.Presentation.Model.AttachedProperty`1'::get_Getter()
			.set instance void 'System.Activities.Presentation.Model.AttachedProperty`1'::set_Getter(class [mscorlib]'System.Func`2'<class System.Activities.Presentation.Model.ModelItem,!0>)
		}
		.property instance bool IsReadOnly()
		{
			.get instance bool 'System.Activities.Presentation.Model.AttachedProperty`1'::get_IsReadOnly()
		}
		.property instance class [mscorlib]'System.Action`2'<class System.Activities.Presentation.Model.ModelItem,!0> Setter()
		{
			.get instance class [mscorlib]'System.Action`2'<class System.Activities.Presentation.Model.ModelItem,!0> 'System.Activities.Presentation.Model.AttachedProperty`1'::get_Setter()
			.set instance void 'System.Activities.Presentation.Model.AttachedProperty`1'::set_Setter(class [mscorlib]'System.Action`2'<class System.Activities.Presentation.Model.ModelItem,!0>)
		}
		.property instance class [mscorlib]System.Type Type()
		{
			.get instance class [mscorlib]System.Type 'System.Activities.Presentation.Model.AttachedProperty`1'::get_Type()
		}
	}
	.class private BackPointer
		extends System.Activities.Presentation.Model.LinkBase
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.Model.ModelItem sourceVertex, class System.Activities.Presentation.Model.ModelItem destinationVertex)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string propertyName, class System.Activities.Presentation.Model.ModelItem sourceVertex, class System.Activities.Presentation.Model.ModelItem destinationVertex)
		{
			ret
		}
	}
	.class public abstract Change
		extends [mscorlib]System.Object
	{
		.method public virtual hidebysig newslot abstract specialname 
			instance string get_Description()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool Apply()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.Activities.Presentation.Model.Change GetInverse()
		{
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance string Description()
		{
			.get instance string System.Activities.Presentation.Model.Change::get_Description()
		}
	}
	.class private CollectionChange
		extends System.Activities.Presentation.Model.ModelChange
	{
		.class nested public sealed OperationType
			extends [mscorlib]System.Enum
		{
			.field public rtspecialname specialname int32 value__
			.field static public literal valuetype System.Activities.Presentation.Model.CollectionChange/OperationType Delete = int32(0x00000001)
			.field static public literal valuetype System.Activities.Presentation.Model.CollectionChange/OperationType Insert = int32(0x00000000)
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItemCollection get_Collection()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_Collection(class System.Activities.Presentation.Model.ModelItemCollection 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Index()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_Index(int32 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_Item()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_Item(class System.Activities.Presentation.Model.ModelItem 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.Activities.Presentation.Model.CollectionChange/OperationType get_Operation()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_Operation(valuetype System.Activities.Presentation.Model.CollectionChange/OperationType 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelTreeManager get_ModelTreeManager()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_ModelTreeManager(class System.Activities.Presentation.Model.ModelTreeManager 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Description()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Apply()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class System.Activities.Presentation.Model.Change GetInverse()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class System.Activities.Presentation.Model.ModelItemCollection Collection()
		{
			.get instance class System.Activities.Presentation.Model.ModelItemCollection System.Activities.Presentation.Model.CollectionChange::get_Collection()
			.set instance void System.Activities.Presentation.Model.CollectionChange::set_Collection(class System.Activities.Presentation.Model.ModelItemCollection)
		}
		.property instance string Description()
		{
			.get instance string System.Activities.Presentation.Model.CollectionChange::get_Description()
		}
		.property instance int32 Index()
		{
			.get instance int32 System.Activities.Presentation.Model.CollectionChange::get_Index()
			.set instance void System.Activities.Presentation.Model.CollectionChange::set_Index(int32)
		}
		.property instance class System.Activities.Presentation.Model.ModelItem Item()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Model.CollectionChange::get_Item()
			.set instance void System.Activities.Presentation.Model.CollectionChange::set_Item(class System.Activities.Presentation.Model.ModelItem)
		}
		.property instance class System.Activities.Presentation.Model.ModelTreeManager ModelTreeManager()
		{
			.get instance class System.Activities.Presentation.Model.ModelTreeManager System.Activities.Presentation.Model.CollectionChange::get_ModelTreeManager()
			.set instance void System.Activities.Presentation.Model.CollectionChange::set_ModelTreeManager(class System.Activities.Presentation.Model.ModelTreeManager)
		}
		.property instance valuetype System.Activities.Presentation.Model.CollectionChange/OperationType Operation()
		{
			.get instance valuetype System.Activities.Presentation.Model.CollectionChange/OperationType System.Activities.Presentation.Model.CollectionChange::get_Operation()
			.set instance void System.Activities.Presentation.Model.CollectionChange::set_Operation(valuetype System.Activities.Presentation.Model.CollectionChange/OperationType)
		}
	}
	.class public sealed CreateOptions
		extends [mscorlib]System.Enum
	{
		.custom instance void [mscorlib]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Activities.Presentation.Model.CreateOptions InitializeDefaults = int32(0x00000001)
		.field static public literal valuetype System.Activities.Presentation.Model.CreateOptions None = int32(0x00000000)
	}
	.class private DictionaryChange
		extends System.Activities.Presentation.Model.ModelChange
	{
		.class nested public sealed OperationType
			extends [mscorlib]System.Enum
		{
			.field public rtspecialname specialname int32 value__
			.field static public literal valuetype System.Activities.Presentation.Model.DictionaryChange/OperationType Delete = int32(0x00000001)
			.field static public literal valuetype System.Activities.Presentation.Model.DictionaryChange/OperationType Insert = int32(0x00000000)
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItemDictionary get_Dictionary()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_Dictionary(class System.Activities.Presentation.Model.ModelItemDictionary 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.Activities.Presentation.Model.DictionaryChange/OperationType get_Operation()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_Operation(valuetype System.Activities.Presentation.Model.DictionaryChange/OperationType 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_Key()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_Key(class System.Activities.Presentation.Model.ModelItem 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_Value()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_Value(class System.Activities.Presentation.Model.ModelItem 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelTreeManager get_ModelTreeManager()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_ModelTreeManager(class System.Activities.Presentation.Model.ModelTreeManager 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Description()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Apply()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class System.Activities.Presentation.Model.Change GetInverse()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance string Description()
		{
			.get instance string System.Activities.Presentation.Model.DictionaryChange::get_Description()
		}
		.property instance class System.Activities.Presentation.Model.ModelItemDictionary Dictionary()
		{
			.get instance class System.Activities.Presentation.Model.ModelItemDictionary System.Activities.Presentation.Model.DictionaryChange::get_Dictionary()
			.set instance void System.Activities.Presentation.Model.DictionaryChange::set_Dictionary(class System.Activities.Presentation.Model.ModelItemDictionary)
		}
		.property instance class System.Activities.Presentation.Model.ModelItem Key()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Model.DictionaryChange::get_Key()
			.set instance void System.Activities.Presentation.Model.DictionaryChange::set_Key(class System.Activities.Presentation.Model.ModelItem)
		}
		.property instance class System.Activities.Presentation.Model.ModelTreeManager ModelTreeManager()
		{
			.get instance class System.Activities.Presentation.Model.ModelTreeManager System.Activities.Presentation.Model.DictionaryChange::get_ModelTreeManager()
			.set instance void System.Activities.Presentation.Model.DictionaryChange::set_ModelTreeManager(class System.Activities.Presentation.Model.ModelTreeManager)
		}
		.property instance valuetype System.Activities.Presentation.Model.DictionaryChange/OperationType Operation()
		{
			.get instance valuetype System.Activities.Presentation.Model.DictionaryChange/OperationType System.Activities.Presentation.Model.DictionaryChange::get_Operation()
			.set instance void System.Activities.Presentation.Model.DictionaryChange::set_Operation(valuetype System.Activities.Presentation.Model.DictionaryChange/OperationType)
		}
		.property instance class System.Activities.Presentation.Model.ModelItem Value()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Model.DictionaryChange::get_Value()
			.set instance void System.Activities.Presentation.Model.DictionaryChange::set_Value(class System.Activities.Presentation.Model.ModelItem)
		}
	}
	.class private DictionaryEditChange
		extends System.Activities.Presentation.Model.ModelChange
	{
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItemDictionary get_Dictionary()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_Dictionary(class System.Activities.Presentation.Model.ModelItemDictionary 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_Key()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_Key(class System.Activities.Presentation.Model.ModelItem 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_OldValue()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_OldValue(class System.Activities.Presentation.Model.ModelItem 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_NewValue()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_NewValue(class System.Activities.Presentation.Model.ModelItem 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelTreeManager get_ModelTreeManager()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_ModelTreeManager(class System.Activities.Presentation.Model.ModelTreeManager 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Description()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Apply()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class System.Activities.Presentation.Model.Change GetInverse()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance string Description()
		{
			.get instance string System.Activities.Presentation.Model.DictionaryEditChange::get_Description()
		}
		.property instance class System.Activities.Presentation.Model.ModelItemDictionary Dictionary()
		{
			.get instance class System.Activities.Presentation.Model.ModelItemDictionary System.Activities.Presentation.Model.DictionaryEditChange::get_Dictionary()
			.set instance void System.Activities.Presentation.Model.DictionaryEditChange::set_Dictionary(class System.Activities.Presentation.Model.ModelItemDictionary)
		}
		.property instance class System.Activities.Presentation.Model.ModelItem Key()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Model.DictionaryEditChange::get_Key()
			.set instance void System.Activities.Presentation.Model.DictionaryEditChange::set_Key(class System.Activities.Presentation.Model.ModelItem)
		}
		.property instance class System.Activities.Presentation.Model.ModelTreeManager ModelTreeManager()
		{
			.get instance class System.Activities.Presentation.Model.ModelTreeManager System.Activities.Presentation.Model.DictionaryEditChange::get_ModelTreeManager()
			.set instance void System.Activities.Presentation.Model.DictionaryEditChange::set_ModelTreeManager(class System.Activities.Presentation.Model.ModelTreeManager)
		}
		.property instance class System.Activities.Presentation.Model.ModelItem NewValue()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Model.DictionaryEditChange::get_NewValue()
			.set instance void System.Activities.Presentation.Model.DictionaryEditChange::set_NewValue(class System.Activities.Presentation.Model.ModelItem)
		}
		.property instance class System.Activities.Presentation.Model.ModelItem OldValue()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Model.DictionaryEditChange::get_OldValue()
			.set instance void System.Activities.Presentation.Model.DictionaryEditChange::set_OldValue(class System.Activities.Presentation.Model.ModelItem)
		}
	}
	.class private Edge
		extends System.Activities.Presentation.Model.LinkBase
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.Model.ModelItem sourceVertex, class System.Activities.Presentation.Model.ModelItem destinationVertex)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string propertyName, class System.Activities.Presentation.Model.ModelItem sourceVertex, class System.Activities.Presentation.Model.ModelItem destinationVertex)
		{
			ret
		}
	}
	.class public EditingScope
		extends System.Activities.Presentation.Model.ModelEditingScope
	{
		.method assembly hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.Model.ModelTreeManager modelTreeManager, class System.Activities.Presentation.Model.EditingScope outerScope)
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_HasEffectiveChanges()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_HasEffectiveChanges(bool 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance bool get_HasModelChanges()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_HasModelChanges(bool 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance bool get_SuppressUndo()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_SuppressUndo(bool 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class [mscorlib]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class System.Activities.Presentation.Model.ModelItem> get_ItemsAdded()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class [mscorlib]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class System.Activities.Presentation.Model.ModelItem> get_ItemsRemoved()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance bool get_SuppressValidationOnComplete()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_SuppressValidationOnComplete(bool 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.Change> get_Changes()
		{
			ret
		}
		.method assembly hidebysig 
			instance void EditingScope_ModelItemsAdded(object sender, class System.Activities.Presentation.Model.ModelItemsAddedEventArgs e)
		{
			ret
		}
		.method assembly hidebysig 
			instance void EditingScope_ModelItemsRemoved(object sender, class System.Activities.Presentation.Model.ModelItemsRemovedEventArgs e)
		{
			ret
		}
		.method assembly hidebysig 
			instance void HandleModelItemsAdded(class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> modelItems)
		{
			ret
		}
		.method assembly hidebysig 
			instance void HandleModelItemsRemoved(class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> modelItems)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnComplete()
		{
			ret
		}
		.method family virtual hidebysig 
			instance bool CanComplete()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnRevert(bool finalizing)
		{
			ret
		}
		.method family virtual hidebysig 
			instance bool OnException(class [mscorlib]System.Exception e)
		{
			ret
		}
		.property instance class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.Change> Changes()
		{
			.get instance class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.Change> System.Activities.Presentation.Model.EditingScope::get_Changes()
		}
		.property instance bool HasEffectiveChanges()
		{
			.get instance bool System.Activities.Presentation.Model.EditingScope::get_HasEffectiveChanges()
			.set instance void System.Activities.Presentation.Model.EditingScope::set_HasEffectiveChanges(bool)
		}
		.property instance bool HasModelChanges()
		{
			.get instance bool System.Activities.Presentation.Model.EditingScope::get_HasModelChanges()
			.set instance void System.Activities.Presentation.Model.EditingScope::set_HasModelChanges(bool)
		}
		.property instance class [mscorlib]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class System.Activities.Presentation.Model.ModelItem> ItemsAdded()
		{
			.get instance class [mscorlib]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class System.Activities.Presentation.Model.ModelItem> System.Activities.Presentation.Model.EditingScope::get_ItemsAdded()
		}
		.property instance class [mscorlib]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class System.Activities.Presentation.Model.ModelItem> ItemsRemoved()
		{
			.get instance class [mscorlib]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class System.Activities.Presentation.Model.ModelItem> System.Activities.Presentation.Model.EditingScope::get_ItemsRemoved()
		}
		.property instance bool SuppressUndo()
		{
			.get instance bool System.Activities.Presentation.Model.EditingScope::get_SuppressUndo()
			.set instance void System.Activities.Presentation.Model.EditingScope::set_SuppressUndo(bool)
		}
		.property instance bool SuppressValidationOnComplete()
		{
			.get instance bool System.Activities.Presentation.Model.EditingScope::get_SuppressValidationOnComplete()
			.set instance void System.Activities.Presentation.Model.EditingScope::set_SuppressValidationOnComplete(bool)
		}
	}
	.class public EditingScopeEventArgs
		extends [mscorlib]System.EventArgs
	{
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Model.EditingScope get_EditingScope()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_EditingScope(class System.Activities.Presentation.Model.EditingScope 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class System.Activities.Presentation.Model.EditingScope EditingScope()
		{
			.get instance class System.Activities.Presentation.Model.EditingScope System.Activities.Presentation.Model.EditingScopeEventArgs::get_EditingScope()
			.set instance void System.Activities.Presentation.Model.EditingScopeEventArgs::set_EditingScope(class System.Activities.Presentation.Model.EditingScope)
		}
	}
	.class private abstract sealed EnumValidator
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			bool IsValid(valuetype System.Activities.Presentation.Model.CreateOptions 'value')
		{
			ret
		}
	}
	.class private sealed FakeModelItemImpl
		extends System.Activities.Presentation.Model.ModelItemImpl
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.Model.ModelTreeManager modelTreeManager, class [mscorlib]System.Type itemType, object 'instance', class System.Activities.Presentation.Model.FakeModelItemImpl parent)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_Root()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnPropertyChanged(string propertyName)
		{
			ret
		}
		.property instance class System.Activities.Presentation.Model.ModelItem Root()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Model.FakeModelItemImpl::get_Root()
		}
	}
	.class private sealed FakeModelNotifyPropertyChange
		extends System.Activities.Presentation.Model.ModelChange
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.Model.IModelTreeItem modelTreeItem, string propertyName)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Description()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Apply()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class System.Activities.Presentation.Model.Change GetInverse()
		{
			ret
		}
		.property instance string Description()
		{
			.get instance string System.Activities.Presentation.Model.FakeModelNotifyPropertyChange::get_Description()
		}
	}
	.class private sealed FakeModelPropertyImpl
		extends System.Activities.Presentation.Model.ModelPropertyImpl
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.Model.FakeModelItemImpl parent, class [System]System.ComponentModel.PropertyDescriptor propertyDescriptor)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItemCollection get_Collection()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_IsCollection()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItemDictionary get_Dictionary()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_IsDictionary()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_Value()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void ClearValue()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class System.Activities.Presentation.Model.ModelItem SetValue(object 'value')
		{
			ret
		}
		.property instance class System.Activities.Presentation.Model.ModelItemCollection Collection()
		{
			.get instance class System.Activities.Presentation.Model.ModelItemCollection System.Activities.Presentation.Model.FakeModelPropertyImpl::get_Collection()
		}
		.property instance class System.Activities.Presentation.Model.ModelItemDictionary Dictionary()
		{
			.get instance class System.Activities.Presentation.Model.ModelItemDictionary System.Activities.Presentation.Model.FakeModelPropertyImpl::get_Dictionary()
		}
		.property instance bool IsCollection()
		{
			.get instance bool System.Activities.Presentation.Model.FakeModelPropertyImpl::get_IsCollection()
		}
		.property instance bool IsDictionary()
		{
			.get instance bool System.Activities.Presentation.Model.FakeModelPropertyImpl::get_IsDictionary()
		}
		.property instance class System.Activities.Presentation.Model.ModelItem Value()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Model.FakeModelPropertyImpl::get_Value()
		}
	}
	.class private GenericArgumentUpdater
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.EditingContext context)
		{
			ret
		}
		.method public hidebysig 
			instance void AddSupportForUpdatingTypeArgument(class [mscorlib]System.Type modelItemType)
		{
			ret
		}
	}
	.class private abstract 'GraphManager`3'<class 'TVertex', 'TEdge', 'TBackPointer'>
		extends [mscorlib]System.Object
	{
		.method family virtual hidebysig newslot abstract specialname 
			instance !0 get_Root()
		{
		}
		.method assembly hidebysig 
			instance void VerifyBackPointers()
		{
			ret
		}
		.method family hidebysig 
			instance class [mscorlib]'System.Collections.Generic.ICollection`1'<!0> CalculateReachableVertices([opt] bool verifyBackPointers)
		{
			.param [1] = bool(false)
			ret
		}
		.method family hidebysig 
			instance void OnRootChanged(!0 oldRoot, !0 newRoot)
		{
			ret
		}
		.method family virtual hidebysig newslot abstract 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<!0> GetVertices()
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<!1> GetOutEdges(!0 vertex)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<!2> GetBackPointers(!0 vertex)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance !0 GetDestinationVertexFromEdge(!1 edge)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance !0 GetSourceVertexFromEdge(!1 edge)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance !0 GetDestinationVertexFromBackPointer(!2 backPointer)
		{
		}
		.method family hidebysig 
			instance void OnEdgeRemoved(!1 edgeRemoved)
		{
			ret
		}
		.method family hidebysig 
			instance void OnEdgeAdded(!1 edgeAdded)
		{
			ret
		}
		.method family virtual hidebysig newslot abstract 
			instance void RemoveAssociatedBackPointer(!1 edge)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void AddAssociatedBackPointer(!1 edge)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance bool HasBackPointer(!1 edge)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance bool HasAssociatedEdge(!2 backPointer)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void OnVerticesBecameReachable(class [mscorlib]'System.Collections.Generic.IEnumerable`1'<!0> reachableVertices)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void OnVerticesBecameUnreachable(class [mscorlib]'System.Collections.Generic.IEnumerable`1'<!0> unreachableVertices)
		{
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance !0 Root()
		{
			.get instance !0 'System.Activities.Presentation.Model.GraphManager`3'::get_Root()
		}
	}
	.class private interface abstract IItemsCollection
	{
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_ShouldUpdateDictionary()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void set_ShouldUpdateDictionary(bool 'value')
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.Activities.Presentation.Model.ModelItemDictionaryImpl get_ModelDictionary()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void set_ModelDictionary(class System.Activities.Presentation.Model.ModelItemDictionaryImpl 'value')
		{
		}
		.property instance class System.Activities.Presentation.Model.ModelItemDictionaryImpl ModelDictionary()
		{
			.get instance class System.Activities.Presentation.Model.ModelItemDictionaryImpl System.Activities.Presentation.Model.IItemsCollection::get_ModelDictionary()
			.set instance void System.Activities.Presentation.Model.IItemsCollection::set_ModelDictionary(class System.Activities.Presentation.Model.ModelItemDictionaryImpl)
		}
		.property instance bool ShouldUpdateDictionary()
		{
			.get instance bool System.Activities.Presentation.Model.IItemsCollection::get_ShouldUpdateDictionary()
			.set instance void System.Activities.Presentation.Model.IItemsCollection::set_ShouldUpdateDictionary(bool)
		}
	}
	.class private interface abstract IModelTreeItem
	{
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_ModelItem()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class [mscorlib]'System.Collections.Generic.Dictionary`2'<string,class System.Activities.Presentation.Model.ModelItem> get_ModelPropertyStore()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.Activities.Presentation.Model.ModelTreeManager get_ModelTreeManager()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> get_ItemBackPointers()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.BackPointer> get_ExtraPropertyBackPointers()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void OnPropertyChanged(string propertyName)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetParent(class System.Activities.Presentation.Model.ModelItem dataModelItem)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetSource(class System.Activities.Presentation.Model.ModelProperty dataModelProperty)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void RemoveParent(class System.Activities.Presentation.Model.ModelItem oldParent)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void RemoveSource(class System.Activities.Presentation.Model.ModelProperty oldModelProperty)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void RemoveSource(class System.Activities.Presentation.Model.ModelItem parent, string propertyName)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetCurrentView(class [WindowsBase]System.Windows.DependencyObject view)
		{
		}
		.property instance class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.BackPointer> ExtraPropertyBackPointers()
		{
			.get instance class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.BackPointer> System.Activities.Presentation.Model.IModelTreeItem::get_ExtraPropertyBackPointers()
		}
		.property instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> ItemBackPointers()
		{
			.get instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> System.Activities.Presentation.Model.IModelTreeItem::get_ItemBackPointers()
		}
		.property instance class System.Activities.Presentation.Model.ModelItem ModelItem()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Model.IModelTreeItem::get_ModelItem()
		}
		.property instance class [mscorlib]'System.Collections.Generic.Dictionary`2'<string,class System.Activities.Presentation.Model.ModelItem> ModelPropertyStore()
		{
			.get instance class [mscorlib]'System.Collections.Generic.Dictionary`2'<string,class System.Activities.Presentation.Model.ModelItem> System.Activities.Presentation.Model.IModelTreeItem::get_ModelPropertyStore()
		}
		.property instance class System.Activities.Presentation.Model.ModelTreeManager ModelTreeManager()
		{
			.get instance class System.Activities.Presentation.Model.ModelTreeManager System.Activities.Presentation.Model.IModelTreeItem::get_ModelTreeManager()
		}
	}
	.class private ImmediateEditingScope
		extends System.Activities.Presentation.Model.EditingScope
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.Model.ModelTreeManager modelTreeManager, class System.Activities.Presentation.UndoEngine/Bookmark undoEngineBookmark)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnComplete()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnRevert(bool finalizing)
		{
			ret
		}
		.method family virtual hidebysig 
			instance bool CanComplete()
		{
			ret
		}
	}
	.class private LinkBase
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.Model.ModelItem sourceVertex, class System.Activities.Presentation.Model.ModelItem destinationVertex)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string propertyName, class System.Activities.Presentation.Model.ModelItem sourceVertex, class System.Activities.Presentation.Model.ModelItem destinationVertex)
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.Activities.Presentation.Model.LinkType get_LinkType()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_PropertyName()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_DestinationVertex()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_SourceVertex()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.property instance class System.Activities.Presentation.Model.ModelItem DestinationVertex()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Model.LinkBase::get_DestinationVertex()
		}
		.property instance valuetype System.Activities.Presentation.Model.LinkType LinkType()
		{
			.get instance valuetype System.Activities.Presentation.Model.LinkType System.Activities.Presentation.Model.LinkBase::get_LinkType()
		}
		.property instance string PropertyName()
		{
			.get instance string System.Activities.Presentation.Model.LinkBase::get_PropertyName()
		}
		.property instance class System.Activities.Presentation.Model.ModelItem SourceVertex()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Model.LinkBase::get_SourceVertex()
		}
	}
	.class private sealed LinkType
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Activities.Presentation.Model.LinkType Item = int32(0x00000001)
		.field static public literal valuetype System.Activities.Presentation.Model.LinkType Property = int32(0x00000000)
	}
	.class private abstract ModelChange
		extends System.Activities.Presentation.Model.Change
	{
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private ModelChangedEventArgsImpl
		extends System.Activities.Presentation.Services.ModelChangedEventArgs
	{
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.ModelItem> itemsAdded, class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.ModelItem> itemsRemoved, class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.ModelProperty> propertiesChanged)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.ModelItem> itemsAdded, class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.ModelItem> itemsRemoved, class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.ModelProperty> propertiesChanged, class System.Activities.Presentation.Services.ModelChangeInfo modelChangeInfo)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> get_ItemsAdded()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> get_ItemsRemoved()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelProperty> get_PropertiesChanged()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Activities.Presentation.Services.ModelChangeInfo get_ModelChangeInfo()
		{
			ret
		}
		.property instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> ItemsAdded()
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = { string('Don\'t use this property. Use \"ModelChangeInfo\" instead.') }
			.get instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> System.Activities.Presentation.Model.ModelChangedEventArgsImpl::get_ItemsAdded()
		}
		.property instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> ItemsRemoved()
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = { string('Don\'t use this property. Use \"ModelChangeInfo\" instead.') }
			.get instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> System.Activities.Presentation.Model.ModelChangedEventArgsImpl::get_ItemsRemoved()
		}
		.property instance class System.Activities.Presentation.Services.ModelChangeInfo ModelChangeInfo()
		{
			.get instance class System.Activities.Presentation.Services.ModelChangeInfo System.Activities.Presentation.Model.ModelChangedEventArgsImpl::get_ModelChangeInfo()
		}
		.property instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelProperty> PropertiesChanged()
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = { string('Don\'t use this property. Use \"ModelChangeInfo\" instead.') }
			.get instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelProperty> System.Activities.Presentation.Model.ModelChangedEventArgsImpl::get_PropertiesChanged()
		}
	}
	.class public abstract ModelEditingScope
		extends [mscorlib]System.Object
		implements [mscorlib]System.IDisposable
	{
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Description()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Description(string 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Complete()
		{
			ret
		}
		.method public hidebysig 
			instance void Revert()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Dispose()
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.method family virtual hidebysig newslot abstract 
			instance void OnComplete()
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance bool CanComplete()
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void OnRevert(bool finalizing)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance bool OnException(class [mscorlib]System.Exception exception)
		{
		}
		.property instance string Description()
		{
			.get instance string System.Activities.Presentation.Model.ModelEditingScope::get_Description()
			.set instance void System.Activities.Presentation.Model.ModelEditingScope::set_Description(string)
		}
	}
	.class public abstract sealed ModelFactory
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			class System.Activities.Presentation.Model.ModelItem CreateItem(class System.Activities.Presentation.EditingContext context, class [mscorlib]System.Type itemType, object[] arguments)
		{
			.param [3]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class System.Activities.Presentation.Model.ModelItem CreateItem(class System.Activities.Presentation.EditingContext context, class [mscorlib]System.Type itemType, valuetype System.Activities.Presentation.Model.CreateOptions options, object[] arguments)
		{
			.param [4]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class System.Activities.Presentation.Model.ModelItem CreateItem(class System.Activities.Presentation.EditingContext context, object item)
		{
			ret
		}
		.method public static hidebysig 
			class System.Activities.Presentation.Model.ModelItem CreateStaticMemberItem(class System.Activities.Presentation.EditingContext context, class [mscorlib]System.Type 'type', string memberName)
		{
			ret
		}
	}
	.class public abstract ModelItem
		extends [mscorlib]System.Object
		implements [System]System.ComponentModel.INotifyPropertyChanged
	{
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class [System]System.ComponentModel.AttributeCollection get_Attributes()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.Activities.Presentation.Model.ModelProperty get_Content()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class [mscorlib]System.Type get_ItemType()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance string get_Name()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void set_Name(string 'value')
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_Parent()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> get_Parents()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_Root()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.Activities.Presentation.Model.ModelPropertyCollection get_Properties()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.Activities.Presentation.Model.ModelProperty get_Source()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelProperty> get_Sources()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class [WindowsBase]System.Windows.DependencyObject get_View()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.Activities.Presentation.Model.ModelEditingScope BeginEdit()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.Activities.Presentation.Model.ModelEditingScope BeginEdit(string description)
		{
		}
		.method public virtual hidebysig newslot 
			instance class System.Activities.Presentation.Model.ModelEditingScope BeginEdit(bool shouldApplyChangesImmediately)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class System.Activities.Presentation.Model.ModelEditingScope BeginEdit(string description, bool shouldApplyChangesImmediately)
		{
			ret
		}
		.method public virtual hidebysig newslot abstract 
			instance object GetCurrentValue()
		{
		}
		.method public virtual hidebysig 
			instance string ToString()
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict specialname 
			instance void add_PropertyReferenceChanged(class System.Activities.Presentation.Model.PropertyReferenceChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly virtual hidebysig newslot strict specialname 
			instance void remove_PropertyReferenceChanged(class System.Activities.Presentation.Model.PropertyReferenceChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly virtual hidebysig newslot strict 
			instance void OnPropertyReferenceChanged(string targetProperty)
		{
			ret
		}
		.event [System]System.ComponentModel.PropertyChangedEventHandler PropertyChanged
		{
			.addon instance void System.Activities.Presentation.Model.ModelItem::add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
			.removeon instance void System.Activities.Presentation.Model.ModelItem::remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
		}
		.event System.Activities.Presentation.Model.PropertyReferenceChangedEventHandler PropertyReferenceChanged
		{
			.addon instance void System.Activities.Presentation.Model.ModelItem::add_PropertyReferenceChanged(class System.Activities.Presentation.Model.PropertyReferenceChangedEventHandler)
			.removeon instance void System.Activities.Presentation.Model.ModelItem::remove_PropertyReferenceChanged(class System.Activities.Presentation.Model.PropertyReferenceChangedEventHandler)
		}
		.property instance class [System]System.ComponentModel.AttributeCollection Attributes()
		{
			.get instance class [System]System.ComponentModel.AttributeCollection System.Activities.Presentation.Model.ModelItem::get_Attributes()
		}
		.property instance class System.Activities.Presentation.Model.ModelProperty Content()
		{
			.get instance class System.Activities.Presentation.Model.ModelProperty System.Activities.Presentation.Model.ModelItem::get_Content()
		}
		.property instance class [mscorlib]System.Type ItemType()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.Model.ModelItem::get_ItemType()
		}
		.property instance string Name()
		{
			.get instance string System.Activities.Presentation.Model.ModelItem::get_Name()
			.set instance void System.Activities.Presentation.Model.ModelItem::set_Name(string)
		}
		.property instance class System.Activities.Presentation.Model.ModelItem Parent()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Model.ModelItem::get_Parent()
		}
		.property instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> Parents()
		{
			.get instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> System.Activities.Presentation.Model.ModelItem::get_Parents()
		}
		.property instance class System.Activities.Presentation.Model.ModelPropertyCollection Properties()
		{
			.get instance class System.Activities.Presentation.Model.ModelPropertyCollection System.Activities.Presentation.Model.ModelItem::get_Properties()
		}
		.property instance class System.Activities.Presentation.Model.ModelItem Root()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Model.ModelItem::get_Root()
		}
		.property instance class System.Activities.Presentation.Model.ModelProperty Source()
		{
			.get instance class System.Activities.Presentation.Model.ModelProperty System.Activities.Presentation.Model.ModelItem::get_Source()
		}
		.property instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelProperty> Sources()
		{
			.get instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelProperty> System.Activities.Presentation.Model.ModelItem::get_Sources()
		}
		.property instance class [WindowsBase]System.Windows.DependencyObject View()
		{
			.get instance class [WindowsBase]System.Windows.DependencyObject System.Activities.Presentation.Model.ModelItem::get_View()
		}
	}
	.class public abstract ModelItemCollection
		extends System.Activities.Presentation.Model.ModelItem
		implements class [mscorlib]'System.Collections.Generic.IList`1'<class System.Activities.Presentation.Model.ModelItem>, class [mscorlib]'System.Collections.Generic.ICollection`1'<class System.Activities.Presentation.Model.ModelItem>, class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem>, [mscorlib]System.Collections.IEnumerable, [mscorlib]System.Collections.IList, [mscorlib]System.Collections.ICollection, [System]System.Collections.Specialized.INotifyCollectionChanged
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = { string('Item') }
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_Item(int32 index)
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void set_Item(int32 index, class System.Activities.Presentation.Model.ModelItem 'value')
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance int32 get_Count()
		{
		}
		.method family virtual hidebysig newslot specialname 
			instance bool get_IsFixedSize()
		{
			ret
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_IsReadOnly()
		{
		}
		.method family virtual hidebysig newslot specialname 
			instance bool get_IsSynchronized()
		{
			ret
		}
		.method family virtual hidebysig newslot specialname 
			instance object get_SyncRoot()
		{
			ret
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void add_CollectionChanged(class [System]System.Collections.Specialized.NotifyCollectionChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void remove_CollectionChanged(class [System]System.Collections.Specialized.NotifyCollectionChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
		}
		.method public virtual hidebysig newslot abstract 
			instance void Add(class System.Activities.Presentation.Model.ModelItem item)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.Activities.Presentation.Model.ModelItem Add(object 'value')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Clear()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool Contains(class System.Activities.Presentation.Model.ModelItem item)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool Contains(object 'value')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void CopyTo(class System.Activities.Presentation.Model.ModelItem[] 'array', int32 arrayIndex)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]'System.Collections.Generic.IEnumerator`1'<class System.Activities.Presentation.Model.ModelItem> GetEnumerator()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 IndexOf(class System.Activities.Presentation.Model.ModelItem item)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Insert(int32 index, class System.Activities.Presentation.Model.ModelItem item)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.Activities.Presentation.Model.ModelItem Insert(int32 index, object 'value')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Move(int32 fromIndex, int32 toIndex)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool Remove(class System.Activities.Presentation.Model.ModelItem item)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool Remove(object 'value')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void RemoveAt(int32 index)
		{
		}
		.method private final virtual hidebysig newslot 
			instance int32 System.Collections.IList.Add(object 'value')
		{
			.override [mscorlib]System.Collections.IList::Add
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.IList.Clear()
		{
			.override [mscorlib]System.Collections.IList::Clear
			ret
		}
		.method private final virtual hidebysig newslot 
			instance bool System.Collections.IList.Contains(object 'value')
		{
			.override [mscorlib]System.Collections.IList::Contains
			ret
		}
		.method private final virtual hidebysig newslot 
			instance int32 System.Collections.IList.IndexOf(object 'value')
		{
			.override [mscorlib]System.Collections.IList::IndexOf
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.IList.Insert(int32 index, object 'value')
		{
			.override [mscorlib]System.Collections.IList::Insert
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance bool System.Collections.IList.get_IsFixedSize()
		{
			.override [mscorlib]System.Collections.IList::get_IsFixedSize
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance bool System.Collections.IList.get_IsReadOnly()
		{
			.override [mscorlib]System.Collections.IList::get_IsReadOnly
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.IList.Remove(object 'value')
		{
			.override [mscorlib]System.Collections.IList::Remove
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.IList.RemoveAt(int32 index)
		{
			.override [mscorlib]System.Collections.IList::RemoveAt
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance object System.Collections.IList.get_Item(int32 index)
		{
			.override [mscorlib]System.Collections.IList::get_Item
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance void System.Collections.IList.set_Item(int32 index, object 'value')
		{
			.override [mscorlib]System.Collections.IList::set_Item
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.ICollection.CopyTo(class [mscorlib]System.Array 'array', int32 index)
		{
			.override [mscorlib]System.Collections.ICollection::CopyTo
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance int32 System.Collections.ICollection.get_Count()
		{
			.override [mscorlib]System.Collections.ICollection::get_Count
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance bool System.Collections.ICollection.get_IsSynchronized()
		{
			.override [mscorlib]System.Collections.ICollection::get_IsSynchronized
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance object System.Collections.ICollection.get_SyncRoot()
		{
			.override [mscorlib]System.Collections.ICollection::get_SyncRoot
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			.override [mscorlib]System.Collections.IEnumerable::GetEnumerator
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ItemProperty
		.event [System]System.Collections.Specialized.NotifyCollectionChangedEventHandler CollectionChanged
		{
			.addon instance void System.Activities.Presentation.Model.ModelItemCollection::add_CollectionChanged(class [System]System.Collections.Specialized.NotifyCollectionChangedEventHandler)
			.removeon instance void System.Activities.Presentation.Model.ModelItemCollection::remove_CollectionChanged(class [System]System.Collections.Specialized.NotifyCollectionChangedEventHandler)
		}
		.property instance int32 Count()
		{
			.get instance int32 System.Activities.Presentation.Model.ModelItemCollection::get_Count()
		}
		.property instance bool IsFixedSize()
		{
			.get instance bool System.Activities.Presentation.Model.ModelItemCollection::get_IsFixedSize()
		}
		.property instance bool IsReadOnly()
		{
			.get instance bool System.Activities.Presentation.Model.ModelItemCollection::get_IsReadOnly()
		}
		.property instance bool IsSynchronized()
		{
			.get instance bool System.Activities.Presentation.Model.ModelItemCollection::get_IsSynchronized()
		}
		.property instance class System.Activities.Presentation.Model.ModelItem Item(int32)
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Model.ModelItemCollection::get_Item(int32)
			.set instance void System.Activities.Presentation.Model.ModelItemCollection::set_Item(int32, class System.Activities.Presentation.Model.ModelItem)
		}
		.property instance object SyncRoot()
		{
			.get instance object System.Activities.Presentation.Model.ModelItemCollection::get_SyncRoot()
		}
		.property instance int32 System.Collections.ICollection.Count()
		{
			.get instance int32 System.Activities.Presentation.Model.ModelItemCollection::System.Collections.ICollection.get_Count()
		}
		.property instance bool System.Collections.ICollection.IsSynchronized()
		{
			.get instance bool System.Activities.Presentation.Model.ModelItemCollection::System.Collections.ICollection.get_IsSynchronized()
		}
		.property instance object System.Collections.ICollection.SyncRoot()
		{
			.get instance object System.Activities.Presentation.Model.ModelItemCollection::System.Collections.ICollection.get_SyncRoot()
		}
		.property instance bool System.Collections.IList.IsFixedSize()
		{
			.get instance bool System.Activities.Presentation.Model.ModelItemCollection::System.Collections.IList.get_IsFixedSize()
		}
		.property instance bool System.Collections.IList.IsReadOnly()
		{
			.get instance bool System.Activities.Presentation.Model.ModelItemCollection::System.Collections.IList.get_IsReadOnly()
		}
		.property instance object System.Collections.IList.Item(int32)
		{
			.get instance object System.Activities.Presentation.Model.ModelItemCollection::System.Collections.IList.get_Item(int32)
			.set instance void System.Activities.Presentation.Model.ModelItemCollection::System.Collections.IList.set_Item(int32, object)
		}
	}
	.class private ModelItemCollectionImpl
		extends System.Activities.Presentation.Model.ModelItemCollection
		implements System.Activities.Presentation.Model.IModelTreeItem
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = { string('Item') }
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.Model.ModelTreeManager modelTreeManager, class [mscorlib]System.Type itemType, object 'instance', class System.Activities.Presentation.Model.ModelItem parent)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void add_CollectionChanged(class [System]System.Collections.Specialized.NotifyCollectionChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public virtual hidebysig specialname 
			instance void remove_CollectionChanged(class [System]System.Collections.Specialized.NotifyCollectionChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public virtual hidebysig specialname 
			instance void add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public virtual hidebysig specialname 
			instance void remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [System]System.ComponentModel.AttributeCollection get_Attributes()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelProperty get_Content()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance int32 get_Count()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_IsReadOnly()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]System.Type get_ItemType()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Name(string 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_Parent()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelPropertyCollection get_Properties()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_Root()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelProperty get_Source()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [WindowsBase]System.Windows.DependencyObject get_View()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> get_Parents()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelProperty> get_Sources()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.ModelItem> get_Items()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.Dictionary`2'<string,class System.Activities.Presentation.Model.ModelItem> get_ModelPropertyStore()
		{
			ret
		}
		.method family hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelProperty get_NameProperty()
		{
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Model.IModelTreeItem.get_ModelItem()
		{
			.override System.Activities.Presentation.Model.IModelTreeItem::get_ModelItem
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance class [mscorlib]'System.Collections.Generic.Dictionary`2'<string,class System.Activities.Presentation.Model.ModelItem> System.Activities.Presentation.Model.IModelTreeItem.get_ModelPropertyStore()
		{
			.override System.Activities.Presentation.Model.IModelTreeItem::get_ModelPropertyStore
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance class System.Activities.Presentation.Model.ModelTreeManager System.Activities.Presentation.Model.IModelTreeItem.get_ModelTreeManager()
		{
			.override System.Activities.Presentation.Model.IModelTreeItem::get_ModelTreeManager
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_Item(int32 index)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Item(int32 index, class System.Activities.Presentation.Model.ModelItem 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void SetCurrentView(class [WindowsBase]System.Windows.DependencyObject view)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class System.Activities.Presentation.Model.ModelItem Add(object 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Add(class System.Activities.Presentation.Model.ModelItem item)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class System.Activities.Presentation.Model.ModelEditingScope BeginEdit(string description, bool shouldApplyChangesImmediately)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class System.Activities.Presentation.Model.ModelEditingScope BeginEdit(bool shouldApplyChangesImmediately)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class System.Activities.Presentation.Model.ModelEditingScope BeginEdit(string description)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class System.Activities.Presentation.Model.ModelEditingScope BeginEdit()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Clear()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Contains(object 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Contains(class System.Activities.Presentation.Model.ModelItem item)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void CopyTo(class System.Activities.Presentation.Model.ModelItem[] 'array', int32 arrayIndex)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object GetCurrentValue()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]'System.Collections.Generic.IEnumerator`1'<class System.Activities.Presentation.Model.ModelItem> GetEnumerator()
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Activities.Presentation.Model.IModelTreeItem.OnPropertyChanged(string propertyName)
		{
			.override System.Activities.Presentation.Model.IModelTreeItem::OnPropertyChanged
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> System.Activities.Presentation.Model.IModelTreeItem.get_ItemBackPointers()
		{
			.override System.Activities.Presentation.Model.IModelTreeItem::get_ItemBackPointers
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.BackPointer> System.Activities.Presentation.Model.IModelTreeItem.get_ExtraPropertyBackPointers()
		{
			.override System.Activities.Presentation.Model.IModelTreeItem::get_ExtraPropertyBackPointers
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Activities.Presentation.Model.IModelTreeItem.SetParent(class System.Activities.Presentation.Model.ModelItem dataModelItem)
		{
			.override System.Activities.Presentation.Model.IModelTreeItem::SetParent
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Activities.Presentation.Model.IModelTreeItem.SetSource(class System.Activities.Presentation.Model.ModelProperty 'property')
		{
			.override System.Activities.Presentation.Model.IModelTreeItem::SetSource
			ret
		}
		.method public virtual hidebysig 
			instance int32 IndexOf(class System.Activities.Presentation.Model.ModelItem item)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class System.Activities.Presentation.Model.ModelItem Insert(int32 index, object 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Insert(int32 index, class System.Activities.Presentation.Model.ModelItem item)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Move(int32 fromIndex, int32 toIndex)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Remove(object 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Remove(class System.Activities.Presentation.Model.ModelItem item)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void RemoveAt(int32 index)
		{
			ret
		}
		.method assembly hidebysig 
			instance void AddCore(class System.Activities.Presentation.Model.ModelItem item)
		{
			ret
		}
		.method assembly hidebysig 
			instance void ClearCore()
		{
			ret
		}
		.method assembly hidebysig 
			instance void InsertCore(int32 index, class System.Activities.Presentation.Model.ModelItem item)
		{
			ret
		}
		.method assembly hidebysig 
			instance void RemoveCore(class System.Activities.Presentation.Model.ModelItem item)
		{
			ret
		}
		.method assembly hidebysig 
			instance void RemoveAtCore(int32 index)
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Activities.Presentation.Model.IModelTreeItem.RemoveParent(class System.Activities.Presentation.Model.ModelItem oldParent)
		{
			.override System.Activities.Presentation.Model.IModelTreeItem::RemoveParent
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Activities.Presentation.Model.IModelTreeItem.RemoveSource(class System.Activities.Presentation.Model.ModelProperty oldModelProperty)
		{
			.override System.Activities.Presentation.Model.IModelTreeItem::RemoveSource
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Activities.Presentation.Model.IModelTreeItem.RemoveSource(class System.Activities.Presentation.Model.ModelItem parent, string propertyName)
		{
			.override System.Activities.Presentation.Model.IModelTreeItem::RemoveSource
			ret
		}
		.event [System]System.Collections.Specialized.NotifyCollectionChangedEventHandler CollectionChanged
		{
			.addon instance void System.Activities.Presentation.Model.ModelItemCollectionImpl::add_CollectionChanged(class [System]System.Collections.Specialized.NotifyCollectionChangedEventHandler)
			.removeon instance void System.Activities.Presentation.Model.ModelItemCollectionImpl::remove_CollectionChanged(class [System]System.Collections.Specialized.NotifyCollectionChangedEventHandler)
		}
		.event [System]System.ComponentModel.PropertyChangedEventHandler PropertyChanged
		{
			.addon instance void System.Activities.Presentation.Model.ModelItemCollectionImpl::add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
			.removeon instance void System.Activities.Presentation.Model.ModelItemCollectionImpl::remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
		}
		.property instance class [System]System.ComponentModel.AttributeCollection Attributes()
		{
			.get instance class [System]System.ComponentModel.AttributeCollection System.Activities.Presentation.Model.ModelItemCollectionImpl::get_Attributes()
		}
		.property instance class System.Activities.Presentation.Model.ModelProperty Content()
		{
			.get instance class System.Activities.Presentation.Model.ModelProperty System.Activities.Presentation.Model.ModelItemCollectionImpl::get_Content()
		}
		.property instance int32 Count()
		{
			.get instance int32 System.Activities.Presentation.Model.ModelItemCollectionImpl::get_Count()
		}
		.property instance bool IsReadOnly()
		{
			.get instance bool System.Activities.Presentation.Model.ModelItemCollectionImpl::get_IsReadOnly()
		}
		.property instance class System.Activities.Presentation.Model.ModelItem Item(int32)
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Model.ModelItemCollectionImpl::get_Item(int32)
			.set instance void System.Activities.Presentation.Model.ModelItemCollectionImpl::set_Item(int32, class System.Activities.Presentation.Model.ModelItem)
		}
		.property instance class [mscorlib]System.Type ItemType()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.Model.ModelItemCollectionImpl::get_ItemType()
		}
		.property instance class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.ModelItem> Items()
		{
			.get instance class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.ModelItem> System.Activities.Presentation.Model.ModelItemCollectionImpl::get_Items()
		}
		.property instance class [mscorlib]'System.Collections.Generic.Dictionary`2'<string,class System.Activities.Presentation.Model.ModelItem> ModelPropertyStore()
		{
			.get instance class [mscorlib]'System.Collections.Generic.Dictionary`2'<string,class System.Activities.Presentation.Model.ModelItem> System.Activities.Presentation.Model.ModelItemCollectionImpl::get_ModelPropertyStore()
		}
		.property instance string Name()
		{
			.get instance string System.Activities.Presentation.Model.ModelItemCollectionImpl::get_Name()
			.set instance void System.Activities.Presentation.Model.ModelItemCollectionImpl::set_Name(string)
		}
		.property instance class System.Activities.Presentation.Model.ModelProperty NameProperty()
		{
			.get instance class System.Activities.Presentation.Model.ModelProperty System.Activities.Presentation.Model.ModelItemCollectionImpl::get_NameProperty()
		}
		.property instance class System.Activities.Presentation.Model.ModelItem Parent()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Model.ModelItemCollectionImpl::get_Parent()
		}
		.property instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> Parents()
		{
			.get instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> System.Activities.Presentation.Model.ModelItemCollectionImpl::get_Parents()
		}
		.property instance class System.Activities.Presentation.Model.ModelPropertyCollection Properties()
		{
			.get instance class System.Activities.Presentation.Model.ModelPropertyCollection System.Activities.Presentation.Model.ModelItemCollectionImpl::get_Properties()
		}
		.property instance class System.Activities.Presentation.Model.ModelItem Root()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Model.ModelItemCollectionImpl::get_Root()
		}
		.property instance class System.Activities.Presentation.Model.ModelProperty Source()
		{
			.get instance class System.Activities.Presentation.Model.ModelProperty System.Activities.Presentation.Model.ModelItemCollectionImpl::get_Source()
		}
		.property instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelProperty> Sources()
		{
			.get instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelProperty> System.Activities.Presentation.Model.ModelItemCollectionImpl::get_Sources()
		}
		.property instance class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.BackPointer> System.Activities.Presentation.Model.IModelTreeItem.ExtraPropertyBackPointers()
		{
			.get instance class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.BackPointer> System.Activities.Presentation.Model.ModelItemCollectionImpl::System.Activities.Presentation.Model.IModelTreeItem.get_ExtraPropertyBackPointers()
		}
		.property instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> System.Activities.Presentation.Model.IModelTreeItem.ItemBackPointers()
		{
			.get instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> System.Activities.Presentation.Model.ModelItemCollectionImpl::System.Activities.Presentation.Model.IModelTreeItem.get_ItemBackPointers()
		}
		.property instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Model.IModelTreeItem.ModelItem()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Model.ModelItemCollectionImpl::System.Activities.Presentation.Model.IModelTreeItem.get_ModelItem()
		}
		.property instance class [mscorlib]'System.Collections.Generic.Dictionary`2'<string,class System.Activities.Presentation.Model.ModelItem> System.Activities.Presentation.Model.IModelTreeItem.ModelPropertyStore()
		{
			.get instance class [mscorlib]'System.Collections.Generic.Dictionary`2'<string,class System.Activities.Presentation.Model.ModelItem> System.Activities.Presentation.Model.ModelItemCollectionImpl::System.Activities.Presentation.Model.IModelTreeItem.get_ModelPropertyStore()
		}
		.property instance class System.Activities.Presentation.Model.ModelTreeManager System.Activities.Presentation.Model.IModelTreeItem.ModelTreeManager()
		{
			.get instance class System.Activities.Presentation.Model.ModelTreeManager System.Activities.Presentation.Model.ModelItemCollectionImpl::System.Activities.Presentation.Model.IModelTreeItem.get_ModelTreeManager()
		}
		.property instance class [WindowsBase]System.Windows.DependencyObject View()
		{
			.get instance class [WindowsBase]System.Windows.DependencyObject System.Activities.Presentation.Model.ModelItemCollectionImpl::get_View()
		}
	}
	.class public abstract ModelItemDictionary
		extends System.Activities.Presentation.Model.ModelItem
		implements class [mscorlib]'System.Collections.Generic.IDictionary`2'<class System.Activities.Presentation.Model.ModelItem,class System.Activities.Presentation.Model.ModelItem>, class [mscorlib]'System.Collections.Generic.ICollection`1'<valuetype [mscorlib]'System.Collections.Generic.KeyValuePair`2'<class System.Activities.Presentation.Model.ModelItem,class System.Activities.Presentation.Model.ModelItem>>, class [mscorlib]'System.Collections.Generic.IEnumerable`1'<valuetype [mscorlib]'System.Collections.Generic.KeyValuePair`2'<class System.Activities.Presentation.Model.ModelItem,class System.Activities.Presentation.Model.ModelItem>>, [mscorlib]System.Collections.IEnumerable, [mscorlib]System.Collections.IDictionary, [mscorlib]System.Collections.ICollection, [System]System.Collections.Specialized.INotifyCollectionChanged
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = { string('Item') }
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_Item(class System.Activities.Presentation.Model.ModelItem key)
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void set_Item(class System.Activities.Presentation.Model.ModelItem key, class System.Activities.Presentation.Model.ModelItem 'value')
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_Item(object key)
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void set_Item(object key, class System.Activities.Presentation.Model.ModelItem 'value')
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance int32 get_Count()
		{
		}
		.method family virtual hidebysig newslot specialname 
			instance bool get_IsFixedSize()
		{
			ret
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_IsReadOnly()
		{
		}
		.method family virtual hidebysig newslot specialname 
			instance bool get_IsSynchronized()
		{
			ret
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class [mscorlib]'System.Collections.Generic.ICollection`1'<class System.Activities.Presentation.Model.ModelItem> get_Keys()
		{
		}
		.method family virtual hidebysig newslot specialname 
			instance object get_SyncRoot()
		{
			ret
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class [mscorlib]'System.Collections.Generic.ICollection`1'<class System.Activities.Presentation.Model.ModelItem> get_Values()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void add_CollectionChanged(class [System]System.Collections.Specialized.NotifyCollectionChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void remove_CollectionChanged(class [System]System.Collections.Specialized.NotifyCollectionChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
		}
		.method public virtual hidebysig newslot abstract 
			instance void Add(class System.Activities.Presentation.Model.ModelItem key, class System.Activities.Presentation.Model.ModelItem 'value')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.Activities.Presentation.Model.ModelItem Add(object key, object 'value')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Clear()
		{
		}
		.method family virtual hidebysig newslot 
			instance void CopyTo(valuetype [mscorlib]'System.Collections.Generic.KeyValuePair`2'<class System.Activities.Presentation.Model.ModelItem,class System.Activities.Presentation.Model.ModelItem>[] 'array', int32 arrayIndex)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance bool Contains(valuetype [mscorlib]'System.Collections.Generic.KeyValuePair`2'<class System.Activities.Presentation.Model.ModelItem,class System.Activities.Presentation.Model.ModelItem> item)
		{
			ret
		}
		.method public virtual hidebysig newslot abstract 
			instance bool ContainsKey(class System.Activities.Presentation.Model.ModelItem key)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool ContainsKey(object key)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]'System.Collections.Generic.IEnumerator`1'<valuetype [mscorlib]'System.Collections.Generic.KeyValuePair`2'<class System.Activities.Presentation.Model.ModelItem,class System.Activities.Presentation.Model.ModelItem>> GetEnumerator()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool Remove(class System.Activities.Presentation.Model.ModelItem key)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool Remove(object key)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool TryGetValue(class System.Activities.Presentation.Model.ModelItem key, [out] class System.Activities.Presentation.Model.ModelItem& 'value')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool TryGetValue(object key, [out] class System.Activities.Presentation.Model.ModelItem& 'value')
		{
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.IDictionary.Add(object key, object 'value')
		{
			.override [mscorlib]System.Collections.IDictionary::Add
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.IDictionary.Clear()
		{
			.override [mscorlib]System.Collections.IDictionary::Clear
			ret
		}
		.method private final virtual hidebysig newslot 
			instance bool System.Collections.IDictionary.Contains(object key)
		{
			.override [mscorlib]System.Collections.IDictionary::Contains
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator()
		{
			.override [mscorlib]System.Collections.IDictionary::GetEnumerator
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance bool System.Collections.IDictionary.get_IsFixedSize()
		{
			.override [mscorlib]System.Collections.IDictionary::get_IsFixedSize
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance bool System.Collections.IDictionary.get_IsReadOnly()
		{
			.override [mscorlib]System.Collections.IDictionary::get_IsReadOnly
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance class [mscorlib]System.Collections.ICollection System.Collections.IDictionary.get_Keys()
		{
			.override [mscorlib]System.Collections.IDictionary::get_Keys
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.IDictionary.Remove(object key)
		{
			.override [mscorlib]System.Collections.IDictionary::Remove
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance class [mscorlib]System.Collections.ICollection System.Collections.IDictionary.get_Values()
		{
			.override [mscorlib]System.Collections.IDictionary::get_Values
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance object System.Collections.IDictionary.get_Item(object key)
		{
			.override [mscorlib]System.Collections.IDictionary::get_Item
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance void System.Collections.IDictionary.set_Item(object key, object 'value')
		{
			.override [mscorlib]System.Collections.IDictionary::set_Item
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.ICollection.CopyTo(class [mscorlib]System.Array 'array', int32 index)
		{
			.override [mscorlib]System.Collections.ICollection::CopyTo
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance int32 System.Collections.ICollection.get_Count()
		{
			.override [mscorlib]System.Collections.ICollection::get_Count
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance bool System.Collections.ICollection.get_IsSynchronized()
		{
			.override [mscorlib]System.Collections.ICollection::get_IsSynchronized
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance object System.Collections.ICollection.get_SyncRoot()
		{
			.override [mscorlib]System.Collections.ICollection::get_SyncRoot
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			.override [mscorlib]System.Collections.IEnumerable::GetEnumerator
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void 'System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem>>.Add'(valuetype [mscorlib]'System.Collections.Generic.KeyValuePair`2'<class System.Activities.Presentation.Model.ModelItem,class System.Activities.Presentation.Model.ModelItem> item)
		{
			.override method instance void class [mscorlib]'System.Collections.Generic.ICollection`1'<valuetype [mscorlib]'System.Collections.Generic.KeyValuePair`2'<class System.Activities.Presentation.Model.ModelItem,class System.Activities.Presentation.Model.ModelItem>>::Add(!0)
			ret
		}
		.method private final virtual hidebysig newslot 
			instance bool 'System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem>>.Contains'(valuetype [mscorlib]'System.Collections.Generic.KeyValuePair`2'<class System.Activities.Presentation.Model.ModelItem,class System.Activities.Presentation.Model.ModelItem> item)
		{
			.override method instance bool class [mscorlib]'System.Collections.Generic.ICollection`1'<valuetype [mscorlib]'System.Collections.Generic.KeyValuePair`2'<class System.Activities.Presentation.Model.ModelItem,class System.Activities.Presentation.Model.ModelItem>>::Contains(!0)
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void 'System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem>>.CopyTo'(valuetype [mscorlib]'System.Collections.Generic.KeyValuePair`2'<class System.Activities.Presentation.Model.ModelItem,class System.Activities.Presentation.Model.ModelItem>[] 'array', int32 arrayIndex)
		{
			.override method instance void class [mscorlib]'System.Collections.Generic.ICollection`1'<valuetype [mscorlib]'System.Collections.Generic.KeyValuePair`2'<class System.Activities.Presentation.Model.ModelItem,class System.Activities.Presentation.Model.ModelItem>>::CopyTo(!0[], int32)
			ret
		}
		.method private final virtual hidebysig newslot 
			instance bool 'System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem>>.Remove'(valuetype [mscorlib]'System.Collections.Generic.KeyValuePair`2'<class System.Activities.Presentation.Model.ModelItem,class System.Activities.Presentation.Model.ModelItem> item)
		{
			.override method instance bool class [mscorlib]'System.Collections.Generic.ICollection`1'<valuetype [mscorlib]'System.Collections.Generic.KeyValuePair`2'<class System.Activities.Presentation.Model.ModelItem,class System.Activities.Presentation.Model.ModelItem>>::Remove(!0)
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty KeyProperty
		.event [System]System.Collections.Specialized.NotifyCollectionChangedEventHandler CollectionChanged
		{
			.addon instance void System.Activities.Presentation.Model.ModelItemDictionary::add_CollectionChanged(class [System]System.Collections.Specialized.NotifyCollectionChangedEventHandler)
			.removeon instance void System.Activities.Presentation.Model.ModelItemDictionary::remove_CollectionChanged(class [System]System.Collections.Specialized.NotifyCollectionChangedEventHandler)
		}
		.property instance int32 Count()
		{
			.get instance int32 System.Activities.Presentation.Model.ModelItemDictionary::get_Count()
		}
		.property instance bool IsFixedSize()
		{
			.get instance bool System.Activities.Presentation.Model.ModelItemDictionary::get_IsFixedSize()
		}
		.property instance bool IsReadOnly()
		{
			.get instance bool System.Activities.Presentation.Model.ModelItemDictionary::get_IsReadOnly()
		}
		.property instance bool IsSynchronized()
		{
			.get instance bool System.Activities.Presentation.Model.ModelItemDictionary::get_IsSynchronized()
		}
		.property instance class System.Activities.Presentation.Model.ModelItem Item(class System.Activities.Presentation.Model.ModelItem)
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Model.ModelItemDictionary::get_Item(class System.Activities.Presentation.Model.ModelItem)
			.set instance void System.Activities.Presentation.Model.ModelItemDictionary::set_Item(class System.Activities.Presentation.Model.ModelItem, class System.Activities.Presentation.Model.ModelItem)
		}
		.property instance class System.Activities.Presentation.Model.ModelItem Item(object)
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Model.ModelItemDictionary::get_Item(object)
			.set instance void System.Activities.Presentation.Model.ModelItemDictionary::set_Item(object, class System.Activities.Presentation.Model.ModelItem)
		}
		.property instance class [mscorlib]'System.Collections.Generic.ICollection`1'<class System.Activities.Presentation.Model.ModelItem> Keys()
		{
			.get instance class [mscorlib]'System.Collections.Generic.ICollection`1'<class System.Activities.Presentation.Model.ModelItem> System.Activities.Presentation.Model.ModelItemDictionary::get_Keys()
		}
		.property instance object SyncRoot()
		{
			.get instance object System.Activities.Presentation.Model.ModelItemDictionary::get_SyncRoot()
		}
		.property instance int32 System.Collections.ICollection.Count()
		{
			.get instance int32 System.Activities.Presentation.Model.ModelItemDictionary::System.Collections.ICollection.get_Count()
		}
		.property instance bool System.Collections.ICollection.IsSynchronized()
		{
			.get instance bool System.Activities.Presentation.Model.ModelItemDictionary::System.Collections.ICollection.get_IsSynchronized()
		}
		.property instance object System.Collections.ICollection.SyncRoot()
		{
			.get instance object System.Activities.Presentation.Model.ModelItemDictionary::System.Collections.ICollection.get_SyncRoot()
		}
		.property instance bool System.Collections.IDictionary.IsFixedSize()
		{
			.get instance bool System.Activities.Presentation.Model.ModelItemDictionary::System.Collections.IDictionary.get_IsFixedSize()
		}
		.property instance bool System.Collections.IDictionary.IsReadOnly()
		{
			.get instance bool System.Activities.Presentation.Model.ModelItemDictionary::System.Collections.IDictionary.get_IsReadOnly()
		}
		.property instance object System.Collections.IDictionary.Item(object)
		{
			.get instance object System.Activities.Presentation.Model.ModelItemDictionary::System.Collections.IDictionary.get_Item(object)
			.set instance void System.Activities.Presentation.Model.ModelItemDictionary::System.Collections.IDictionary.set_Item(object, object)
		}
		.property instance class [mscorlib]System.Collections.ICollection System.Collections.IDictionary.Keys()
		{
			.get instance class [mscorlib]System.Collections.ICollection System.Activities.Presentation.Model.ModelItemDictionary::System.Collections.IDictionary.get_Keys()
		}
		.property instance class [mscorlib]System.Collections.ICollection System.Collections.IDictionary.Values()
		{
			.get instance class [mscorlib]System.Collections.ICollection System.Activities.Presentation.Model.ModelItemDictionary::System.Collections.IDictionary.get_Values()
		}
		.property instance class [mscorlib]'System.Collections.Generic.ICollection`1'<class System.Activities.Presentation.Model.ModelItem> Values()
		{
			.get instance class [mscorlib]'System.Collections.Generic.ICollection`1'<class System.Activities.Presentation.Model.ModelItem> System.Activities.Presentation.Model.ModelItemDictionary::get_Values()
		}
	}
	.class private ModelItemDictionaryImpl
		extends System.Activities.Presentation.Model.ModelItemDictionary
		implements System.Activities.Presentation.Model.IModelTreeItem, [System]System.ComponentModel.ICustomTypeDescriptor
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = { string('Item') }
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.Model.ModelTreeManager modelTreeManager, class [mscorlib]System.Type itemType, object 'instance', class System.Activities.Presentation.Model.ModelItem parent)
		{
			ret
		}
		.method assembly hidebysig 
			instance void UpdateValue(object keyObj, object valueObj)
		{
			ret
		}
		.method assembly hidebysig 
			instance void UpdateKey(object oldKeyObj, object newKeyObj)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void add_CollectionChanged(class [System]System.Collections.Specialized.NotifyCollectionChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public virtual hidebysig specialname 
			instance void remove_CollectionChanged(class [System]System.Collections.Specialized.NotifyCollectionChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public virtual hidebysig specialname 
			instance void add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public virtual hidebysig specialname 
			instance void remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public virtual hidebysig specialname 
			instance int32 get_Count()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_IsReadOnly()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.ICollection`1'<class System.Activities.Presentation.Model.ModelItem> get_Keys()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.ICollection`1'<class System.Activities.Presentation.Model.ModelItem> get_Values()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [System]System.ComponentModel.AttributeCollection get_Attributes()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelProperty get_Content()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]System.Type get_ItemType()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Name(string 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_Parent()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_Root()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelPropertyCollection get_Properties()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelProperty get_Source()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [WindowsBase]System.Windows.DependencyObject get_View()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_ModelItem()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance class [mscorlib]'System.Collections.Generic.Dictionary`2'<string,class System.Activities.Presentation.Model.ModelItem> get_ModelPropertyStore()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance class System.Activities.Presentation.Model.ModelTreeManager get_ModelTreeManager()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> get_Parents()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelProperty> get_Sources()
		{
			ret
		}
		.method family hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelProperty get_NameProperty()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_Item(class System.Activities.Presentation.Model.ModelItem key)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Item(class System.Activities.Presentation.Model.ModelItem key, class System.Activities.Presentation.Model.ModelItem 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_Item(object key)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Item(object key, class System.Activities.Presentation.Model.ModelItem 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Add(class System.Activities.Presentation.Model.ModelItem key, class System.Activities.Presentation.Model.ModelItem 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance class System.Activities.Presentation.Model.ModelItem Add(object key, object 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Clear()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool ContainsKey(class System.Activities.Presentation.Model.ModelItem key)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool ContainsKey(object key)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]'System.Collections.Generic.IEnumerator`1'<valuetype [mscorlib]'System.Collections.Generic.KeyValuePair`2'<class System.Activities.Presentation.Model.ModelItem,class System.Activities.Presentation.Model.ModelItem>> GetEnumerator()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Remove(class System.Activities.Presentation.Model.ModelItem key)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Remove(object key)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool TryGetValue(class System.Activities.Presentation.Model.ModelItem key, [out] class System.Activities.Presentation.Model.ModelItem& 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool TryGetValue(object key, [out] class System.Activities.Presentation.Model.ModelItem& 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance class System.Activities.Presentation.Model.ModelEditingScope BeginEdit(string description, bool shouldApplyChangesImmediately)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class System.Activities.Presentation.Model.ModelEditingScope BeginEdit(bool shouldApplyChangesImmediately)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class System.Activities.Presentation.Model.ModelEditingScope BeginEdit(string description)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class System.Activities.Presentation.Model.ModelEditingScope BeginEdit()
		{
			ret
		}
		.method public virtual hidebysig 
			instance object GetCurrentValue()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void OnPropertyChanged(string propertyName)
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Activities.Presentation.Model.IModelTreeItem.SetParent(class System.Activities.Presentation.Model.ModelItem dataModelItem)
		{
			.override System.Activities.Presentation.Model.IModelTreeItem::SetParent
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Activities.Presentation.Model.IModelTreeItem.SetSource(class System.Activities.Presentation.Model.ModelProperty 'property')
		{
			.override System.Activities.Presentation.Model.IModelTreeItem::SetSource
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void SetCurrentView(class [WindowsBase]System.Windows.DependencyObject view)
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Activities.Presentation.Model.IModelTreeItem.RemoveParent(class System.Activities.Presentation.Model.ModelItem oldParent)
		{
			.override System.Activities.Presentation.Model.IModelTreeItem::RemoveParent
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> System.Activities.Presentation.Model.IModelTreeItem.get_ItemBackPointers()
		{
			.override System.Activities.Presentation.Model.IModelTreeItem::get_ItemBackPointers
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.BackPointer> System.Activities.Presentation.Model.IModelTreeItem.get_ExtraPropertyBackPointers()
		{
			.override System.Activities.Presentation.Model.IModelTreeItem::get_ExtraPropertyBackPointers
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Activities.Presentation.Model.IModelTreeItem.RemoveSource(class System.Activities.Presentation.Model.ModelProperty oldModelProperty)
		{
			.override System.Activities.Presentation.Model.IModelTreeItem::RemoveSource
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Activities.Presentation.Model.IModelTreeItem.RemoveSource(class System.Activities.Presentation.Model.ModelItem parent, string propertyName)
		{
			.override System.Activities.Presentation.Model.IModelTreeItem::RemoveSource
			ret
		}
		.method assembly hidebysig 
			instance void EditCore(class System.Activities.Presentation.Model.ModelItem key, class System.Activities.Presentation.Model.ModelItem 'value')
		{
			ret
		}
		.method assembly hidebysig 
			instance void AddCore(class System.Activities.Presentation.Model.ModelItem key, class System.Activities.Presentation.Model.ModelItem 'value')
		{
			ret
		}
		.method assembly hidebysig 
			instance void ClearCore()
		{
			ret
		}
		.method assembly hidebysig 
			instance void RemoveCore(class System.Activities.Presentation.Model.ModelItem key)
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [System]System.ComponentModel.AttributeCollection System.ComponentModel.ICustomTypeDescriptor.GetAttributes()
		{
			.override [System]System.ComponentModel.ICustomTypeDescriptor::GetAttributes
			ret
		}
		.method private final virtual hidebysig newslot 
			instance string System.ComponentModel.ICustomTypeDescriptor.GetClassName()
		{
			.override [System]System.ComponentModel.ICustomTypeDescriptor::GetClassName
			ret
		}
		.method private final virtual hidebysig newslot 
			instance string System.ComponentModel.ICustomTypeDescriptor.GetComponentName()
		{
			.override [System]System.ComponentModel.ICustomTypeDescriptor::GetComponentName
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [System]System.ComponentModel.TypeConverter System.ComponentModel.ICustomTypeDescriptor.GetConverter()
		{
			.override [System]System.ComponentModel.ICustomTypeDescriptor::GetConverter
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [System]System.ComponentModel.EventDescriptor System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent()
		{
			.override [System]System.ComponentModel.ICustomTypeDescriptor::GetDefaultEvent
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [System]System.ComponentModel.PropertyDescriptor System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty()
		{
			.override [System]System.ComponentModel.ICustomTypeDescriptor::GetDefaultProperty
			ret
		}
		.method private final virtual hidebysig newslot 
			instance object System.ComponentModel.ICustomTypeDescriptor.GetEditor(class [mscorlib]System.Type editorBaseType)
		{
			.override [System]System.ComponentModel.ICustomTypeDescriptor::GetEditor
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [System]System.ComponentModel.EventDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetEvents(class [mscorlib]System.Attribute[] attributes)
		{
			.override [System]System.ComponentModel.ICustomTypeDescriptor::GetEvents
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [System]System.ComponentModel.EventDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetEvents()
		{
			.override [System]System.ComponentModel.ICustomTypeDescriptor::GetEvents
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [System]System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetProperties(class [mscorlib]System.Attribute[] attributes)
		{
			.override [System]System.ComponentModel.ICustomTypeDescriptor::GetProperties
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [System]System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetProperties()
		{
			.override [System]System.ComponentModel.ICustomTypeDescriptor::GetProperties
			ret
		}
		.method private final virtual hidebysig newslot 
			instance object System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(class [System]System.ComponentModel.PropertyDescriptor pd)
		{
			.override [System]System.ComponentModel.ICustomTypeDescriptor::GetPropertyOwner
			ret
		}
		.field assembly class System.Activities.Presentation.Model.ModelItem updateKeySavedValue
		.event [System]System.Collections.Specialized.NotifyCollectionChangedEventHandler CollectionChanged
		{
			.addon instance void System.Activities.Presentation.Model.ModelItemDictionaryImpl::add_CollectionChanged(class [System]System.Collections.Specialized.NotifyCollectionChangedEventHandler)
			.removeon instance void System.Activities.Presentation.Model.ModelItemDictionaryImpl::remove_CollectionChanged(class [System]System.Collections.Specialized.NotifyCollectionChangedEventHandler)
		}
		.event [System]System.ComponentModel.PropertyChangedEventHandler PropertyChanged
		{
			.addon instance void System.Activities.Presentation.Model.ModelItemDictionaryImpl::add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
			.removeon instance void System.Activities.Presentation.Model.ModelItemDictionaryImpl::remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
		}
		.property instance class [System]System.ComponentModel.AttributeCollection Attributes()
		{
			.get instance class [System]System.ComponentModel.AttributeCollection System.Activities.Presentation.Model.ModelItemDictionaryImpl::get_Attributes()
		}
		.property instance class System.Activities.Presentation.Model.ModelProperty Content()
		{
			.get instance class System.Activities.Presentation.Model.ModelProperty System.Activities.Presentation.Model.ModelItemDictionaryImpl::get_Content()
		}
		.property instance int32 Count()
		{
			.get instance int32 System.Activities.Presentation.Model.ModelItemDictionaryImpl::get_Count()
		}
		.property instance bool IsReadOnly()
		{
			.get instance bool System.Activities.Presentation.Model.ModelItemDictionaryImpl::get_IsReadOnly()
		}
		.property instance class System.Activities.Presentation.Model.ModelItem Item(class System.Activities.Presentation.Model.ModelItem)
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Model.ModelItemDictionaryImpl::get_Item(class System.Activities.Presentation.Model.ModelItem)
			.set instance void System.Activities.Presentation.Model.ModelItemDictionaryImpl::set_Item(class System.Activities.Presentation.Model.ModelItem, class System.Activities.Presentation.Model.ModelItem)
		}
		.property instance class System.Activities.Presentation.Model.ModelItem Item(object)
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Model.ModelItemDictionaryImpl::get_Item(object)
			.set instance void System.Activities.Presentation.Model.ModelItemDictionaryImpl::set_Item(object, class System.Activities.Presentation.Model.ModelItem)
		}
		.property instance class [mscorlib]System.Type ItemType()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.Model.ModelItemDictionaryImpl::get_ItemType()
		}
		.property instance class [mscorlib]'System.Collections.Generic.ICollection`1'<class System.Activities.Presentation.Model.ModelItem> Keys()
		{
			.get instance class [mscorlib]'System.Collections.Generic.ICollection`1'<class System.Activities.Presentation.Model.ModelItem> System.Activities.Presentation.Model.ModelItemDictionaryImpl::get_Keys()
		}
		.property instance class System.Activities.Presentation.Model.ModelItem ModelItem()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Model.ModelItemDictionaryImpl::get_ModelItem()
		}
		.property instance class [mscorlib]'System.Collections.Generic.Dictionary`2'<string,class System.Activities.Presentation.Model.ModelItem> ModelPropertyStore()
		{
			.get instance class [mscorlib]'System.Collections.Generic.Dictionary`2'<string,class System.Activities.Presentation.Model.ModelItem> System.Activities.Presentation.Model.ModelItemDictionaryImpl::get_ModelPropertyStore()
		}
		.property instance class System.Activities.Presentation.Model.ModelTreeManager ModelTreeManager()
		{
			.get instance class System.Activities.Presentation.Model.ModelTreeManager System.Activities.Presentation.Model.ModelItemDictionaryImpl::get_ModelTreeManager()
		}
		.property instance string Name()
		{
			.get instance string System.Activities.Presentation.Model.ModelItemDictionaryImpl::get_Name()
			.set instance void System.Activities.Presentation.Model.ModelItemDictionaryImpl::set_Name(string)
		}
		.property instance class System.Activities.Presentation.Model.ModelProperty NameProperty()
		{
			.get instance class System.Activities.Presentation.Model.ModelProperty System.Activities.Presentation.Model.ModelItemDictionaryImpl::get_NameProperty()
		}
		.property instance class System.Activities.Presentation.Model.ModelItem Parent()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Model.ModelItemDictionaryImpl::get_Parent()
		}
		.property instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> Parents()
		{
			.get instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> System.Activities.Presentation.Model.ModelItemDictionaryImpl::get_Parents()
		}
		.property instance class System.Activities.Presentation.Model.ModelPropertyCollection Properties()
		{
			.get instance class System.Activities.Presentation.Model.ModelPropertyCollection System.Activities.Presentation.Model.ModelItemDictionaryImpl::get_Properties()
		}
		.property instance class System.Activities.Presentation.Model.ModelItem Root()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Model.ModelItemDictionaryImpl::get_Root()
		}
		.property instance class System.Activities.Presentation.Model.ModelProperty Source()
		{
			.get instance class System.Activities.Presentation.Model.ModelProperty System.Activities.Presentation.Model.ModelItemDictionaryImpl::get_Source()
		}
		.property instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelProperty> Sources()
		{
			.get instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelProperty> System.Activities.Presentation.Model.ModelItemDictionaryImpl::get_Sources()
		}
		.property instance class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.BackPointer> System.Activities.Presentation.Model.IModelTreeItem.ExtraPropertyBackPointers()
		{
			.get instance class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.BackPointer> System.Activities.Presentation.Model.ModelItemDictionaryImpl::System.Activities.Presentation.Model.IModelTreeItem.get_ExtraPropertyBackPointers()
		}
		.property instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> System.Activities.Presentation.Model.IModelTreeItem.ItemBackPointers()
		{
			.get instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> System.Activities.Presentation.Model.ModelItemDictionaryImpl::System.Activities.Presentation.Model.IModelTreeItem.get_ItemBackPointers()
		}
		.property instance class [mscorlib]'System.Collections.Generic.ICollection`1'<class System.Activities.Presentation.Model.ModelItem> Values()
		{
			.get instance class [mscorlib]'System.Collections.Generic.ICollection`1'<class System.Activities.Presentation.Model.ModelItem> System.Activities.Presentation.Model.ModelItemDictionaryImpl::get_Values()
		}
		.property instance class [WindowsBase]System.Windows.DependencyObject View()
		{
			.get instance class [WindowsBase]System.Windows.DependencyObject System.Activities.Presentation.Model.ModelItemDictionaryImpl::get_View()
		}
	}
	.class public abstract sealed ModelItemExtensions
		extends [mscorlib]System.Object
	{
		.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
		.method public static hidebysig 
			class System.Activities.Presentation.EditingContext GetEditingContext(class System.Activities.Presentation.Model.ModelItem modelItem)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
		.method assembly static hidebysig 
			class System.Activities.Presentation.Model.ModelItem FindParentModelItem(class System.Activities.Presentation.Model.ModelItem item, class [mscorlib]System.Type parentType)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
		.method assembly static hidebysig 
			bool SwitchKeys(class System.Activities.Presentation.Model.ModelItemDictionary dictionary, class System.Activities.Presentation.Model.ModelItem oldKey, class System.Activities.Presentation.Model.ModelItem newKey)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
		.method assembly static hidebysig 
			bool SwitchKeys(class System.Activities.Presentation.Model.ModelItemDictionary dictionary, object oldKey, object newKey, [out] class System.Activities.Presentation.Model.ModelItem& newKeyItem)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
		.method assembly static hidebysig 
			bool TryGetPropertyValue(class System.Activities.Presentation.Model.ModelItem item, [out] class System.Activities.Presentation.Model.ModelItemCollection& 'value', string[] path)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			.param [3]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method assembly static hidebysig 
			bool TryGetPropertyValue(class System.Activities.Presentation.Model.ModelItem item, [out] class System.Activities.Presentation.Model.ModelItemDictionary& 'value', string[] path)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			.param [3]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method assembly static hidebysig 
			bool TryGetPropertyValue(class System.Activities.Presentation.Model.ModelItem item, [out] class System.Activities.Presentation.Model.ModelItem& 'value', string[] path)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			.param [3]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method assembly static hidebysig 
			bool TrySetPropertyValue(class System.Activities.Presentation.Model.ModelItem item, object 'value', [out] class System.Activities.Presentation.Model.ModelItem& wrappedValue, string[] path)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			.param [4]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method assembly static hidebysig 
			bool HasAnnotation(class System.Activities.Presentation.Model.ModelItem modelItem)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			string GetModelPath(class System.Activities.Presentation.Model.ModelItem modelItem)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class System.Activities.Presentation.Model.ModelItem GetModelItemFromPath(string path, class System.Activities.Presentation.Model.ModelItem root)
		{
			ret
		}
		.method assembly static hidebysig 
			class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> GetParentEnumerator(class System.Activities.Presentation.Model.ModelItem item)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
		.method assembly static hidebysig 
			class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> GetParentEnumerator(class System.Activities.Presentation.Model.ModelItem item, class [mscorlib]'System.Func`2'<class System.Activities.Presentation.Model.ModelItem,bool> continueEnumerationPredicate)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
		.method assembly static hidebysig 
			string GetUniqueName(class System.Activities.Presentation.Model.ModelItemCollection collection, string nameDefaultPrefix, class [mscorlib]'System.Func`2'<class System.Activities.Presentation.Model.ModelItem,string> nameGetter)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
		.method assembly static hidebysig 
			string GetUniqueName(class System.Activities.Presentation.Model.ModelItemDictionary dictionary, string nameDefaultPrefix, class [mscorlib]'System.Func`2'<class System.Activities.Presentation.Model.ModelItem,string> nameGetter)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
		.method assembly static hidebysig 
			string GetUniqueName<'T'>(class [mscorlib]'System.Collections.Generic.IEnumerable`1'<!!0> collection, string nameDefaultPrefix, class [mscorlib]'System.Func`2'<!!0,string> nameGetter)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
		.method assembly static hidebysig 
			bool IsAssignableFrom<class 'T'>(class System.Activities.Presentation.Model.ModelItem item)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
		.method assembly static hidebysig 
			class [System.Activities]System.Activities.Activity GetRootActivity(class System.Activities.Presentation.Model.ModelItem item)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			bool IsParentOf(class System.Activities.Presentation.Model.ModelItem item, class System.Activities.Presentation.Model.ModelItem child)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			void Focus(class System.Activities.Presentation.Model.ModelItem item)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
		.method assembly static hidebysig 
			void Highlight(class System.Activities.Presentation.Model.ModelItem item)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
		.method assembly static hidebysig 
			void Highlight(class System.Activities.Presentation.Model.ModelItem item, valuetype [WindowsBase]System.Windows.Rect rectToBringIntoView)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			void Focus(class System.Activities.Presentation.Model.ModelItem item, int32 level)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
		.method assembly static hidebysig 
			class System.Activities.Presentation.Model.ModelItem FindParent(class System.Activities.Presentation.Model.ModelItem item, class [mscorlib]'System.Predicate`1'<class System.Activities.Presentation.Model.ModelItem> predicate)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
	}
	.class private abstract sealed ModelItemHelper
		extends [mscorlib]System.Object
	{
		.method assembly static hidebysig 
			class System.Activities.Presentation.Model.ModelEditingScope ModelItemBeginEdit(class System.Activities.Presentation.Model.ModelTreeManager modelTreeManager, string description, bool shouldApplyChangesImmediately)
		{
			ret
		}
		.method assembly static hidebysig 
			bool CanCreateImmediateEditingScope(class System.Activities.Presentation.Model.ModelItem modelItem)
		{
			ret
		}
		.method assembly static hidebysig 
			void TryCreateImmediateEditingScopeAndExecute(class System.Activities.Presentation.EditingContext context, string editingScopeDescription, class [mscorlib]'System.Action`1'<class System.Activities.Presentation.Model.EditingScope> modelEditingWork)
		{
			ret
		}
		.method assembly static hidebysig 
			class System.Activities.Presentation.Model.EditingScope TryCreateImmediateEditingScope(class System.Activities.Presentation.Model.ModelTreeManager manager, string editingScopeDescription)
		{
			ret
		}
	}
	.class private ModelItemImpl
		extends System.Activities.Presentation.Model.ModelItem
		implements System.Activities.Presentation.Model.IModelTreeItem, [System]System.ComponentModel.ICustomTypeDescriptor, [System.Core]System.Dynamic.IDynamicMetaObjectProvider
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.Model.ModelTreeManager modelTreeManager, class [mscorlib]System.Type itemType, object 'instance', class System.Activities.Presentation.Model.ModelItem parent)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public virtual hidebysig specialname 
			instance void remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [System]System.ComponentModel.AttributeCollection get_Attributes()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelProperty get_Content()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]System.Type get_ItemType()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_ModelItem()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Name(string 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_Parent()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelPropertyCollection get_Properties()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_Root()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelProperty get_Source()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [WindowsBase]System.Windows.DependencyObject get_View()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> get_Parents()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class [System]'System.Collections.ObjectModel.ReadOnlyObservableCollection`1'<class System.Activities.Presentation.Model.ModelItem> get_InternalParents()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelProperty> get_Sources()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class [System]'System.Collections.ObjectModel.ReadOnlyObservableCollection`1'<class System.Activities.Presentation.Model.ModelProperty> get_InternalSources()
		{
			ret
		}
		.method family hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelProperty get_NameProperty()
		{
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance class [mscorlib]'System.Collections.Generic.Dictionary`2'<string,class System.Activities.Presentation.Model.ModelItem> System.Activities.Presentation.Model.IModelTreeItem.get_ModelPropertyStore()
		{
			.override System.Activities.Presentation.Model.IModelTreeItem::get_ModelPropertyStore
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance class System.Activities.Presentation.Model.ModelTreeManager System.Activities.Presentation.Model.IModelTreeItem.get_ModelTreeManager()
		{
			.override System.Activities.Presentation.Model.IModelTreeItem::get_ModelTreeManager
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Activities.Presentation.Model.IModelTreeItem.SetCurrentView(class [WindowsBase]System.Windows.DependencyObject view)
		{
			.override System.Activities.Presentation.Model.IModelTreeItem::SetCurrentView
			ret
		}
		.method public virtual hidebysig 
			instance class System.Activities.Presentation.Model.ModelEditingScope BeginEdit(string description, bool shouldApplyChangesImmediately)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class System.Activities.Presentation.Model.ModelEditingScope BeginEdit(bool shouldApplyChangesImmediately)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class System.Activities.Presentation.Model.ModelEditingScope BeginEdit(string description)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class System.Activities.Presentation.Model.ModelEditingScope BeginEdit()
		{
			ret
		}
		.method public virtual hidebysig 
			instance object GetCurrentValue()
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Activities.Presentation.Model.IModelTreeItem.OnPropertyChanged(string propertyName)
		{
			.override System.Activities.Presentation.Model.IModelTreeItem::OnPropertyChanged
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Activities.Presentation.Model.IModelTreeItem.SetParent(class System.Activities.Presentation.Model.ModelItem dataModelItem)
		{
			.override System.Activities.Presentation.Model.IModelTreeItem::SetParent
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> System.Activities.Presentation.Model.IModelTreeItem.get_ItemBackPointers()
		{
			.override System.Activities.Presentation.Model.IModelTreeItem::get_ItemBackPointers
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.BackPointer> System.Activities.Presentation.Model.IModelTreeItem.get_ExtraPropertyBackPointers()
		{
			.override System.Activities.Presentation.Model.IModelTreeItem::get_ExtraPropertyBackPointers
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Activities.Presentation.Model.IModelTreeItem.SetSource(class System.Activities.Presentation.Model.ModelProperty 'property')
		{
			.override System.Activities.Presentation.Model.IModelTreeItem::SetSource
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [System]System.ComponentModel.AttributeCollection System.ComponentModel.ICustomTypeDescriptor.GetAttributes()
		{
			.override [System]System.ComponentModel.ICustomTypeDescriptor::GetAttributes
			ret
		}
		.method private final virtual hidebysig newslot 
			instance string System.ComponentModel.ICustomTypeDescriptor.GetClassName()
		{
			.override [System]System.ComponentModel.ICustomTypeDescriptor::GetClassName
			ret
		}
		.method private final virtual hidebysig newslot 
			instance string System.ComponentModel.ICustomTypeDescriptor.GetComponentName()
		{
			.override [System]System.ComponentModel.ICustomTypeDescriptor::GetComponentName
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [System]System.ComponentModel.TypeConverter System.ComponentModel.ICustomTypeDescriptor.GetConverter()
		{
			.override [System]System.ComponentModel.ICustomTypeDescriptor::GetConverter
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [System]System.ComponentModel.EventDescriptor System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent()
		{
			.override [System]System.ComponentModel.ICustomTypeDescriptor::GetDefaultEvent
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [System]System.ComponentModel.PropertyDescriptor System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty()
		{
			.override [System]System.ComponentModel.ICustomTypeDescriptor::GetDefaultProperty
			ret
		}
		.method private final virtual hidebysig newslot 
			instance object System.ComponentModel.ICustomTypeDescriptor.GetEditor(class [mscorlib]System.Type editorBaseType)
		{
			.override [System]System.ComponentModel.ICustomTypeDescriptor::GetEditor
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [System]System.ComponentModel.EventDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetEvents(class [mscorlib]System.Attribute[] attributes)
		{
			.override [System]System.ComponentModel.ICustomTypeDescriptor::GetEvents
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [System]System.ComponentModel.EventDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetEvents()
		{
			.override [System]System.ComponentModel.ICustomTypeDescriptor::GetEvents
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [System]System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetProperties(class [mscorlib]System.Attribute[] attributes)
		{
			.override [System]System.ComponentModel.ICustomTypeDescriptor::GetProperties
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [System]System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetProperties()
		{
			.override [System]System.ComponentModel.ICustomTypeDescriptor::GetProperties
			ret
		}
		.method private final virtual hidebysig newslot 
			instance object System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(class [System]System.ComponentModel.PropertyDescriptor pd)
		{
			.override [System]System.ComponentModel.ICustomTypeDescriptor::GetPropertyOwner
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Activities.Presentation.Model.IModelTreeItem.RemoveParent(class System.Activities.Presentation.Model.ModelItem oldParent)
		{
			.override System.Activities.Presentation.Model.IModelTreeItem::RemoveParent
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Activities.Presentation.Model.IModelTreeItem.RemoveSource(class System.Activities.Presentation.Model.ModelProperty oldModelProperty)
		{
			.override System.Activities.Presentation.Model.IModelTreeItem::RemoveSource
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Activities.Presentation.Model.IModelTreeItem.RemoveSource(class System.Activities.Presentation.Model.ModelItem parent, string propertyName)
		{
			.override System.Activities.Presentation.Model.IModelTreeItem::RemoveSource
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnPropertyChanged(string propertyName)
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [System.Core]System.Dynamic.DynamicMetaObject System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(class [System.Core]System.Linq.Expressions.Expression parameter)
		{
			.override [System.Core]System.Dynamic.IDynamicMetaObjectProvider::GetMetaObject
			ret
		}
		.method public hidebysig 
			instance object SetPropertyValue(string propertyName, object val)
		{
			ret
		}
		.method public hidebysig 
			instance object GetPropertyValue(string propertyName)
		{
			ret
		}
		.field assembly class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.Model.ModelItem> parents
		.event [System]System.ComponentModel.PropertyChangedEventHandler PropertyChanged
		{
			.addon instance void System.Activities.Presentation.Model.ModelItemImpl::add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
			.removeon instance void System.Activities.Presentation.Model.ModelItemImpl::remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
		}
		.property instance class [System]System.ComponentModel.AttributeCollection Attributes()
		{
			.get instance class [System]System.ComponentModel.AttributeCollection System.Activities.Presentation.Model.ModelItemImpl::get_Attributes()
		}
		.property instance class System.Activities.Presentation.Model.ModelProperty Content()
		{
			.get instance class System.Activities.Presentation.Model.ModelProperty System.Activities.Presentation.Model.ModelItemImpl::get_Content()
		}
		.property instance class [System]'System.Collections.ObjectModel.ReadOnlyObservableCollection`1'<class System.Activities.Presentation.Model.ModelItem> InternalParents()
		{
			.get instance class [System]'System.Collections.ObjectModel.ReadOnlyObservableCollection`1'<class System.Activities.Presentation.Model.ModelItem> System.Activities.Presentation.Model.ModelItemImpl::get_InternalParents()
		}
		.property instance class [System]'System.Collections.ObjectModel.ReadOnlyObservableCollection`1'<class System.Activities.Presentation.Model.ModelProperty> InternalSources()
		{
			.get instance class [System]'System.Collections.ObjectModel.ReadOnlyObservableCollection`1'<class System.Activities.Presentation.Model.ModelProperty> System.Activities.Presentation.Model.ModelItemImpl::get_InternalSources()
		}
		.property instance class [mscorlib]System.Type ItemType()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.Model.ModelItemImpl::get_ItemType()
		}
		.property instance class System.Activities.Presentation.Model.ModelItem ModelItem()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Model.ModelItemImpl::get_ModelItem()
		}
		.property instance string Name()
		{
			.get instance string System.Activities.Presentation.Model.ModelItemImpl::get_Name()
			.set instance void System.Activities.Presentation.Model.ModelItemImpl::set_Name(string)
		}
		.property instance class System.Activities.Presentation.Model.ModelProperty NameProperty()
		{
			.get instance class System.Activities.Presentation.Model.ModelProperty System.Activities.Presentation.Model.ModelItemImpl::get_NameProperty()
		}
		.property instance class System.Activities.Presentation.Model.ModelItem Parent()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Model.ModelItemImpl::get_Parent()
		}
		.property instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> Parents()
		{
			.get instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> System.Activities.Presentation.Model.ModelItemImpl::get_Parents()
		}
		.property instance class System.Activities.Presentation.Model.ModelPropertyCollection Properties()
		{
			.get instance class System.Activities.Presentation.Model.ModelPropertyCollection System.Activities.Presentation.Model.ModelItemImpl::get_Properties()
		}
		.property instance class System.Activities.Presentation.Model.ModelItem Root()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Model.ModelItemImpl::get_Root()
		}
		.property instance class System.Activities.Presentation.Model.ModelProperty Source()
		{
			.get instance class System.Activities.Presentation.Model.ModelProperty System.Activities.Presentation.Model.ModelItemImpl::get_Source()
		}
		.property instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelProperty> Sources()
		{
			.get instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelProperty> System.Activities.Presentation.Model.ModelItemImpl::get_Sources()
		}
		.property instance class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.BackPointer> System.Activities.Presentation.Model.IModelTreeItem.ExtraPropertyBackPointers()
		{
			.get instance class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.BackPointer> System.Activities.Presentation.Model.ModelItemImpl::System.Activities.Presentation.Model.IModelTreeItem.get_ExtraPropertyBackPointers()
		}
		.property instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> System.Activities.Presentation.Model.IModelTreeItem.ItemBackPointers()
		{
			.get instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> System.Activities.Presentation.Model.ModelItemImpl::System.Activities.Presentation.Model.IModelTreeItem.get_ItemBackPointers()
		}
		.property instance class [mscorlib]'System.Collections.Generic.Dictionary`2'<string,class System.Activities.Presentation.Model.ModelItem> System.Activities.Presentation.Model.IModelTreeItem.ModelPropertyStore()
		{
			.get instance class [mscorlib]'System.Collections.Generic.Dictionary`2'<string,class System.Activities.Presentation.Model.ModelItem> System.Activities.Presentation.Model.ModelItemImpl::System.Activities.Presentation.Model.IModelTreeItem.get_ModelPropertyStore()
		}
		.property instance class System.Activities.Presentation.Model.ModelTreeManager System.Activities.Presentation.Model.IModelTreeItem.ModelTreeManager()
		{
			.get instance class System.Activities.Presentation.Model.ModelTreeManager System.Activities.Presentation.Model.ModelItemImpl::System.Activities.Presentation.Model.IModelTreeItem.get_ModelTreeManager()
		}
		.property instance class [WindowsBase]System.Windows.DependencyObject View()
		{
			.get instance class [WindowsBase]System.Windows.DependencyObject System.Activities.Presentation.Model.ModelItemImpl::get_View()
		}
	}
	.class private ModelItemsAddedEventArgs
		extends [mscorlib]System.EventArgs
	{
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> modelItemsAdded)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> get_ModelItemsAdded()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.property instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> ModelItemsAdded()
		{
			.get instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> System.Activities.Presentation.Model.ModelItemsAddedEventArgs::get_ModelItemsAdded()
		}
	}
	.class private ModelItemsRemovedEventArgs
		extends [mscorlib]System.EventArgs
	{
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> modelItemsRemoved)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> get_ModelItemsRemoved()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.property instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> ModelItemsRemoved()
		{
			.get instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> System.Activities.Presentation.Model.ModelItemsRemovedEventArgs::get_ModelItemsRemoved()
		}
	}
	.class public abstract 'ModelMemberCollection`2'<'TItemType', 'TFindType'>
		extends [mscorlib]System.Object
		implements class [mscorlib]'System.Collections.Generic.IEnumerable`1'<!0>, [mscorlib]System.Collections.IEnumerable
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = { string('Item') }
		.method assembly hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance !0 get_Item(string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance !0 get_Item(!1 'value')
		{
			ret
		}
		.method public hidebysig 
			instance !0 Find(string name)
		{
			ret
		}
		.method family virtual hidebysig newslot abstract 
			instance !0 Find(string name, bool throwOnError)
		{
		}
		.method public hidebysig 
			instance !0 Find(!1 'value')
		{
			ret
		}
		.method family virtual hidebysig newslot abstract 
			instance !0 Find(!1 'value', bool throwOnError)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]'System.Collections.Generic.IEnumerator`1'<!0> GetEnumerator()
		{
		}
		.method private final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			.override [mscorlib]System.Collections.IEnumerable::GetEnumerator
			ret
		}
		.property instance !0 Item(string)
		{
			.get instance !0 'System.Activities.Presentation.Model.ModelMemberCollection`2'::get_Item(string)
		}
		.property instance !0 Item(!1)
		{
			.get instance !0 'System.Activities.Presentation.Model.ModelMemberCollection`2'::get_Item(!1)
		}
	}
	.class public abstract ModelProperty
		extends [mscorlib]System.Object
	{
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class [System]System.ComponentModel.AttributeCollection get_Attributes()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.Activities.Presentation.Model.ModelItemCollection get_Collection()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance object get_ComputedValue()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void set_ComputedValue(object 'value')
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class [System]System.ComponentModel.TypeConverter get_Converter()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class [mscorlib]System.Type get_AttachedOwnerType()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance object get_DefaultValue()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.Activities.Presentation.Model.ModelItemDictionary get_Dictionary()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_IsBrowsable()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_IsCollection()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_IsDictionary()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_IsReadOnly()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_IsSet()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_IsAttached()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_Value()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance string get_Name()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_Parent()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class [mscorlib]System.Type get_PropertyType()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void ClearValue()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.Activities.Presentation.Model.ModelItem SetValue(object 'value')
		{
		}
		.method assembly virtual hidebysig newslot strict specialname 
			instance string get_Reference()
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict 
			instance void ClearReference()
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict 
			instance void SetReference(string sourceProperty)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_Equality(class System.Activities.Presentation.Model.ModelProperty first, class System.Activities.Presentation.Model.ModelProperty second)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_Inequality(class System.Activities.Presentation.Model.ModelProperty first, class System.Activities.Presentation.Model.ModelProperty second)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object obj)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.property instance class [mscorlib]System.Type AttachedOwnerType()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.Model.ModelProperty::get_AttachedOwnerType()
		}
		.property instance class [System]System.ComponentModel.AttributeCollection Attributes()
		{
			.get instance class [System]System.ComponentModel.AttributeCollection System.Activities.Presentation.Model.ModelProperty::get_Attributes()
		}
		.property instance class System.Activities.Presentation.Model.ModelItemCollection Collection()
		{
			.get instance class System.Activities.Presentation.Model.ModelItemCollection System.Activities.Presentation.Model.ModelProperty::get_Collection()
		}
		.property instance object ComputedValue()
		{
			.get instance object System.Activities.Presentation.Model.ModelProperty::get_ComputedValue()
			.set instance void System.Activities.Presentation.Model.ModelProperty::set_ComputedValue(object)
		}
		.property instance class [System]System.ComponentModel.TypeConverter Converter()
		{
			.get instance class [System]System.ComponentModel.TypeConverter System.Activities.Presentation.Model.ModelProperty::get_Converter()
		}
		.property instance object DefaultValue()
		{
			.get instance object System.Activities.Presentation.Model.ModelProperty::get_DefaultValue()
		}
		.property instance class System.Activities.Presentation.Model.ModelItemDictionary Dictionary()
		{
			.get instance class System.Activities.Presentation.Model.ModelItemDictionary System.Activities.Presentation.Model.ModelProperty::get_Dictionary()
		}
		.property instance bool IsAttached()
		{
			.get instance bool System.Activities.Presentation.Model.ModelProperty::get_IsAttached()
		}
		.property instance bool IsBrowsable()
		{
			.get instance bool System.Activities.Presentation.Model.ModelProperty::get_IsBrowsable()
		}
		.property instance bool IsCollection()
		{
			.get instance bool System.Activities.Presentation.Model.ModelProperty::get_IsCollection()
		}
		.property instance bool IsDictionary()
		{
			.get instance bool System.Activities.Presentation.Model.ModelProperty::get_IsDictionary()
		}
		.property instance bool IsReadOnly()
		{
			.get instance bool System.Activities.Presentation.Model.ModelProperty::get_IsReadOnly()
		}
		.property instance bool IsSet()
		{
			.get instance bool System.Activities.Presentation.Model.ModelProperty::get_IsSet()
		}
		.property instance string Name()
		{
			.get instance string System.Activities.Presentation.Model.ModelProperty::get_Name()
		}
		.property instance class System.Activities.Presentation.Model.ModelItem Parent()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Model.ModelProperty::get_Parent()
		}
		.property instance class [mscorlib]System.Type PropertyType()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.Model.ModelProperty::get_PropertyType()
		}
		.property instance string Reference()
		{
			.get instance string System.Activities.Presentation.Model.ModelProperty::get_Reference()
		}
		.property instance class System.Activities.Presentation.Model.ModelItem Value()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Model.ModelProperty::get_Value()
		}
	}
	.class public abstract ModelPropertyCollection
		extends class 'System.Activities.Presentation.Model.ModelMemberCollection`2'<class System.Activities.Presentation.Model.ModelProperty,class [WindowsBase]System.Windows.DependencyProperty>
	{
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private ModelPropertyCollectionImpl
		extends System.Activities.Presentation.Model.ModelPropertyCollection
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.Model.ModelItem parent)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]'System.Collections.Generic.IEnumerator`1'<class System.Activities.Presentation.Model.ModelProperty> GetEnumerator()
		{
			ret
		}
		.method family virtual hidebysig 
			instance class System.Activities.Presentation.Model.ModelProperty Find(class [WindowsBase]System.Windows.DependencyProperty 'value', bool throwOnError)
		{
			ret
		}
		.method family virtual hidebysig 
			instance class System.Activities.Presentation.Model.ModelProperty Find(string name, bool throwOnError)
		{
			ret
		}
	}
	.class private ModelPropertyDescriptor
		extends [System]System.ComponentModel.PropertyDescriptor
	{
		.method assembly hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.Model.ModelProperty itemProperty)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [System]System.ComponentModel.AttributeCollection get_Attributes()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [System]System.ComponentModel.TypeConverter get_Converter()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_IsBrowsable()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]System.Type get_ComponentType()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_IsReadOnly()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]System.Type get_PropertyType()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [System]System.ComponentModel.PropertyDescriptorCollection GetChildProperties(object 'instance', class [mscorlib]System.Attribute[] 'filter')
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool CanResetValue(object component)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object GetEditor(class [mscorlib]System.Type editorBaseType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object GetValue(object component)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void ResetValue(object component)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void SetValue(object component, object 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool ShouldSerializeValue(object component)
		{
			ret
		}
		.property instance class [System]System.ComponentModel.AttributeCollection Attributes()
		{
			.get instance class [System]System.ComponentModel.AttributeCollection System.Activities.Presentation.Model.ModelPropertyDescriptor::get_Attributes()
		}
		.property instance class [mscorlib]System.Type ComponentType()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.Model.ModelPropertyDescriptor::get_ComponentType()
		}
		.property instance class [System]System.ComponentModel.TypeConverter Converter()
		{
			.get instance class [System]System.ComponentModel.TypeConverter System.Activities.Presentation.Model.ModelPropertyDescriptor::get_Converter()
		}
		.property instance bool IsBrowsable()
		{
			.get instance bool System.Activities.Presentation.Model.ModelPropertyDescriptor::get_IsBrowsable()
		}
		.property instance bool IsReadOnly()
		{
			.get instance bool System.Activities.Presentation.Model.ModelPropertyDescriptor::get_IsReadOnly()
		}
		.property instance class [mscorlib]System.Type PropertyType()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.Model.ModelPropertyDescriptor::get_PropertyType()
		}
	}
	.class private ModelPropertyImpl
		extends System.Activities.Presentation.Model.ModelProperty
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.Model.ModelItem parent, class [System]System.ComponentModel.PropertyDescriptor propertyDescriptor, bool isAttached)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]System.Type get_AttachedOwnerType()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [System]System.ComponentModel.AttributeCollection get_Attributes()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItemCollection get_Collection()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance object get_ComputedValue()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_ComputedValue(object 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [System]System.ComponentModel.TypeConverter get_Converter()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance object get_DefaultValue()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItemDictionary get_Dictionary()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_IsAttached()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_IsBrowsable()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_IsCollection()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_IsDictionary()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_IsReadOnly()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_IsSet()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_Parent()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]System.Type get_PropertyType()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_Value()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class [System]System.ComponentModel.PropertyDescriptor get_PropertyDescriptor()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void ClearValue()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class System.Activities.Presentation.Model.ModelItem SetValue(object 'value')
		{
			ret
		}
		.method assembly virtual hidebysig strict specialname 
			instance string get_Reference()
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance void ClearReference()
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance void SetReference(string sourceProperty)
		{
			ret
		}
		.method assembly hidebysig 
			instance object SetValueCore(class System.Activities.Presentation.Model.ModelItem newValueModelItem)
		{
			ret
		}
		.property instance class [mscorlib]System.Type AttachedOwnerType()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.Model.ModelPropertyImpl::get_AttachedOwnerType()
		}
		.property instance class [System]System.ComponentModel.AttributeCollection Attributes()
		{
			.get instance class [System]System.ComponentModel.AttributeCollection System.Activities.Presentation.Model.ModelPropertyImpl::get_Attributes()
		}
		.property instance class System.Activities.Presentation.Model.ModelItemCollection Collection()
		{
			.get instance class System.Activities.Presentation.Model.ModelItemCollection System.Activities.Presentation.Model.ModelPropertyImpl::get_Collection()
		}
		.property instance object ComputedValue()
		{
			.get instance object System.Activities.Presentation.Model.ModelPropertyImpl::get_ComputedValue()
			.set instance void System.Activities.Presentation.Model.ModelPropertyImpl::set_ComputedValue(object)
		}
		.property instance class [System]System.ComponentModel.TypeConverter Converter()
		{
			.get instance class [System]System.ComponentModel.TypeConverter System.Activities.Presentation.Model.ModelPropertyImpl::get_Converter()
		}
		.property instance object DefaultValue()
		{
			.get instance object System.Activities.Presentation.Model.ModelPropertyImpl::get_DefaultValue()
		}
		.property instance class System.Activities.Presentation.Model.ModelItemDictionary Dictionary()
		{
			.get instance class System.Activities.Presentation.Model.ModelItemDictionary System.Activities.Presentation.Model.ModelPropertyImpl::get_Dictionary()
		}
		.property instance bool IsAttached()
		{
			.get instance bool System.Activities.Presentation.Model.ModelPropertyImpl::get_IsAttached()
		}
		.property instance bool IsBrowsable()
		{
			.get instance bool System.Activities.Presentation.Model.ModelPropertyImpl::get_IsBrowsable()
		}
		.property instance bool IsCollection()
		{
			.get instance bool System.Activities.Presentation.Model.ModelPropertyImpl::get_IsCollection()
		}
		.property instance bool IsDictionary()
		{
			.get instance bool System.Activities.Presentation.Model.ModelPropertyImpl::get_IsDictionary()
		}
		.property instance bool IsReadOnly()
		{
			.get instance bool System.Activities.Presentation.Model.ModelPropertyImpl::get_IsReadOnly()
		}
		.property instance bool IsSet()
		{
			.get instance bool System.Activities.Presentation.Model.ModelPropertyImpl::get_IsSet()
		}
		.property instance string Name()
		{
			.get instance string System.Activities.Presentation.Model.ModelPropertyImpl::get_Name()
		}
		.property instance class System.Activities.Presentation.Model.ModelItem Parent()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Model.ModelPropertyImpl::get_Parent()
		}
		.property instance class [System]System.ComponentModel.PropertyDescriptor PropertyDescriptor()
		{
			.get instance class [System]System.ComponentModel.PropertyDescriptor System.Activities.Presentation.Model.ModelPropertyImpl::get_PropertyDescriptor()
		}
		.property instance class [mscorlib]System.Type PropertyType()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.Model.ModelPropertyImpl::get_PropertyType()
		}
		.property instance string Reference()
		{
			.get instance string System.Activities.Presentation.Model.ModelPropertyImpl::get_Reference()
		}
		.property instance class System.Activities.Presentation.Model.ModelItem Value()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Model.ModelPropertyImpl::get_Value()
		}
	}
	.class private ModelSearchServiceImpl
		extends System.Activities.Presentation.Services.ModelSearchService
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.WorkflowDesigner designer)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class System.Activities.Presentation.Model.TextImage GenerateTextImage()
		{
			ret
		}
		.method assembly hidebysig 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> GetItemsOnDesigner(bool preOrder, bool excludeRoot, bool excludeErrorActivity, bool excludeExpression, bool includeOtherObjects)
		{
			ret
		}
		.method assembly static hidebysig 
			string ExpressionToString(object expression)
		{
			ret
		}
		.method public hidebysig 
			instance class System.Activities.Presentation.Model.ModelItem FindModelItem(int32 startLine, int32 startColumn, int32 endLine, int32 endColumn)
		{
			ret
		}
		.method public hidebysig 
			instance class System.Activities.Presentation.Model.ModelItem FindModelItemOfViewState(int32 startLine, int32 startColumn, int32 endLine, int32 endColumn)
		{
			ret
		}
		.method public hidebysig 
			instance class [System.Activities]System.Activities.Debugger.SourceLocation FindSourceLocation(class System.Activities.Presentation.Model.ModelItem modelItem)
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<object> GetObjectsWithSourceLocation()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool NavigateTo(int32 startLine, int32 startColumn, int32 endLine, int32 endColumn)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool NavigateTo(int32 location)
		{
			ret
		}
		.method public hidebysig 
			instance bool NavigateTo(class System.Activities.Presentation.Model.ModelItem itemToFocus)
		{
			ret
		}
	}
	.class private ModelServiceImpl
		extends System.Activities.Presentation.Services.ModelService
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.Model.ModelTreeManager modelTreeManager)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void add_ModelChanged(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.Services.ModelChangedEventArgs> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public virtual hidebysig specialname 
			instance void remove_ModelChanged(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.Services.ModelChangedEventArgs> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_Root()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> Find(class System.Activities.Presentation.Model.ModelItem startingItem, class [mscorlib]'System.Predicate`1'<class [mscorlib]System.Type> match)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> Find(class System.Activities.Presentation.Model.ModelItem startingItem, class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public virtual hidebysig 
			instance class System.Activities.Presentation.Model.ModelItem FromName(class System.Activities.Presentation.Model.ModelItem scope, string name, valuetype [mscorlib]System.StringComparison comparison)
		{
			ret
		}
		.method assembly hidebysig 
			instance void OnModelItemAdded(class System.Activities.Presentation.Model.ModelItem modelItem, class System.Activities.Presentation.Services.ModelChangeInfo changeInfo)
		{
			ret
		}
		.method assembly hidebysig 
			instance void OnModelItemRemoved(class System.Activities.Presentation.Model.ModelItem modelItem, class System.Activities.Presentation.Services.ModelChangeInfo changInfo)
		{
			ret
		}
		.method assembly hidebysig 
			instance void EmitModelChangeInfo(class System.Activities.Presentation.Services.ModelChangeInfo changInfo)
		{
			ret
		}
		.method assembly hidebysig 
			instance void OnModelItemsRemoved(class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> modelItems)
		{
			ret
		}
		.method assembly hidebysig 
			instance void OnModelPropertyChanged(class System.Activities.Presentation.Model.ModelProperty 'property', class System.Activities.Presentation.Services.ModelChangeInfo changeInfo)
		{
			ret
		}
		.method family virtual hidebysig 
			instance class System.Activities.Presentation.Model.ModelItem CreateItem(object 'instance')
		{
			ret
		}
		.method family virtual hidebysig 
			instance class System.Activities.Presentation.Model.ModelItem CreateItem(class [mscorlib]System.Type itemType, valuetype System.Activities.Presentation.Model.CreateOptions options, object[] arguments)
		{
			.param [3]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method family virtual hidebysig 
			instance class System.Activities.Presentation.Model.ModelItem CreateStaticMemberItem(class [mscorlib]System.Type 'type', string memberName)
		{
			ret
		}
		.method assembly hidebysig 
			instance class System.Activities.Presentation.Model.ModelItem WrapAsModelItem(object 'instance')
		{
			ret
		}
		.event class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.Services.ModelChangedEventArgs> ModelChanged
		{
			.addon instance void System.Activities.Presentation.Model.ModelServiceImpl::add_ModelChanged(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.Services.ModelChangedEventArgs>)
			.removeon instance void System.Activities.Presentation.Model.ModelServiceImpl::remove_ModelChanged(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.Services.ModelChangedEventArgs>)
		}
		.property instance class System.Activities.Presentation.Model.ModelItem Root()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Model.ModelServiceImpl::get_Root()
		}
	}
	.class private ModelTreeItemHelper
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.BackPointer> get_ExtraPropertyBackPointers()
		{
			ret
		}
		.method public hidebysig 
			instance void RemoveExtraPropertyBackPointer(class System.Activities.Presentation.Model.ModelItem parent, string propertyName)
		{
			ret
		}
		.property instance class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.BackPointer> ExtraPropertyBackPointers()
		{
			.get instance class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.BackPointer> System.Activities.Presentation.Model.ModelTreeItemHelper::get_ExtraPropertyBackPointers()
		}
	}
	.class public ModelTreeManager
		extends [mscorlib]System.Object
	{
		.class nested assembly ModelGraphManager
			extends class 'System.Activities.Presentation.Model.GraphManager`3'<class System.Activities.Presentation.Model.ModelItem,class System.Activities.Presentation.Model.Edge,class System.Activities.Presentation.Model.BackPointer>
		{
			.method public hidebysig specialname 
				instance void .ctor(class System.Activities.Presentation.Model.ModelTreeManager modelTreeManager)
			{
				ret
			}
			.method public hidebysig 
				instance void OnPropertyEdgeAdded(string propertyName, class System.Activities.Presentation.Model.ModelItem from, class System.Activities.Presentation.Model.ModelItem 'to')
			{
				ret
			}
			.method public hidebysig 
				instance void OnItemEdgeAdded(class System.Activities.Presentation.Model.ModelItem from, class System.Activities.Presentation.Model.ModelItem 'to')
			{
				ret
			}
			.method public hidebysig 
				instance void OnPropertyEdgeRemoved(string propertyName, class System.Activities.Presentation.Model.ModelItem from, class System.Activities.Presentation.Model.ModelItem 'to')
			{
				ret
			}
			.method public hidebysig 
				instance void OnItemEdgeRemoved(class System.Activities.Presentation.Model.ModelItem from, class System.Activities.Presentation.Model.ModelItem 'to')
			{
				ret
			}
			.method public hidebysig 
				instance void OnRootChanged(class System.Activities.Presentation.Model.ModelItem oldRoot, class System.Activities.Presentation.Model.ModelItem newRoot)
			{
				ret
			}
			.method family virtual hidebysig specialname 
				instance class System.Activities.Presentation.Model.ModelItem get_Root()
			{
				ret
			}
			.method family virtual hidebysig 
				instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> GetVertices()
			{
				ret
			}
			.method family virtual hidebysig 
				instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.Edge> GetOutEdges(class System.Activities.Presentation.Model.ModelItem vertex)
			{
				ret
			}
			.method family virtual hidebysig 
				instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.BackPointer> GetBackPointers(class System.Activities.Presentation.Model.ModelItem vertex)
			{
				ret
			}
			.method family virtual hidebysig 
				instance class System.Activities.Presentation.Model.ModelItem GetDestinationVertexFromEdge(class System.Activities.Presentation.Model.Edge edge)
			{
				ret
			}
			.method family virtual hidebysig 
				instance class System.Activities.Presentation.Model.ModelItem GetSourceVertexFromEdge(class System.Activities.Presentation.Model.Edge edge)
			{
				ret
			}
			.method family virtual hidebysig 
				instance class System.Activities.Presentation.Model.ModelItem GetDestinationVertexFromBackPointer(class System.Activities.Presentation.Model.BackPointer backPointer)
			{
				ret
			}
			.method family virtual hidebysig 
				instance void RemoveAssociatedBackPointer(class System.Activities.Presentation.Model.Edge edge)
			{
				ret
			}
			.method family virtual hidebysig 
				instance void AddAssociatedBackPointer(class System.Activities.Presentation.Model.Edge edge)
			{
				ret
			}
			.method family virtual hidebysig 
				instance bool HasBackPointer(class System.Activities.Presentation.Model.Edge edge)
			{
				ret
			}
			.method family virtual hidebysig 
				instance bool HasAssociatedEdge(class System.Activities.Presentation.Model.BackPointer backPointer)
			{
				ret
			}
			.method family virtual hidebysig 
				instance void OnVerticesBecameReachable(class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> reachableVertices)
			{
				ret
			}
			.method family virtual hidebysig 
				instance void OnVerticesBecameUnreachable(class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> unreachableVertices)
			{
				ret
			}
			.property instance class System.Activities.Presentation.Model.ModelItem Root()
			{
				.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Model.ModelTreeManager/ModelGraphManager::get_Root()
			}
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.EditingContext context)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_EditingScopeCompleted(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.Model.EditingScopeEventArgs> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void remove_EditingScopeCompleted(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.Model.EditingScopeEventArgs> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_Root()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class System.Activities.Presentation.EditingContext get_Context()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance bool get_RedoUndoInProgress()
		{
			ret
		}
		.method assembly hidebysig 
			instance void StartTracking()
		{
			ret
		}
		.method assembly hidebysig 
			instance void StopTracking()
		{
			ret
		}
		.method public hidebysig 
			instance class System.Activities.Presentation.Model.ModelItem CreateModelItem(class System.Activities.Presentation.Model.ModelItem parent, object 'instance')
		{
			ret
		}
		.method public hidebysig 
			instance void Load(object rootInstance)
		{
			ret
		}
		.method assembly hidebysig 
			instance void ClearValue(class System.Activities.Presentation.Model.ModelPropertyImpl modelProperty)
		{
			ret
		}
		.method assembly hidebysig 
			instance void CollectionAdd(class System.Activities.Presentation.Model.ModelItemCollectionImpl dataModelItemCollection, class System.Activities.Presentation.Model.ModelItem item)
		{
			ret
		}
		.method assembly hidebysig 
			instance void CollectionInsert(class System.Activities.Presentation.Model.ModelItemCollectionImpl dataModelItemCollection, int32 index, class System.Activities.Presentation.Model.ModelItem item)
		{
			ret
		}
		.method assembly hidebysig 
			instance void CollectionClear(class System.Activities.Presentation.Model.ModelItemCollectionImpl modelItemCollectionImpl)
		{
			ret
		}
		.method assembly hidebysig 
			instance void NotifyCollectionInsert(class System.Activities.Presentation.Model.ModelItem item, class System.Activities.Presentation.Services.ModelChangeInfo changeInfo)
		{
			ret
		}
		.method assembly hidebysig 
			instance void CollectionRemove(class System.Activities.Presentation.Model.ModelItemCollectionImpl dataModelItemCollection, class System.Activities.Presentation.Model.ModelItem item)
		{
			ret
		}
		.method assembly hidebysig 
			instance void CollectionRemoveAt(class System.Activities.Presentation.Model.ModelItemCollectionImpl dataModelItemCollection, int32 index)
		{
			ret
		}
		.method assembly hidebysig 
			instance void NotifyCollectionRemove(class System.Activities.Presentation.Model.ModelItem item, class System.Activities.Presentation.Services.ModelChangeInfo changeInfo)
		{
			ret
		}
		.method assembly hidebysig 
			instance void DictionaryClear(class System.Activities.Presentation.Model.ModelItemDictionaryImpl modelDictionary)
		{
			ret
		}
		.method assembly hidebysig 
			instance void DictionaryEdit(class System.Activities.Presentation.Model.ModelItemDictionaryImpl dataModelItemDictionary, class System.Activities.Presentation.Model.ModelItem key, class System.Activities.Presentation.Model.ModelItem newValue, class System.Activities.Presentation.Model.ModelItem oldValue)
		{
			ret
		}
		.method assembly hidebysig 
			instance void DictionaryAdd(class System.Activities.Presentation.Model.ModelItemDictionaryImpl dataModelItemDictionary, class System.Activities.Presentation.Model.ModelItem key, class System.Activities.Presentation.Model.ModelItem 'value')
		{
			ret
		}
		.method assembly hidebysig 
			instance void OnPropertyEdgeAdded(string propertyName, class System.Activities.Presentation.Model.ModelItem from, class System.Activities.Presentation.Model.ModelItem 'to')
		{
			ret
		}
		.method assembly hidebysig 
			instance void OnItemEdgeAdded(class System.Activities.Presentation.Model.ModelItem from, class System.Activities.Presentation.Model.ModelItem 'to')
		{
			ret
		}
		.method assembly hidebysig 
			instance void OnPropertyEdgeRemoved(string propertyName, class System.Activities.Presentation.Model.ModelItem from, class System.Activities.Presentation.Model.ModelItem 'to')
		{
			ret
		}
		.method assembly hidebysig 
			instance void OnItemEdgeRemoved(class System.Activities.Presentation.Model.ModelItem from, class System.Activities.Presentation.Model.ModelItem 'to')
		{
			ret
		}
		.method assembly hidebysig 
			instance void DictionaryRemove(class System.Activities.Presentation.Model.ModelItemDictionaryImpl dataModelItemDictionary, class System.Activities.Presentation.Model.ModelItem key)
		{
			ret
		}
		.method assembly static hidebysig 
			class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> Find(class System.Activities.Presentation.Model.ModelItem startingItem, class [mscorlib]'System.Predicate`1'<class System.Activities.Presentation.Model.ModelItem> matcher, bool skipCollapsedAndUnrootable)
		{
			ret
		}
		.method assembly static hidebysig 
			class System.Activities.Presentation.Model.ModelItem FindFirst(class System.Activities.Presentation.Model.ModelItem startingItem, class [mscorlib]'System.Predicate`1'<class System.Activities.Presentation.Model.ModelItem> matcher)
		{
			ret
		}
		.method assembly static hidebysig 
			class System.Activities.Presentation.Model.ModelItem FindFirst(class System.Activities.Presentation.Model.ModelItem startingItem, class [mscorlib]'System.Predicate`1'<class System.Activities.Presentation.Model.ModelItem> matcher, class [mscorlib]'System.Predicate`1'<class System.Activities.Presentation.Model.ModelItem> extraShouldSearchThroughProperties)
		{
			ret
		}
		.method assembly hidebysig 
			instance class System.Activities.Presentation.Model.ModelItem GetValue(class System.Activities.Presentation.Model.ModelPropertyImpl dataModelProperty)
		{
			ret
		}
		.method assembly hidebysig 
			instance class System.Activities.Presentation.Model.ModelItem SetValue(class System.Activities.Presentation.Model.ModelPropertyImpl modelProperty, object 'value')
		{
			ret
		}
		.method assembly hidebysig 
			instance void AddToCurrentEditingScope(class System.Activities.Presentation.Model.Change change)
		{
			ret
		}
		.method assembly hidebysig 
			instance bool CanCreateImmediateEditingScope()
		{
			ret
		}
		.method assembly hidebysig 
			instance class System.Activities.Presentation.Model.EditingScope CreateEditingScope(string description, bool shouldApplyChangesImmediately)
		{
			ret
		}
		.method assembly hidebysig 
			instance class System.Activities.Presentation.Model.EditingScope CreateEditingScope(string description)
		{
			ret
		}
		.method assembly hidebysig 
			instance void NotifyPropertyChange(class System.Activities.Presentation.Model.ModelPropertyImpl dataModelProperty, class System.Activities.Presentation.Services.ModelChangeInfo changeInfo)
		{
			ret
		}
		.method assembly hidebysig 
			instance void SyncModelAndText()
		{
			ret
		}
		.method assembly hidebysig 
			instance class System.Activities.Presentation.Model.ModelItem WrapAsModelItem(object 'instance')
		{
			ret
		}
		.method assembly hidebysig 
			instance class System.Activities.Presentation.Model.ModelItem GetModelItem(object 'instance')
		{
			ret
		}
		.method public hidebysig 
			instance class System.Activities.Presentation.Model.ModelItem GetModelItem(object 'instance', bool shouldExpandModelTree)
		{
			ret
		}
		.method assembly hidebysig 
			instance void RegisterModelTreeChangeEvents(class System.Activities.Presentation.Model.EditingScope editingScope)
		{
			ret
		}
		.method assembly hidebysig 
			instance void UnregisterModelTreeChangeEvents(class System.Activities.Presentation.Model.EditingScope editingScope)
		{
			ret
		}
		.method assembly hidebysig 
			instance void OnEditingScopeCompleted(class System.Activities.Presentation.Model.EditingScope modelEditingScopeImpl)
		{
			ret
		}
		.method assembly hidebysig 
			instance bool CanEditingScopeComplete(class System.Activities.Presentation.Model.EditingScope modelEditingScopeImpl)
		{
			ret
		}
		.method assembly hidebysig 
			instance void OnEditingScopeReverted(class System.Activities.Presentation.Model.EditingScope modelEditingScopeImpl)
		{
			ret
		}
		.method assembly static hidebysig 
			class [mscorlib]'System.Collections.Generic.IList`1'<class System.Activities.Presentation.Model.ModelItem> DepthFirstSearch(class System.Activities.Presentation.Model.ModelItem currentItem, class [mscorlib]'System.Predicate`1'<class [mscorlib]System.Type> 'filter', class [mscorlib]'System.Predicate`1'<class System.Activities.Presentation.Model.ModelItem> shouldTraverseSubTree, bool preOrder)
		{
			ret
		}
		.field assembly class System.Activities.Presentation.Model.ModelServiceImpl modelService
		.event class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.Model.EditingScopeEventArgs> EditingScopeCompleted
		{
			.addon instance void System.Activities.Presentation.Model.ModelTreeManager::add_EditingScopeCompleted(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.Model.EditingScopeEventArgs>)
			.removeon instance void System.Activities.Presentation.Model.ModelTreeManager::remove_EditingScopeCompleted(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.Model.EditingScopeEventArgs>)
		}
		.property instance class System.Activities.Presentation.EditingContext Context()
		{
			.get instance class System.Activities.Presentation.EditingContext System.Activities.Presentation.Model.ModelTreeManager::get_Context()
		}
		.property instance bool RedoUndoInProgress()
		{
			.get instance bool System.Activities.Presentation.Model.ModelTreeManager::get_RedoUndoInProgress()
		}
		.property instance class System.Activities.Presentation.Model.ModelItem Root()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Model.ModelTreeManager::get_Root()
		}
	}
	.class private ModelTypeConverter
		extends [System]System.ComponentModel.TypeConverter
	{
		.method assembly hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.Model.ModelTreeManager modelTreeManager, class [System]System.ComponentModel.TypeConverter converter)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool CanConvertFrom(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Type sourceType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool CanConvertTo(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertFrom(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertTo(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value', class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object CreateInstance(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Collections.IDictionary propertyValues)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool GetCreateInstanceSupported(class [System]System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [System]System.ComponentModel.PropertyDescriptorCollection GetProperties(class [System]System.ComponentModel.ITypeDescriptorContext context, object 'value', class [mscorlib]System.Attribute[] attributes)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool GetPropertiesSupported(class [System]System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [System]System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class [System]System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool GetStandardValuesExclusive(class [System]System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool GetStandardValuesSupported(class [System]System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool IsValid(class [System]System.ComponentModel.ITypeDescriptorContext context, object 'value')
		{
			ret
		}
	}
	.class private ModelTypeDescriptorContextWrapper
		extends [mscorlib]System.Object
		implements [System]System.ComponentModel.ITypeDescriptorContext, [mscorlib]System.IServiceProvider
	{
		.method assembly hidebysig specialname 
			instance void .ctor(class [System]System.ComponentModel.ITypeDescriptorContext context, class System.Activities.Presentation.Model.ModelTreeManager modelTreeManager)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance class [System]System.ComponentModel.IContainer get_Container()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance object get_Instance()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance class [System]System.ComponentModel.PropertyDescriptor get_PropertyDescriptor()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void OnComponentChanged()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool OnComponentChanging()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object GetService(class [mscorlib]System.Type serviceType)
		{
			ret
		}
		.property instance class [System]System.ComponentModel.IContainer Container()
		{
			.get instance class [System]System.ComponentModel.IContainer System.Activities.Presentation.Model.ModelTypeDescriptorContextWrapper::get_Container()
		}
		.property instance object Instance()
		{
			.get instance object System.Activities.Presentation.Model.ModelTypeDescriptorContextWrapper::get_Instance()
		}
		.property instance class [System]System.ComponentModel.PropertyDescriptor PropertyDescriptor()
		{
			.get instance class [System]System.ComponentModel.PropertyDescriptor System.Activities.Presentation.Model.ModelTypeDescriptorContextWrapper::get_PropertyDescriptor()
		}
	}
	.class private abstract sealed ModelUtilities
		extends [mscorlib]System.Object
	{
		.method assembly static hidebysig 
			bool IsSwitchCase(class System.Activities.Presentation.Model.ModelItem modelItem)
		{
			ret
		}
		.method assembly static hidebysig 
			bool IsModelItemKeyValuePair(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method assembly static hidebysig 
			class [System]System.ComponentModel.TypeConverter GetConverter(class System.Activities.Presentation.Model.IModelTreeItem item)
		{
			ret
		}
		.method assembly static hidebysig 
			class [System]System.ComponentModel.TypeConverter GetConverter(class System.Activities.Presentation.Model.ModelTreeManager modelTreeManager, class System.Activities.Presentation.Model.ModelItem item)
		{
			ret
		}
		.method assembly static hidebysig 
			class [System]System.ComponentModel.PropertyDescriptor GetDefaultProperty(class System.Activities.Presentation.Model.ModelItem item)
		{
			ret
		}
		.method assembly static hidebysig 
			class [System]System.ComponentModel.PropertyDescriptorCollection WrapProperties(class System.Activities.Presentation.Model.ModelItem item)
		{
			ret
		}
		.method assembly static hidebysig 
			class System.Activities.Presentation.Model.ModelItem ReverseFindFirst(class System.Activities.Presentation.Model.ModelItem start, class [mscorlib]'System.Predicate`1'<class System.Activities.Presentation.Model.ModelItem> matcher)
		{
			ret
		}
		.method assembly static hidebysig 
			void ReverseTraverse(class System.Activities.Presentation.Model.ModelItem start, class [mscorlib]'System.Predicate`1'<class System.Activities.Presentation.Model.ModelItem> shouldContinue)
		{
			ret
		}
	}
	.class public abstract sealed MorphHelper
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			void AddPropertyValueMorphHelper(class [mscorlib]System.Type propertyType, class System.Activities.Presentation.Model.PropertyValueMorphHelper extension)
		{
			ret
		}
		.method public static hidebysig 
			class System.Activities.Presentation.Model.PropertyValueMorphHelper GetPropertyValueMorphHelper(class [mscorlib]System.Type propertyType)
		{
			ret
		}
		.method public static hidebysig 
			void MorphObject(class System.Activities.Presentation.Model.ModelItem oldModelItem, class System.Activities.Presentation.Model.ModelItem newModelitem)
		{
			ret
		}
		.method public static hidebysig 
			void MorphProperties(class System.Activities.Presentation.Model.ModelItem oldModelItem, class System.Activities.Presentation.Model.ModelItem newModelitem)
		{
			ret
		}
	}
	.class private PropertyChange
		extends System.Activities.Presentation.Model.ModelChange
	{
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_Owner()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_Owner(class System.Activities.Presentation.Model.ModelItem 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_PropertyName()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_PropertyName(string 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_OldValue()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_OldValue(class System.Activities.Presentation.Model.ModelItem 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_NewValue()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_NewValue(class System.Activities.Presentation.Model.ModelItem 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelTreeManager get_ModelTreeManager()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_ModelTreeManager(class System.Activities.Presentation.Model.ModelTreeManager 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Description()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Apply()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class System.Activities.Presentation.Model.Change GetInverse()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance string Description()
		{
			.get instance string System.Activities.Presentation.Model.PropertyChange::get_Description()
		}
		.property instance class System.Activities.Presentation.Model.ModelTreeManager ModelTreeManager()
		{
			.get instance class System.Activities.Presentation.Model.ModelTreeManager System.Activities.Presentation.Model.PropertyChange::get_ModelTreeManager()
			.set instance void System.Activities.Presentation.Model.PropertyChange::set_ModelTreeManager(class System.Activities.Presentation.Model.ModelTreeManager)
		}
		.property instance class System.Activities.Presentation.Model.ModelItem NewValue()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Model.PropertyChange::get_NewValue()
			.set instance void System.Activities.Presentation.Model.PropertyChange::set_NewValue(class System.Activities.Presentation.Model.ModelItem)
		}
		.property instance class System.Activities.Presentation.Model.ModelItem OldValue()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Model.PropertyChange::get_OldValue()
			.set instance void System.Activities.Presentation.Model.PropertyChange::set_OldValue(class System.Activities.Presentation.Model.ModelItem)
		}
		.property instance class System.Activities.Presentation.Model.ModelItem Owner()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Model.PropertyChange::get_Owner()
			.set instance void System.Activities.Presentation.Model.PropertyChange::set_Owner(class System.Activities.Presentation.Model.ModelItem)
		}
		.property instance string PropertyName()
		{
			.get instance string System.Activities.Presentation.Model.PropertyChange::get_PropertyName()
			.set instance void System.Activities.Presentation.Model.PropertyChange::set_PropertyName(string)
		}
	}
	.class private PropertyReferenceChange
		extends System.Activities.Presentation.Model.ModelChange
	{
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_Owner()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_Owner(class System.Activities.Presentation.Model.ModelItem 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_TargetProperty()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_TargetProperty(string 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_OldSourceProperty()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_OldSourceProperty(string 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_NewSourceProperty()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_NewSourceProperty(string 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Description()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Apply()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class System.Activities.Presentation.Model.Change GetInverse()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance string Description()
		{
			.get instance string System.Activities.Presentation.Model.PropertyReferenceChange::get_Description()
		}
		.property instance string NewSourceProperty()
		{
			.get instance string System.Activities.Presentation.Model.PropertyReferenceChange::get_NewSourceProperty()
			.set instance void System.Activities.Presentation.Model.PropertyReferenceChange::set_NewSourceProperty(string)
		}
		.property instance string OldSourceProperty()
		{
			.get instance string System.Activities.Presentation.Model.PropertyReferenceChange::get_OldSourceProperty()
			.set instance void System.Activities.Presentation.Model.PropertyReferenceChange::set_OldSourceProperty(string)
		}
		.property instance class System.Activities.Presentation.Model.ModelItem Owner()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Model.PropertyReferenceChange::get_Owner()
			.set instance void System.Activities.Presentation.Model.PropertyReferenceChange::set_Owner(class System.Activities.Presentation.Model.ModelItem)
		}
		.property instance string TargetProperty()
		{
			.get instance string System.Activities.Presentation.Model.PropertyReferenceChange::get_TargetProperty()
			.set instance void System.Activities.Presentation.Model.PropertyReferenceChange::set_TargetProperty(string)
		}
	}
	.class private PropertyReferenceChangedEventArgs
		extends [mscorlib]System.EventArgs
	{
		.method public hidebysig specialname 
			instance void .ctor(string targetProperty)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_TargetProperty()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.property instance string TargetProperty()
		{
			.get instance string System.Activities.Presentation.Model.PropertyReferenceChangedEventArgs::get_TargetProperty()
		}
	}
	.class private sealed PropertyReferenceChangedEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object sender, class System.Activities.Presentation.Model.PropertyReferenceChangedEventArgs e)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object sender, class System.Activities.Presentation.Model.PropertyReferenceChangedEventArgs e, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public sealed PropertyValueMorphHelper
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance object Invoke(class System.Activities.Presentation.Model.ModelItem originalValue, class System.Activities.Presentation.Model.ModelProperty newModelProperty)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(class System.Activities.Presentation.Model.ModelItem originalValue, class System.Activities.Presentation.Model.ModelProperty newModelProperty, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance object EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class private SearchableEntry
		extends [mscorlib]System.Object
	{
		.method assembly hidebysig specialname 
			instance int32 get_LineNumber()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_LineNumber(int32 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance valuetype System.Activities.Presentation.Model.SearchableEntryOption get_SearchableEntryType()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_SearchableEntryType(valuetype System.Activities.Presentation.Model.SearchableEntryOption 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_ModelItem()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_ModelItem(class System.Activities.Presentation.Model.ModelItem 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelProperty get_ModelProperty()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_ModelProperty(class System.Activities.Presentation.Model.ModelProperty 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance string get_Text()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_Text(string 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance string get_PropertyPath()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_PropertyPath(string 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance int32 LineNumber()
		{
			.get instance int32 System.Activities.Presentation.Model.SearchableEntry::get_LineNumber()
			.set instance void System.Activities.Presentation.Model.SearchableEntry::set_LineNumber(int32)
		}
		.property instance class System.Activities.Presentation.Model.ModelItem ModelItem()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Model.SearchableEntry::get_ModelItem()
			.set instance void System.Activities.Presentation.Model.SearchableEntry::set_ModelItem(class System.Activities.Presentation.Model.ModelItem)
		}
		.property instance class System.Activities.Presentation.Model.ModelProperty ModelProperty()
		{
			.get instance class System.Activities.Presentation.Model.ModelProperty System.Activities.Presentation.Model.SearchableEntry::get_ModelProperty()
			.set instance void System.Activities.Presentation.Model.SearchableEntry::set_ModelProperty(class System.Activities.Presentation.Model.ModelProperty)
		}
		.property instance string PropertyPath()
		{
			.get instance string System.Activities.Presentation.Model.SearchableEntry::get_PropertyPath()
			.set instance void System.Activities.Presentation.Model.SearchableEntry::set_PropertyPath(string)
		}
		.property instance valuetype System.Activities.Presentation.Model.SearchableEntryOption SearchableEntryType()
		{
			.get instance valuetype System.Activities.Presentation.Model.SearchableEntryOption System.Activities.Presentation.Model.SearchableEntry::get_SearchableEntryType()
			.set instance void System.Activities.Presentation.Model.SearchableEntry::set_SearchableEntryType(valuetype System.Activities.Presentation.Model.SearchableEntryOption)
		}
		.property instance string Text()
		{
			.get instance string System.Activities.Presentation.Model.SearchableEntry::get_Text()
			.set instance void System.Activities.Presentation.Model.SearchableEntry::set_Text(string)
		}
	}
	.class private sealed SearchableEntryOption
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Activities.Presentation.Model.SearchableEntryOption Argument = int32(0x00000001)
		.field static public literal valuetype System.Activities.Presentation.Model.SearchableEntryOption Property = int32(0x00000002)
		.field static public literal valuetype System.Activities.Presentation.Model.SearchableEntryOption Variable = int32(0x00000000)
	}
	.class public sealed serializable TextImage
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance int32 get_StartLineIndex()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_StartLineIndex(int32 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.IList`1'<string> get_Lines()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_Lines(class [mscorlib]'System.Collections.Generic.IList`1'<string> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class [mscorlib]'System.Collections.Generic.IList`1'<string> Lines()
		{
			.get instance class [mscorlib]'System.Collections.Generic.IList`1'<string> System.Activities.Presentation.Model.TextImage::get_Lines()
			.set instance void System.Activities.Presentation.Model.TextImage::set_Lines(class [mscorlib]'System.Collections.Generic.IList`1'<string>)
		}
		.property instance int32 StartLineIndex()
		{
			.get instance int32 System.Activities.Presentation.Model.TextImage::get_StartLineIndex()
			.set instance void System.Activities.Presentation.Model.TextImage::set_StartLineIndex(int32)
		}
	}
	.class private 'WeakKeyDictionary`2'<'K', 'V'>
		extends [mscorlib]System.Object
		implements class [mscorlib]'System.Collections.Generic.IDictionary`2'<!0,!1>, class [mscorlib]'System.Collections.Generic.ICollection`1'<valuetype [mscorlib]'System.Collections.Generic.KeyValuePair`2'<!0,!1>>, class [mscorlib]'System.Collections.Generic.IEnumerable`1'<valuetype [mscorlib]'System.Collections.Generic.KeyValuePair`2'<!0,!1>>, [mscorlib]System.Collections.IEnumerable
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = { string('Item') }
		.method assembly hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]'System.Collections.Generic.IEqualityComparer`1'<!0> comparer)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void Finalize()
		{
			.override [mscorlib]System.Object::Finalize
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance class [mscorlib]'System.Collections.Generic.ICollection`1'<!0> get_Keys()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance class [mscorlib]'System.Collections.Generic.ICollection`1'<!1> get_Values()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance int32 get_Count()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_IsReadOnly()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance !1 get_Item(!0 key)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_Item(!0 key, !1 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool TryGetValue(!0 key, [out] !1& 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Add(!0 key, !1 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool ContainsKey(!0 key)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool Remove(!0 key)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Add(valuetype [mscorlib]'System.Collections.Generic.KeyValuePair`2'<!0,!1> item)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Clear()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool Contains(valuetype [mscorlib]'System.Collections.Generic.KeyValuePair`2'<!0,!1> item)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void CopyTo(valuetype [mscorlib]'System.Collections.Generic.KeyValuePair`2'<!0,!1>[] 'array', int32 arrayIndex)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool Remove(valuetype [mscorlib]'System.Collections.Generic.KeyValuePair`2'<!0,!1> item)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [mscorlib]'System.Collections.Generic.IEnumerator`1'<valuetype [mscorlib]'System.Collections.Generic.KeyValuePair`2'<!0,!1>> GetEnumerator()
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			.override [mscorlib]System.Collections.IEnumerable::GetEnumerator
			ret
		}
		.property instance int32 Count()
		{
			.get instance int32 'System.Activities.Presentation.Model.WeakKeyDictionary`2'::get_Count()
		}
		.property instance bool IsReadOnly()
		{
			.get instance bool 'System.Activities.Presentation.Model.WeakKeyDictionary`2'::get_IsReadOnly()
		}
		.property instance !1 Item(!0)
		{
			.get instance !1 'System.Activities.Presentation.Model.WeakKeyDictionary`2'::get_Item(!0)
			.set instance void 'System.Activities.Presentation.Model.WeakKeyDictionary`2'::set_Item(!0, !1)
		}
		.property instance class [mscorlib]'System.Collections.Generic.ICollection`1'<!0> Keys()
		{
			.get instance class [mscorlib]'System.Collections.Generic.ICollection`1'<!0> 'System.Activities.Presentation.Model.WeakKeyDictionary`2'::get_Keys()
		}
		.property instance class [mscorlib]'System.Collections.Generic.ICollection`1'<!1> Values()
		{
			.get instance class [mscorlib]'System.Collections.Generic.ICollection`1'<!1> 'System.Activities.Presentation.Model.WeakKeyDictionary`2'::get_Values()
		}
	}
	.class private abstract sealed XamlUtilities
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			class [System]System.ComponentModel.TypeConverter GetConverter(class [mscorlib]System.Type itemType)
		{
			ret
		}
	}
}
.namespace System.Activities.Presentation.PropertyEditing
{
	.class public abstract CategoryEditor
		extends [mscorlib]System.Object
	{
		.method public virtual hidebysig newslot abstract 
			instance bool ConsumesProperty(class System.Activities.Presentation.PropertyEditing.PropertyEntry propertyEntry)
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance string get_TargetCategory()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class [PresentationFramework]System.Windows.DataTemplate get_EditorTemplate()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance object GetImage(valuetype [WindowsBase]System.Windows.Size desiredSize)
		{
		}
		.method public static hidebysig 
			class [System]System.ComponentModel.EditorAttribute CreateEditorAttribute(class System.Activities.Presentation.PropertyEditing.CategoryEditor editor)
		{
			ret
		}
		.method public static hidebysig 
			class [System]System.ComponentModel.EditorAttribute CreateEditorAttribute(class [mscorlib]System.Type categoryEditorType)
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class [PresentationFramework]System.Windows.DataTemplate EditorTemplate()
		{
			.get instance class [PresentationFramework]System.Windows.DataTemplate System.Activities.Presentation.PropertyEditing.CategoryEditor::get_EditorTemplate()
		}
		.property instance string TargetCategory()
		{
			.get instance string System.Activities.Presentation.PropertyEditing.CategoryEditor::get_TargetCategory()
		}
	}
	.class public abstract CategoryEntry
		extends [mscorlib]System.Object
		implements [System]System.ComponentModel.INotifyPropertyChanged, System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = { string('Item') }
		.method family hidebysig specialname 
			instance void .ctor(string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_CategoryName()
		{
			ret
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.PropertyEditing.PropertyEntry> get_Properties()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.Activities.Presentation.PropertyEditing.PropertyEntry get_Item(string propertyName)
		{
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnPropertyChanged(string propertyName)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_FilterApplied(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.PropertyEditing.PropertyFilterAppliedEventArgs> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_FilterApplied(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.PropertyEditing.PropertyFilterAppliedEventArgs> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnFilterApplied(class System.Activities.Presentation.PropertyEditing.PropertyFilter 'filter')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void ApplyFilter(class System.Activities.Presentation.PropertyEditing.PropertyFilter 'filter')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_MatchesFilter()
		{
			ret
		}
		.method family virtual hidebysig newslot specialname 
			instance void set_MatchesFilter(bool 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot abstract 
			instance bool MatchesPredicate(class System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate predicate)
		{
		}
		.event class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.PropertyEditing.PropertyFilterAppliedEventArgs> FilterApplied
		{
			.addon instance void System.Activities.Presentation.PropertyEditing.CategoryEntry::add_FilterApplied(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.PropertyEditing.PropertyFilterAppliedEventArgs>)
			.removeon instance void System.Activities.Presentation.PropertyEditing.CategoryEntry::remove_FilterApplied(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.PropertyEditing.PropertyFilterAppliedEventArgs>)
		}
		.event [System]System.ComponentModel.PropertyChangedEventHandler PropertyChanged
		{
			.addon instance void System.Activities.Presentation.PropertyEditing.CategoryEntry::add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
			.removeon instance void System.Activities.Presentation.PropertyEditing.CategoryEntry::remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
		}
		.property instance string CategoryName()
		{
			.get instance string System.Activities.Presentation.PropertyEditing.CategoryEntry::get_CategoryName()
		}
		.property instance class System.Activities.Presentation.PropertyEditing.PropertyEntry Item(string)
		{
			.get instance class System.Activities.Presentation.PropertyEditing.PropertyEntry System.Activities.Presentation.PropertyEditing.CategoryEntry::get_Item(string)
		}
		.property instance bool MatchesFilter()
		{
			.get instance bool System.Activities.Presentation.PropertyEditing.CategoryEntry::get_MatchesFilter()
			.set instance void System.Activities.Presentation.PropertyEditing.CategoryEntry::set_MatchesFilter(bool)
		}
		.property instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.PropertyEditing.PropertyEntry> Properties()
		{
			.get instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.PropertyEditing.PropertyEntry> System.Activities.Presentation.PropertyEditing.CategoryEntry::get_Properties()
		}
	}
	.class public DependencyPropertyValueSource
		extends System.Activities.Presentation.PropertyEditing.PropertyValueSource
	{
		.method public static hidebysig specialname 
			class System.Activities.Presentation.PropertyEditing.DependencyPropertyValueSource get_DataBound()
		{
			ret
		}
		.method public static hidebysig specialname 
			class System.Activities.Presentation.PropertyEditing.DependencyPropertyValueSource get_SystemResource()
		{
			ret
		}
		.method public static hidebysig specialname 
			class System.Activities.Presentation.PropertyEditing.DependencyPropertyValueSource get_LocalDynamicResource()
		{
			ret
		}
		.method public static hidebysig specialname 
			class System.Activities.Presentation.PropertyEditing.DependencyPropertyValueSource get_LocalStaticResource()
		{
			ret
		}
		.method public static hidebysig specialname 
			class System.Activities.Presentation.PropertyEditing.DependencyPropertyValueSource get_TemplateBinding()
		{
			ret
		}
		.method public static hidebysig specialname 
			class System.Activities.Presentation.PropertyEditing.DependencyPropertyValueSource get_CustomMarkupExtension()
		{
			ret
		}
		.method public static hidebysig specialname 
			class System.Activities.Presentation.PropertyEditing.DependencyPropertyValueSource get_Local()
		{
			ret
		}
		.method public static hidebysig specialname 
			class System.Activities.Presentation.PropertyEditing.DependencyPropertyValueSource get_DefaultValue()
		{
			ret
		}
		.method public static hidebysig specialname 
			class System.Activities.Presentation.PropertyEditing.DependencyPropertyValueSource get_Inherited()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsExpression()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsResource()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsDataBound()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsSystemResource()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsLocalResource()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsTemplateBinding()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsCustomMarkupExtension()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsLocal()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsDefaultValue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsInherited()
		{
			ret
		}
		.property class System.Activities.Presentation.PropertyEditing.DependencyPropertyValueSource CustomMarkupExtension()
		{
			.get class System.Activities.Presentation.PropertyEditing.DependencyPropertyValueSource System.Activities.Presentation.PropertyEditing.DependencyPropertyValueSource::get_CustomMarkupExtension()
		}
		.property class System.Activities.Presentation.PropertyEditing.DependencyPropertyValueSource DataBound()
		{
			.get class System.Activities.Presentation.PropertyEditing.DependencyPropertyValueSource System.Activities.Presentation.PropertyEditing.DependencyPropertyValueSource::get_DataBound()
		}
		.property class System.Activities.Presentation.PropertyEditing.DependencyPropertyValueSource DefaultValue()
		{
			.get class System.Activities.Presentation.PropertyEditing.DependencyPropertyValueSource System.Activities.Presentation.PropertyEditing.DependencyPropertyValueSource::get_DefaultValue()
		}
		.property class System.Activities.Presentation.PropertyEditing.DependencyPropertyValueSource Inherited()
		{
			.get class System.Activities.Presentation.PropertyEditing.DependencyPropertyValueSource System.Activities.Presentation.PropertyEditing.DependencyPropertyValueSource::get_Inherited()
		}
		.property instance bool IsCustomMarkupExtension()
		{
			.get instance bool System.Activities.Presentation.PropertyEditing.DependencyPropertyValueSource::get_IsCustomMarkupExtension()
		}
		.property instance bool IsDataBound()
		{
			.get instance bool System.Activities.Presentation.PropertyEditing.DependencyPropertyValueSource::get_IsDataBound()
		}
		.property instance bool IsDefaultValue()
		{
			.get instance bool System.Activities.Presentation.PropertyEditing.DependencyPropertyValueSource::get_IsDefaultValue()
		}
		.property instance bool IsExpression()
		{
			.get instance bool System.Activities.Presentation.PropertyEditing.DependencyPropertyValueSource::get_IsExpression()
		}
		.property instance bool IsInherited()
		{
			.get instance bool System.Activities.Presentation.PropertyEditing.DependencyPropertyValueSource::get_IsInherited()
		}
		.property instance bool IsLocal()
		{
			.get instance bool System.Activities.Presentation.PropertyEditing.DependencyPropertyValueSource::get_IsLocal()
		}
		.property instance bool IsLocalResource()
		{
			.get instance bool System.Activities.Presentation.PropertyEditing.DependencyPropertyValueSource::get_IsLocalResource()
		}
		.property instance bool IsResource()
		{
			.get instance bool System.Activities.Presentation.PropertyEditing.DependencyPropertyValueSource::get_IsResource()
		}
		.property instance bool IsSystemResource()
		{
			.get instance bool System.Activities.Presentation.PropertyEditing.DependencyPropertyValueSource::get_IsSystemResource()
		}
		.property instance bool IsTemplateBinding()
		{
			.get instance bool System.Activities.Presentation.PropertyEditing.DependencyPropertyValueSource::get_IsTemplateBinding()
		}
		.property class System.Activities.Presentation.PropertyEditing.DependencyPropertyValueSource Local()
		{
			.get class System.Activities.Presentation.PropertyEditing.DependencyPropertyValueSource System.Activities.Presentation.PropertyEditing.DependencyPropertyValueSource::get_Local()
		}
		.property class System.Activities.Presentation.PropertyEditing.DependencyPropertyValueSource LocalDynamicResource()
		{
			.get class System.Activities.Presentation.PropertyEditing.DependencyPropertyValueSource System.Activities.Presentation.PropertyEditing.DependencyPropertyValueSource::get_LocalDynamicResource()
		}
		.property class System.Activities.Presentation.PropertyEditing.DependencyPropertyValueSource LocalStaticResource()
		{
			.get class System.Activities.Presentation.PropertyEditing.DependencyPropertyValueSource System.Activities.Presentation.PropertyEditing.DependencyPropertyValueSource::get_LocalStaticResource()
		}
		.property class System.Activities.Presentation.PropertyEditing.DependencyPropertyValueSource SystemResource()
		{
			.get class System.Activities.Presentation.PropertyEditing.DependencyPropertyValueSource System.Activities.Presentation.PropertyEditing.DependencyPropertyValueSource::get_SystemResource()
		}
		.property class System.Activities.Presentation.PropertyEditing.DependencyPropertyValueSource TemplateBinding()
		{
			.get class System.Activities.Presentation.PropertyEditing.DependencyPropertyValueSource System.Activities.Presentation.PropertyEditing.DependencyPropertyValueSource::get_TemplateBinding()
		}
	}
	.class public DialogPropertyValueEditor
		extends System.Activities.Presentation.PropertyEditing.PropertyValueEditor
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [PresentationFramework]System.Windows.DataTemplate dialogEditorTemplate, class [PresentationFramework]System.Windows.DataTemplate inlineEditorTemplate)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationFramework]System.Windows.DataTemplate get_DialogEditorTemplate()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_DialogEditorTemplate(class [PresentationFramework]System.Windows.DataTemplate 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void ShowDialog(class System.Activities.Presentation.PropertyEditing.PropertyValue propertyValue, class [PresentationCore]System.Windows.IInputElement commandSource)
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance class [PresentationFramework]System.Windows.DataTemplate GetPropertyValueEditor(valuetype System.Activities.Presentation.PropertyEditing.PropertyContainerEditMode mode)
		{
			ret
		}
		.property instance class [PresentationFramework]System.Windows.DataTemplate DialogEditorTemplate()
		{
			.get instance class [PresentationFramework]System.Windows.DataTemplate System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor::get_DialogEditorTemplate()
			.set instance void System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor::set_DialogEditorTemplate(class [PresentationFramework]System.Windows.DataTemplate)
		}
	}
	.class public EditModeSwitchButton
		extends [PresentationFramework]System.Windows.Controls.Button
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.Activities.Presentation.PropertyEditing.PropertyContainerEditMode get_TargetEditMode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_TargetEditMode(valuetype System.Activities.Presentation.PropertyEditing.PropertyContainerEditMode 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_SyncModeToOwningContainer()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_SyncModeToOwningContainer(bool 'value')
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnPropertyChanged(valuetype [WindowsBase]System.Windows.DependencyPropertyChangedEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnMouseDown(class [PresentationCore]System.Windows.Input.MouseButtonEventArgs e)
		{
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty SyncModeToOwningContainerProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty TargetEditModeProperty
		.property instance bool SyncModeToOwningContainer()
		{
			.get instance bool System.Activities.Presentation.PropertyEditing.EditModeSwitchButton::get_SyncModeToOwningContainer()
			.set instance void System.Activities.Presentation.PropertyEditing.EditModeSwitchButton::set_SyncModeToOwningContainer(bool)
		}
		.property instance valuetype System.Activities.Presentation.PropertyEditing.PropertyContainerEditMode TargetEditMode()
		{
			.get instance valuetype System.Activities.Presentation.PropertyEditing.PropertyContainerEditMode System.Activities.Presentation.PropertyEditing.EditModeSwitchButton::get_TargetEditMode()
			.set instance void System.Activities.Presentation.PropertyEditing.EditModeSwitchButton::set_TargetEditMode(valuetype System.Activities.Presentation.PropertyEditing.PropertyContainerEditMode)
		}
	}
	.class public sealed EditorOptionAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = { int32(128) property bool AllowMultiple = bool(true) }
		.method public hidebysig specialname 
			instance string get_Name()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_Name(string 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance object get_Value()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_Value(object 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public virtual hidebysig specialname 
			instance object get_TypeId()
		{
			ret
		}
		.method public static hidebysig 
			bool TryGetOptionValue(class [mscorlib]System.Collections.IEnumerable attributes, string optionName, [out] object& optionValue)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance string Name()
		{
			.get instance string System.Activities.Presentation.PropertyEditing.EditorOptionAttribute::get_Name()
			.set instance void System.Activities.Presentation.PropertyEditing.EditorOptionAttribute::set_Name(string)
		}
		.property instance object TypeId()
		{
			.get instance object System.Activities.Presentation.PropertyEditing.EditorOptionAttribute::get_TypeId()
		}
		.property instance object Value()
		{
			.get instance object System.Activities.Presentation.PropertyEditing.EditorOptionAttribute::get_Value()
			.set instance void System.Activities.Presentation.PropertyEditing.EditorOptionAttribute::set_Value(object)
		}
	}
	.class public sealed EditorReuseAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = { int32(132) }
		.method public hidebysig specialname 
			instance void .ctor(bool reuseEditor)
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_ReuseEditor()
		{
			ret
		}
		.property instance bool ReuseEditor()
		{
			.get instance bool System.Activities.Presentation.PropertyEditing.EditorReuseAttribute::get_ReuseEditor()
		}
	}
	.class private abstract sealed EnumValidator
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			bool IsValid(valuetype System.Activities.Presentation.PropertyEditing.PropertyValueExceptionSource 'value')
		{
			ret
		}
	}
	.class public ExtendedPropertyValueEditor
		extends System.Activities.Presentation.PropertyEditing.PropertyValueEditor
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [PresentationFramework]System.Windows.DataTemplate extendedEditorTemplate, class [PresentationFramework]System.Windows.DataTemplate inlineEditorTemplate)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationFramework]System.Windows.DataTemplate get_ExtendedEditorTemplate()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ExtendedEditorTemplate(class [PresentationFramework]System.Windows.DataTemplate 'value')
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance class [PresentationFramework]System.Windows.DataTemplate GetPropertyValueEditor(valuetype System.Activities.Presentation.PropertyEditing.PropertyContainerEditMode mode)
		{
			ret
		}
		.property instance class [PresentationFramework]System.Windows.DataTemplate ExtendedEditorTemplate()
		{
			.get instance class [PresentationFramework]System.Windows.DataTemplate System.Activities.Presentation.PropertyEditing.ExtendedPropertyValueEditor::get_ExtendedEditorTemplate()
			.set instance void System.Activities.Presentation.PropertyEditing.ExtendedPropertyValueEditor::set_ExtendedEditorTemplate(class [PresentationFramework]System.Windows.DataTemplate)
		}
	}
	.class public interface abstract IPropertyFilterTarget
	{
		.method public virtual hidebysig newslot abstract specialname 
			instance void add_FilterApplied(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.PropertyEditing.PropertyFilterAppliedEventArgs> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void remove_FilterApplied(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.PropertyEditing.PropertyFilterAppliedEventArgs> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_MatchesFilter()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void ApplyFilter(class System.Activities.Presentation.PropertyEditing.PropertyFilter 'filter')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool MatchesPredicate(class System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate predicate)
		{
		}
		.event class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.PropertyEditing.PropertyFilterAppliedEventArgs> FilterApplied
		{
			.addon instance void System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget::add_FilterApplied(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.PropertyEditing.PropertyFilterAppliedEventArgs>)
			.removeon instance void System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget::remove_FilterApplied(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.PropertyEditing.PropertyFilterAppliedEventArgs>)
		}
		.property instance bool MatchesFilter()
		{
			.get instance bool System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget::get_MatchesFilter()
		}
	}
	.class private NewItemFactory
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance object GetImage(class [mscorlib]System.Type 'type', valuetype [WindowsBase]System.Windows.Size desiredSize)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance string GetDisplayName(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance object CreateInstance(class [mscorlib]System.Type 'type')
		{
			ret
		}
	}
	.class private sealed NewItemTypesAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = { int32(132) property bool AllowMultiple = bool(true) }
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type[] types)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Type get_Type()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class [mscorlib]System.Type> get_Types()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Type get_FactoryType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_FactoryType(class [mscorlib]System.Type 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance object get_TypeId()
		{
			ret
		}
		.property instance class [mscorlib]System.Type FactoryType()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.PropertyEditing.NewItemTypesAttribute::get_FactoryType()
			.set instance void System.Activities.Presentation.PropertyEditing.NewItemTypesAttribute::set_FactoryType(class [mscorlib]System.Type)
		}
		.property instance class [mscorlib]System.Type Type()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.PropertyEditing.NewItemTypesAttribute::get_Type()
		}
		.property instance object TypeId()
		{
			.get instance object System.Activities.Presentation.PropertyEditing.NewItemTypesAttribute::get_TypeId()
		}
		.property instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class [mscorlib]System.Type> Types()
		{
			.get instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class [mscorlib]System.Type> System.Activities.Presentation.PropertyEditing.NewItemTypesAttribute::get_Types()
		}
	}
	.class private PropertyContainer
		extends [PresentationFramework]System.Windows.Controls.Control
		implements [System]System.ComponentModel.INotifyPropertyChanged
	{
		.method public final virtual hidebysig newslot specialname 
			instance void add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void add_DependencyPropertyChanged(class [WindowsBase]System.Windows.DependencyPropertyChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void remove_DependencyPropertyChanged(class [WindowsBase]System.Windows.DependencyPropertyChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.PropertyEditing.PropertyEntry get_PropertyEntry()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_PropertyEntry(class System.Activities.Presentation.PropertyEditing.PropertyEntry 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsValueEditEnabled()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsValueEditEnabled(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.Activities.Presentation.PropertyEditing.PropertyContainerEditMode get_ActiveEditMode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ActiveEditMode(valuetype System.Activities.Presentation.PropertyEditing.PropertyContainerEditMode 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationCore]System.Windows.IInputElement get_DialogCommandSource()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_DialogCommandSource(class [PresentationCore]System.Windows.IInputElement 'value')
		{
			ret
		}
		.method public static hidebysig 
			void SetOwningPropertyContainer(class [WindowsBase]System.Windows.DependencyObject dependencyObject, class System.Activities.Presentation.PropertyEditing.PropertyContainer 'value')
		{
			ret
		}
		.method public static hidebysig 
			class System.Activities.Presentation.PropertyEditing.PropertyContainer GetOwningPropertyContainer(class [WindowsBase]System.Windows.DependencyObject dependencyObject)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationFramework]System.Windows.Controls.ControlTemplate get_InlineRowTemplate()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_InlineRowTemplate(class [PresentationFramework]System.Windows.Controls.ControlTemplate 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationFramework]System.Windows.Controls.ControlTemplate get_ExtendedPopupRowTemplate()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ExtendedPopupRowTemplate(class [PresentationFramework]System.Windows.Controls.ControlTemplate 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationFramework]System.Windows.Controls.ControlTemplate get_ExtendedPinnedRowTemplate()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ExtendedPinnedRowTemplate(class [PresentationFramework]System.Windows.Controls.ControlTemplate 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.PropertyEditing.PropertyValueEditor get_DefaultStandardValuesPropertyValueEditor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_DefaultStandardValuesPropertyValueEditor(class System.Activities.Presentation.PropertyEditing.PropertyValueEditor 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.PropertyEditing.PropertyValueEditor get_DefaultPropertyValueEditor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_DefaultPropertyValueEditor(class System.Activities.Presentation.PropertyEditing.PropertyValueEditor 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationFramework]System.Windows.DataTemplate get_InlineEditorTemplate()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationFramework]System.Windows.DataTemplate get_ExtendedEditorTemplate()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationFramework]System.Windows.DataTemplate get_DialogEditorTemplate()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_MatchesFilter()
		{
			ret
		}
		.method public static hidebysig specialname 
			class [PresentationCore]System.Windows.Input.RoutedCommand get_OpenDialogWindow()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool SupportsEditMode(valuetype System.Activities.Presentation.PropertyEditing.PropertyContainerEditMode mode)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnPropertyChanged(string propertyName)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnPropertyChanged(valuetype [WindowsBase]System.Windows.DependencyPropertyChangedEventArgs e)
		{
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ActiveEditModeProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty DefaultPropertyValueEditorProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty DefaultStandardValuesPropertyValueEditorProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty DialogCommandSourceProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ExtendedPinnedRowTemplateProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ExtendedPopupRowTemplateProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty InlineRowTemplateProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty IsValueEditEnabledProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty OwningPropertyContainerProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty PropertyEntryProperty
		.event [WindowsBase]System.Windows.DependencyPropertyChangedEventHandler DependencyPropertyChanged
		{
			.addon instance void System.Activities.Presentation.PropertyEditing.PropertyContainer::add_DependencyPropertyChanged(class [WindowsBase]System.Windows.DependencyPropertyChangedEventHandler)
			.removeon instance void System.Activities.Presentation.PropertyEditing.PropertyContainer::remove_DependencyPropertyChanged(class [WindowsBase]System.Windows.DependencyPropertyChangedEventHandler)
		}
		.event [System]System.ComponentModel.PropertyChangedEventHandler PropertyChanged
		{
			.addon instance void System.Activities.Presentation.PropertyEditing.PropertyContainer::add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
			.removeon instance void System.Activities.Presentation.PropertyEditing.PropertyContainer::remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
		}
		.property instance valuetype System.Activities.Presentation.PropertyEditing.PropertyContainerEditMode ActiveEditMode()
		{
			.get instance valuetype System.Activities.Presentation.PropertyEditing.PropertyContainerEditMode System.Activities.Presentation.PropertyEditing.PropertyContainer::get_ActiveEditMode()
			.set instance void System.Activities.Presentation.PropertyEditing.PropertyContainer::set_ActiveEditMode(valuetype System.Activities.Presentation.PropertyEditing.PropertyContainerEditMode)
		}
		.property instance class System.Activities.Presentation.PropertyEditing.PropertyValueEditor DefaultPropertyValueEditor()
		{
			.get instance class System.Activities.Presentation.PropertyEditing.PropertyValueEditor System.Activities.Presentation.PropertyEditing.PropertyContainer::get_DefaultPropertyValueEditor()
			.set instance void System.Activities.Presentation.PropertyEditing.PropertyContainer::set_DefaultPropertyValueEditor(class System.Activities.Presentation.PropertyEditing.PropertyValueEditor)
		}
		.property instance class System.Activities.Presentation.PropertyEditing.PropertyValueEditor DefaultStandardValuesPropertyValueEditor()
		{
			.get instance class System.Activities.Presentation.PropertyEditing.PropertyValueEditor System.Activities.Presentation.PropertyEditing.PropertyContainer::get_DefaultStandardValuesPropertyValueEditor()
			.set instance void System.Activities.Presentation.PropertyEditing.PropertyContainer::set_DefaultStandardValuesPropertyValueEditor(class System.Activities.Presentation.PropertyEditing.PropertyValueEditor)
		}
		.property instance class [PresentationCore]System.Windows.IInputElement DialogCommandSource()
		{
			.get instance class [PresentationCore]System.Windows.IInputElement System.Activities.Presentation.PropertyEditing.PropertyContainer::get_DialogCommandSource()
			.set instance void System.Activities.Presentation.PropertyEditing.PropertyContainer::set_DialogCommandSource(class [PresentationCore]System.Windows.IInputElement)
		}
		.property instance class [PresentationFramework]System.Windows.DataTemplate DialogEditorTemplate()
		{
			.get instance class [PresentationFramework]System.Windows.DataTemplate System.Activities.Presentation.PropertyEditing.PropertyContainer::get_DialogEditorTemplate()
		}
		.property instance class [PresentationFramework]System.Windows.DataTemplate ExtendedEditorTemplate()
		{
			.get instance class [PresentationFramework]System.Windows.DataTemplate System.Activities.Presentation.PropertyEditing.PropertyContainer::get_ExtendedEditorTemplate()
		}
		.property instance class [PresentationFramework]System.Windows.Controls.ControlTemplate ExtendedPinnedRowTemplate()
		{
			.get instance class [PresentationFramework]System.Windows.Controls.ControlTemplate System.Activities.Presentation.PropertyEditing.PropertyContainer::get_ExtendedPinnedRowTemplate()
			.set instance void System.Activities.Presentation.PropertyEditing.PropertyContainer::set_ExtendedPinnedRowTemplate(class [PresentationFramework]System.Windows.Controls.ControlTemplate)
		}
		.property instance class [PresentationFramework]System.Windows.Controls.ControlTemplate ExtendedPopupRowTemplate()
		{
			.get instance class [PresentationFramework]System.Windows.Controls.ControlTemplate System.Activities.Presentation.PropertyEditing.PropertyContainer::get_ExtendedPopupRowTemplate()
			.set instance void System.Activities.Presentation.PropertyEditing.PropertyContainer::set_ExtendedPopupRowTemplate(class [PresentationFramework]System.Windows.Controls.ControlTemplate)
		}
		.property instance class [PresentationFramework]System.Windows.DataTemplate InlineEditorTemplate()
		{
			.get instance class [PresentationFramework]System.Windows.DataTemplate System.Activities.Presentation.PropertyEditing.PropertyContainer::get_InlineEditorTemplate()
		}
		.property instance class [PresentationFramework]System.Windows.Controls.ControlTemplate InlineRowTemplate()
		{
			.get instance class [PresentationFramework]System.Windows.Controls.ControlTemplate System.Activities.Presentation.PropertyEditing.PropertyContainer::get_InlineRowTemplate()
			.set instance void System.Activities.Presentation.PropertyEditing.PropertyContainer::set_InlineRowTemplate(class [PresentationFramework]System.Windows.Controls.ControlTemplate)
		}
		.property instance bool IsValueEditEnabled()
		{
			.get instance bool System.Activities.Presentation.PropertyEditing.PropertyContainer::get_IsValueEditEnabled()
			.set instance void System.Activities.Presentation.PropertyEditing.PropertyContainer::set_IsValueEditEnabled(bool)
		}
		.property instance bool MatchesFilter()
		{
			.get instance bool System.Activities.Presentation.PropertyEditing.PropertyContainer::get_MatchesFilter()
		}
		.property class [PresentationCore]System.Windows.Input.RoutedCommand OpenDialogWindow()
		{
			.get class [PresentationCore]System.Windows.Input.RoutedCommand System.Activities.Presentation.PropertyEditing.PropertyContainer::get_OpenDialogWindow()
		}
		.property instance class System.Activities.Presentation.PropertyEditing.PropertyEntry PropertyEntry()
		{
			.get instance class System.Activities.Presentation.PropertyEditing.PropertyEntry System.Activities.Presentation.PropertyEditing.PropertyContainer::get_PropertyEntry()
			.set instance void System.Activities.Presentation.PropertyEditing.PropertyContainer::set_PropertyEntry(class System.Activities.Presentation.PropertyEditing.PropertyEntry)
		}
	}
	.class public sealed PropertyContainerEditMode
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Activities.Presentation.PropertyEditing.PropertyContainerEditMode Dialog = int32(0x00000003)
		.field static public literal valuetype System.Activities.Presentation.PropertyEditing.PropertyContainerEditMode ExtendedPinned = int32(0x00000002)
		.field static public literal valuetype System.Activities.Presentation.PropertyEditing.PropertyContainerEditMode ExtendedPopup = int32(0x00000001)
		.field static public literal valuetype System.Activities.Presentation.PropertyEditing.PropertyContainerEditMode Inline = int32(0x00000000)
	}
	.class public abstract PropertyEntry
		extends [mscorlib]System.Object
		implements [System]System.ComponentModel.INotifyPropertyChanged, System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget
	{
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.PropertyEditing.PropertyValue parentValue)
		{
			ret
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance string get_PropertyName()
		{
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_DisplayName()
		{
			ret
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class [mscorlib]System.Type get_PropertyType()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance string get_CategoryName()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance string get_Description()
		{
		}
		.method family virtual hidebysig newslot specialname 
			instance bool get_HasStandardValues()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance bool get_HasStandardValuesInternal()
		{
			ret
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_IsReadOnly()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_IsAdvanced()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class [mscorlib]System.Collections.ICollection get_StandardValues()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.Activities.Presentation.PropertyEditing.PropertyValueEditor get_PropertyValueEditor()
		{
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.PropertyEditing.PropertyValue get_ParentValue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.PropertyEditing.PropertyValue get_PropertyValue()
		{
			ret
		}
		.method family virtual hidebysig newslot abstract 
			instance class System.Activities.Presentation.PropertyEditing.PropertyValue CreatePropertyValueInstance()
		{
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_FilterApplied(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.PropertyEditing.PropertyFilterAppliedEventArgs> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_FilterApplied(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.PropertyEditing.PropertyFilterAppliedEventArgs> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_MatchesFilter()
		{
			ret
		}
		.method family hidebysig specialname 
			instance void set_MatchesFilter(bool 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance bool MatchesPredicate(class System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate predicate)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void ApplyFilter(class System.Activities.Presentation.PropertyEditing.PropertyFilter 'filter')
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnFilterApplied(class System.Activities.Presentation.PropertyEditing.PropertyFilter 'filter')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnPropertyChanged(class [System]System.ComponentModel.PropertyChangedEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnPropertyChanged(string propertyName)
		{
			ret
		}
		.event class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.PropertyEditing.PropertyFilterAppliedEventArgs> FilterApplied
		{
			.addon instance void System.Activities.Presentation.PropertyEditing.PropertyEntry::add_FilterApplied(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.PropertyEditing.PropertyFilterAppliedEventArgs>)
			.removeon instance void System.Activities.Presentation.PropertyEditing.PropertyEntry::remove_FilterApplied(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.PropertyEditing.PropertyFilterAppliedEventArgs>)
		}
		.event [System]System.ComponentModel.PropertyChangedEventHandler PropertyChanged
		{
			.addon instance void System.Activities.Presentation.PropertyEditing.PropertyEntry::add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
			.removeon instance void System.Activities.Presentation.PropertyEditing.PropertyEntry::remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
		}
		.property instance string CategoryName()
		{
			.get instance string System.Activities.Presentation.PropertyEditing.PropertyEntry::get_CategoryName()
		}
		.property instance string Description()
		{
			.get instance string System.Activities.Presentation.PropertyEditing.PropertyEntry::get_Description()
		}
		.property instance string DisplayName()
		{
			.get instance string System.Activities.Presentation.PropertyEditing.PropertyEntry::get_DisplayName()
		}
		.property instance bool HasStandardValues()
		{
			.get instance bool System.Activities.Presentation.PropertyEditing.PropertyEntry::get_HasStandardValues()
		}
		.property instance bool HasStandardValuesInternal()
		{
			.get instance bool System.Activities.Presentation.PropertyEditing.PropertyEntry::get_HasStandardValuesInternal()
		}
		.property instance bool IsAdvanced()
		{
			.get instance bool System.Activities.Presentation.PropertyEditing.PropertyEntry::get_IsAdvanced()
		}
		.property instance bool IsReadOnly()
		{
			.get instance bool System.Activities.Presentation.PropertyEditing.PropertyEntry::get_IsReadOnly()
		}
		.property instance bool MatchesFilter()
		{
			.get instance bool System.Activities.Presentation.PropertyEditing.PropertyEntry::get_MatchesFilter()
			.set instance void System.Activities.Presentation.PropertyEditing.PropertyEntry::set_MatchesFilter(bool)
		}
		.property instance class System.Activities.Presentation.PropertyEditing.PropertyValue ParentValue()
		{
			.get instance class System.Activities.Presentation.PropertyEditing.PropertyValue System.Activities.Presentation.PropertyEditing.PropertyEntry::get_ParentValue()
		}
		.property instance string PropertyName()
		{
			.get instance string System.Activities.Presentation.PropertyEditing.PropertyEntry::get_PropertyName()
		}
		.property instance class [mscorlib]System.Type PropertyType()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.PropertyEditing.PropertyEntry::get_PropertyType()
		}
		.property instance class System.Activities.Presentation.PropertyEditing.PropertyValue PropertyValue()
		{
			.get instance class System.Activities.Presentation.PropertyEditing.PropertyValue System.Activities.Presentation.PropertyEditing.PropertyEntry::get_PropertyValue()
		}
		.property instance class System.Activities.Presentation.PropertyEditing.PropertyValueEditor PropertyValueEditor()
		{
			.get instance class System.Activities.Presentation.PropertyEditing.PropertyValueEditor System.Activities.Presentation.PropertyEditing.PropertyEntry::get_PropertyValueEditor()
		}
		.property instance class [mscorlib]System.Collections.ICollection StandardValues()
		{
			.get instance class [mscorlib]System.Collections.ICollection System.Activities.Presentation.PropertyEditing.PropertyEntry::get_StandardValues()
		}
	}
	.class public abstract PropertyEntryCollection
		extends [mscorlib]System.Object
		implements class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.PropertyEditing.PropertyEntry>, [mscorlib]System.Collections.IEnumerable
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = { string('Item') }
		.method family hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.PropertyEditing.PropertyValue parentValue)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.PropertyEditing.PropertyValue get_ParentValue()
		{
			ret
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.Activities.Presentation.PropertyEditing.PropertyEntry get_Item(string propertyName)
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance int32 get_Count()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]'System.Collections.Generic.IEnumerator`1'<class System.Activities.Presentation.PropertyEditing.PropertyEntry> GetEnumerator()
		{
		}
		.method private final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			.override [mscorlib]System.Collections.IEnumerable::GetEnumerator
			ret
		}
		.property instance int32 Count()
		{
			.get instance int32 System.Activities.Presentation.PropertyEditing.PropertyEntryCollection::get_Count()
		}
		.property instance class System.Activities.Presentation.PropertyEditing.PropertyEntry Item(string)
		{
			.get instance class System.Activities.Presentation.PropertyEditing.PropertyEntry System.Activities.Presentation.PropertyEditing.PropertyEntryCollection::get_Item(string)
		}
		.property instance class System.Activities.Presentation.PropertyEditing.PropertyValue ParentValue()
		{
			.get instance class System.Activities.Presentation.PropertyEditing.PropertyValue System.Activities.Presentation.PropertyEditing.PropertyEntryCollection::get_ParentValue()
		}
	}
	.class public PropertyFilter
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor(string filterText)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate> predicates)
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsEmpty()
		{
			ret
		}
		.method public hidebysig 
			instance bool Match(class System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget target)
		{
			ret
		}
		.property instance bool IsEmpty()
		{
			.get instance bool System.Activities.Presentation.PropertyEditing.PropertyFilter::get_IsEmpty()
		}
	}
	.class public PropertyFilterAppliedEventArgs
		extends [mscorlib]System.EventArgs
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.PropertyEditing.PropertyFilter 'filter')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.PropertyEditing.PropertyFilter get_Filter()
		{
			ret
		}
		.property instance class System.Activities.Presentation.PropertyEditing.PropertyFilter Filter()
		{
			.get instance class System.Activities.Presentation.PropertyEditing.PropertyFilter System.Activities.Presentation.PropertyEditing.PropertyFilterAppliedEventArgs::get_Filter()
		}
	}
	.class public PropertyFilterPredicate
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor(string matchText)
		{
			ret
		}
		.method family hidebysig specialname 
			instance string get_MatchText()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance bool Match(string target)
		{
			ret
		}
		.property instance string MatchText()
		{
			.get instance string System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate::get_MatchText()
		}
	}
	.class private PropertyMarker
		extends [PresentationFramework]System.Windows.Controls.Control
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private sealed PropertyOrder
		extends System.Activities.Presentation.OrderToken
	{
		.method public static hidebysig 
			class System.Activities.Presentation.PropertyEditing.PropertyOrder CreateAfter(class System.Activities.Presentation.OrderToken reference)
		{
			ret
		}
		.method family virtual hidebysig 
			instance int32 ResolveConflict(class System.Activities.Presentation.OrderToken left, class System.Activities.Presentation.OrderToken right)
		{
			ret
		}
		.method public static hidebysig specialname 
			class System.Activities.Presentation.PropertyEditing.PropertyOrder get_Default()
		{
			ret
		}
		.property class System.Activities.Presentation.PropertyEditing.PropertyOrder Default()
		{
			.get class System.Activities.Presentation.PropertyEditing.PropertyOrder System.Activities.Presentation.PropertyEditing.PropertyOrder::get_Default()
		}
	}
	.class private sealed PropertyOrderAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = { int32(128) }
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.PropertyEditing.PropertyOrder order)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.PropertyEditing.PropertyOrder get_Order()
		{
			ret
		}
		.property instance class System.Activities.Presentation.PropertyEditing.PropertyOrder Order()
		{
			.get instance class System.Activities.Presentation.PropertyEditing.PropertyOrder System.Activities.Presentation.PropertyEditing.PropertyOrderAttribute::get_Order()
		}
	}
	.class public abstract PropertyValue
		extends [mscorlib]System.Object
		implements [System]System.ComponentModel.INotifyPropertyChanged
	{
		.method family hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.PropertyEditing.PropertyEntry parentProperty)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void add_RootValueChanged(class [mscorlib]System.EventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void remove_RootValueChanged(class [mscorlib]System.EventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void add_SubPropertyChanged(class [mscorlib]System.EventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void remove_SubPropertyChanged(class [mscorlib]System.EventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.PropertyEditing.PropertyEntry get_ParentProperty()
		{
			ret
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.Activities.Presentation.PropertyEditing.PropertyValueSource get_Source()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_IsDefaultValue()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_IsMixedValue()
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void ValidateValue(object valueToValidate)
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_CanConvertFromString()
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance object ConvertStringToValue(string 'value')
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance string ConvertValueToString(object 'value')
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance object GetValueCore()
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void SetValueCore(object 'value')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void ClearValue()
		{
		}
		.method public hidebysig specialname 
			instance object get_Value()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Value(object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_StringValue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_StringValue(string 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_HasSubProperties()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.Activities.Presentation.PropertyEditing.PropertyEntryCollection get_SubProperties()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_IsCollection()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.Activities.Presentation.PropertyEditing.PropertyValueCollection get_Collection()
		{
		}
		.method public hidebysig specialname 
			instance void add_PropertyValueException(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.PropertyEditing.PropertyValueExceptionEventArgs> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void remove_PropertyValueException(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.PropertyEditing.PropertyValueExceptionEventArgs> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method family virtual hidebysig newslot specialname 
			instance bool get_CatchExceptions()
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnPropertyValueException(class System.Activities.Presentation.PropertyEditing.PropertyValueExceptionEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void NotifyRootValueChanged()
		{
			ret
		}
		.method family hidebysig 
			instance void NotifySubPropertyChanged()
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnPropertyChanged(class [System]System.ComponentModel.PropertyChangedEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnPropertyChanged(string propertyName)
		{
			ret
		}
		.event [System]System.ComponentModel.PropertyChangedEventHandler PropertyChanged
		{
			.addon instance void System.Activities.Presentation.PropertyEditing.PropertyValue::add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
			.removeon instance void System.Activities.Presentation.PropertyEditing.PropertyValue::remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
		}
		.event class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.PropertyEditing.PropertyValueExceptionEventArgs> PropertyValueException
		{
			.addon instance void System.Activities.Presentation.PropertyEditing.PropertyValue::add_PropertyValueException(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.PropertyEditing.PropertyValueExceptionEventArgs>)
			.removeon instance void System.Activities.Presentation.PropertyEditing.PropertyValue::remove_PropertyValueException(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.PropertyEditing.PropertyValueExceptionEventArgs>)
		}
		.event [mscorlib]System.EventHandler RootValueChanged
		{
			.addon instance void System.Activities.Presentation.PropertyEditing.PropertyValue::add_RootValueChanged(class [mscorlib]System.EventHandler)
			.removeon instance void System.Activities.Presentation.PropertyEditing.PropertyValue::remove_RootValueChanged(class [mscorlib]System.EventHandler)
		}
		.event [mscorlib]System.EventHandler SubPropertyChanged
		{
			.addon instance void System.Activities.Presentation.PropertyEditing.PropertyValue::add_SubPropertyChanged(class [mscorlib]System.EventHandler)
			.removeon instance void System.Activities.Presentation.PropertyEditing.PropertyValue::remove_SubPropertyChanged(class [mscorlib]System.EventHandler)
		}
		.property instance bool CanConvertFromString()
		{
			.get instance bool System.Activities.Presentation.PropertyEditing.PropertyValue::get_CanConvertFromString()
		}
		.property instance bool CatchExceptions()
		{
			.get instance bool System.Activities.Presentation.PropertyEditing.PropertyValue::get_CatchExceptions()
		}
		.property instance class System.Activities.Presentation.PropertyEditing.PropertyValueCollection Collection()
		{
			.get instance class System.Activities.Presentation.PropertyEditing.PropertyValueCollection System.Activities.Presentation.PropertyEditing.PropertyValue::get_Collection()
		}
		.property instance bool HasSubProperties()
		{
			.get instance bool System.Activities.Presentation.PropertyEditing.PropertyValue::get_HasSubProperties()
		}
		.property instance bool IsCollection()
		{
			.get instance bool System.Activities.Presentation.PropertyEditing.PropertyValue::get_IsCollection()
		}
		.property instance bool IsDefaultValue()
		{
			.get instance bool System.Activities.Presentation.PropertyEditing.PropertyValue::get_IsDefaultValue()
		}
		.property instance bool IsMixedValue()
		{
			.get instance bool System.Activities.Presentation.PropertyEditing.PropertyValue::get_IsMixedValue()
		}
		.property instance class System.Activities.Presentation.PropertyEditing.PropertyEntry ParentProperty()
		{
			.get instance class System.Activities.Presentation.PropertyEditing.PropertyEntry System.Activities.Presentation.PropertyEditing.PropertyValue::get_ParentProperty()
		}
		.property instance class System.Activities.Presentation.PropertyEditing.PropertyValueSource Source()
		{
			.get instance class System.Activities.Presentation.PropertyEditing.PropertyValueSource System.Activities.Presentation.PropertyEditing.PropertyValue::get_Source()
		}
		.property instance string StringValue()
		{
			.get instance string System.Activities.Presentation.PropertyEditing.PropertyValue::get_StringValue()
			.set instance void System.Activities.Presentation.PropertyEditing.PropertyValue::set_StringValue(string)
		}
		.property instance class System.Activities.Presentation.PropertyEditing.PropertyEntryCollection SubProperties()
		{
			.get instance class System.Activities.Presentation.PropertyEditing.PropertyEntryCollection System.Activities.Presentation.PropertyEditing.PropertyValue::get_SubProperties()
		}
		.property instance object Value()
		{
			.get instance object System.Activities.Presentation.PropertyEditing.PropertyValue::get_Value()
			.set instance void System.Activities.Presentation.PropertyEditing.PropertyValue::set_Value(object)
		}
	}
	.class public abstract PropertyValueCollection
		extends [mscorlib]System.Object
		implements class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.PropertyEditing.PropertyValue>, [mscorlib]System.Collections.IEnumerable, [System]System.Collections.Specialized.INotifyCollectionChanged
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = { string('Item') }
		.method public final virtual hidebysig newslot specialname 
			instance void add_CollectionChanged(class [System]System.Collections.Specialized.NotifyCollectionChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_CollectionChanged(class [System]System.Collections.Specialized.NotifyCollectionChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.PropertyEditing.PropertyValue parentValue)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.PropertyEditing.PropertyValue get_ParentValue()
		{
			ret
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.Activities.Presentation.PropertyEditing.PropertyValue get_Item(int32 index)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.Activities.Presentation.PropertyEditing.PropertyValue Add(object 'value')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.Activities.Presentation.PropertyEditing.PropertyValue Insert(object 'value', int32 index)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool Remove(class System.Activities.Presentation.PropertyEditing.PropertyValue propertyValue)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void RemoveAt(int32 index)
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance int32 get_Count()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetIndex(int32 currentIndex, int32 newIndex)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]'System.Collections.Generic.IEnumerator`1'<class System.Activities.Presentation.PropertyEditing.PropertyValue> GetEnumerator()
		{
		}
		.method private final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			.override [mscorlib]System.Collections.IEnumerable::GetEnumerator
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnCollectionChanged(class [System]System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
		{
			ret
		}
		.event [System]System.Collections.Specialized.NotifyCollectionChangedEventHandler CollectionChanged
		{
			.addon instance void System.Activities.Presentation.PropertyEditing.PropertyValueCollection::add_CollectionChanged(class [System]System.Collections.Specialized.NotifyCollectionChangedEventHandler)
			.removeon instance void System.Activities.Presentation.PropertyEditing.PropertyValueCollection::remove_CollectionChanged(class [System]System.Collections.Specialized.NotifyCollectionChangedEventHandler)
		}
		.property instance int32 Count()
		{
			.get instance int32 System.Activities.Presentation.PropertyEditing.PropertyValueCollection::get_Count()
		}
		.property instance class System.Activities.Presentation.PropertyEditing.PropertyValue Item(int32)
		{
			.get instance class System.Activities.Presentation.PropertyEditing.PropertyValue System.Activities.Presentation.PropertyEditing.PropertyValueCollection::get_Item(int32)
		}
		.property instance class System.Activities.Presentation.PropertyEditing.PropertyValue ParentValue()
		{
			.get instance class System.Activities.Presentation.PropertyEditing.PropertyValue System.Activities.Presentation.PropertyEditing.PropertyValueCollection::get_ParentValue()
		}
	}
	.class public PropertyValueEditor
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [PresentationFramework]System.Windows.DataTemplate inlineEditorTemplate)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationFramework]System.Windows.DataTemplate get_InlineEditorTemplate()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_InlineEditorTemplate(class [PresentationFramework]System.Windows.DataTemplate 'value')
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict 
			instance class [PresentationFramework]System.Windows.DataTemplate GetPropertyValueEditor(valuetype System.Activities.Presentation.PropertyEditing.PropertyContainerEditMode mode)
		{
			ret
		}
		.method public static hidebysig 
			class [System]System.ComponentModel.EditorAttribute CreateEditorAttribute(class System.Activities.Presentation.PropertyEditing.PropertyValueEditor editor)
		{
			ret
		}
		.method public static hidebysig 
			class [System]System.ComponentModel.EditorAttribute CreateEditorAttribute(class [mscorlib]System.Type propertyValueEditorType)
		{
			ret
		}
		.property instance class [PresentationFramework]System.Windows.DataTemplate InlineEditorTemplate()
		{
			.get instance class [PresentationFramework]System.Windows.DataTemplate System.Activities.Presentation.PropertyEditing.PropertyValueEditor::get_InlineEditorTemplate()
			.set instance void System.Activities.Presentation.PropertyEditing.PropertyValueEditor::set_InlineEditorTemplate(class [PresentationFramework]System.Windows.DataTemplate)
		}
	}
	.class public abstract sealed PropertyValueEditorCommands
		extends [mscorlib]System.Object
	{
		.method public static hidebysig specialname 
			class [PresentationCore]System.Windows.Input.RoutedCommand get_ShowInlineEditor()
		{
			ret
		}
		.method public static hidebysig specialname 
			class [PresentationCore]System.Windows.Input.RoutedCommand get_ShowExtendedPopupEditor()
		{
			ret
		}
		.method public static hidebysig specialname 
			class [PresentationCore]System.Windows.Input.RoutedCommand get_ShowExtendedPinnedEditor()
		{
			ret
		}
		.method public static hidebysig specialname 
			class [PresentationCore]System.Windows.Input.RoutedCommand get_ShowDialogEditor()
		{
			ret
		}
		.method public static hidebysig specialname 
			class [PresentationCore]System.Windows.Input.RoutedCommand get_BeginTransaction()
		{
			ret
		}
		.method public static hidebysig specialname 
			class [PresentationCore]System.Windows.Input.RoutedCommand get_CommitTransaction()
		{
			ret
		}
		.method public static hidebysig specialname 
			class [PresentationCore]System.Windows.Input.RoutedCommand get_AbortTransaction()
		{
			ret
		}
		.method public static hidebysig specialname 
			class [PresentationCore]System.Windows.Input.RoutedCommand get_FinishEditing()
		{
			ret
		}
		.property class [PresentationCore]System.Windows.Input.RoutedCommand AbortTransaction()
		{
			.get class [PresentationCore]System.Windows.Input.RoutedCommand System.Activities.Presentation.PropertyEditing.PropertyValueEditorCommands::get_AbortTransaction()
		}
		.property class [PresentationCore]System.Windows.Input.RoutedCommand BeginTransaction()
		{
			.get class [PresentationCore]System.Windows.Input.RoutedCommand System.Activities.Presentation.PropertyEditing.PropertyValueEditorCommands::get_BeginTransaction()
		}
		.property class [PresentationCore]System.Windows.Input.RoutedCommand CommitTransaction()
		{
			.get class [PresentationCore]System.Windows.Input.RoutedCommand System.Activities.Presentation.PropertyEditing.PropertyValueEditorCommands::get_CommitTransaction()
		}
		.property class [PresentationCore]System.Windows.Input.RoutedCommand FinishEditing()
		{
			.get class [PresentationCore]System.Windows.Input.RoutedCommand System.Activities.Presentation.PropertyEditing.PropertyValueEditorCommands::get_FinishEditing()
		}
		.property class [PresentationCore]System.Windows.Input.RoutedCommand ShowDialogEditor()
		{
			.get class [PresentationCore]System.Windows.Input.RoutedCommand System.Activities.Presentation.PropertyEditing.PropertyValueEditorCommands::get_ShowDialogEditor()
		}
		.property class [PresentationCore]System.Windows.Input.RoutedCommand ShowExtendedPinnedEditor()
		{
			.get class [PresentationCore]System.Windows.Input.RoutedCommand System.Activities.Presentation.PropertyEditing.PropertyValueEditorCommands::get_ShowExtendedPinnedEditor()
		}
		.property class [PresentationCore]System.Windows.Input.RoutedCommand ShowExtendedPopupEditor()
		{
			.get class [PresentationCore]System.Windows.Input.RoutedCommand System.Activities.Presentation.PropertyEditing.PropertyValueEditorCommands::get_ShowExtendedPopupEditor()
		}
		.property class [PresentationCore]System.Windows.Input.RoutedCommand ShowInlineEditor()
		{
			.get class [PresentationCore]System.Windows.Input.RoutedCommand System.Activities.Presentation.PropertyEditing.PropertyValueEditorCommands::get_ShowInlineEditor()
		}
	}
	.class public PropertyValueExceptionEventArgs
		extends [mscorlib]System.EventArgs
	{
		.method public hidebysig specialname 
			instance void .ctor(string message, class System.Activities.Presentation.PropertyEditing.PropertyValue 'value', valuetype System.Activities.Presentation.PropertyEditing.PropertyValueExceptionSource source, class [mscorlib]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Message()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.PropertyEditing.PropertyValue get_PropertyValue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.Activities.Presentation.PropertyEditing.PropertyValueExceptionSource get_Source()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Exception get_Exception()
		{
			ret
		}
		.property instance class [mscorlib]System.Exception Exception()
		{
			.get instance class [mscorlib]System.Exception System.Activities.Presentation.PropertyEditing.PropertyValueExceptionEventArgs::get_Exception()
		}
		.property instance string Message()
		{
			.get instance string System.Activities.Presentation.PropertyEditing.PropertyValueExceptionEventArgs::get_Message()
		}
		.property instance class System.Activities.Presentation.PropertyEditing.PropertyValue PropertyValue()
		{
			.get instance class System.Activities.Presentation.PropertyEditing.PropertyValue System.Activities.Presentation.PropertyEditing.PropertyValueExceptionEventArgs::get_PropertyValue()
		}
		.property instance valuetype System.Activities.Presentation.PropertyEditing.PropertyValueExceptionSource Source()
		{
			.get instance valuetype System.Activities.Presentation.PropertyEditing.PropertyValueExceptionSource System.Activities.Presentation.PropertyEditing.PropertyValueExceptionEventArgs::get_Source()
		}
	}
	.class public sealed PropertyValueExceptionSource
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Activities.Presentation.PropertyEditing.PropertyValueExceptionSource Get = int32(0x00000000)
		.field static public literal valuetype System.Activities.Presentation.PropertyEditing.PropertyValueExceptionSource Set = int32(0x00000001)
	}
	.class public abstract PropertyValueSource
		extends [mscorlib]System.Object
	{
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private sealed VersionPropertyValueEditor
		extends System.Activities.Presentation.PropertyEditing.PropertyValueEditor
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
}
.namespace System.Activities.Presentation.Services
{
	.class public abstract ModelChangeInfo
		extends [mscorlib]System.Object
	{
		.method public virtual hidebysig newslot abstract specialname 
			instance valuetype System.Activities.Presentation.Services.ModelChangeType get_ModelChangeType()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_Subject()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance string get_PropertyName()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_Key()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_OldValue()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_Value()
		{
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class System.Activities.Presentation.Model.ModelItem Key()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Services.ModelChangeInfo::get_Key()
		}
		.property instance valuetype System.Activities.Presentation.Services.ModelChangeType ModelChangeType()
		{
			.get instance valuetype System.Activities.Presentation.Services.ModelChangeType System.Activities.Presentation.Services.ModelChangeInfo::get_ModelChangeType()
		}
		.property instance class System.Activities.Presentation.Model.ModelItem OldValue()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Services.ModelChangeInfo::get_OldValue()
		}
		.property instance string PropertyName()
		{
			.get instance string System.Activities.Presentation.Services.ModelChangeInfo::get_PropertyName()
		}
		.property instance class System.Activities.Presentation.Model.ModelItem Subject()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Services.ModelChangeInfo::get_Subject()
		}
		.property instance class System.Activities.Presentation.Model.ModelItem Value()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Services.ModelChangeInfo::get_Value()
		}
	}
	.class private ModelChangeInfoImpl
		extends System.Activities.Presentation.Services.ModelChangeInfo
	{
		.method public virtual hidebysig specialname 
			instance valuetype System.Activities.Presentation.Services.ModelChangeType get_ModelChangeType()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_Subject()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_PropertyName()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_Key()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_OldValue()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_Value()
		{
			ret
		}
		.method public static hidebysig 
			class System.Activities.Presentation.Services.ModelChangeInfoImpl CreatePropertyChanged(class System.Activities.Presentation.Model.ModelItem subject, string propertyName, class System.Activities.Presentation.Model.ModelItem oldValue, class System.Activities.Presentation.Model.ModelItem newValue)
		{
			ret
		}
		.method public static hidebysig 
			class System.Activities.Presentation.Services.ModelChangeInfoImpl CreateCollectionItemAdded(class System.Activities.Presentation.Model.ModelItem subject, class System.Activities.Presentation.Model.ModelItem item)
		{
			ret
		}
		.method public static hidebysig 
			class System.Activities.Presentation.Services.ModelChangeInfoImpl CreateCollectionItemRemoved(class System.Activities.Presentation.Model.ModelItem subject, class System.Activities.Presentation.Model.ModelItem item)
		{
			ret
		}
		.method public static hidebysig 
			class System.Activities.Presentation.Services.ModelChangeInfoImpl CreateDictionaryKeyValueAdded(class System.Activities.Presentation.Model.ModelItem subject, class System.Activities.Presentation.Model.ModelItem key, class System.Activities.Presentation.Model.ModelItem 'value')
		{
			ret
		}
		.method public static hidebysig 
			class System.Activities.Presentation.Services.ModelChangeInfoImpl CreateDictionaryKeyValueRemoved(class System.Activities.Presentation.Model.ModelItem subject, class System.Activities.Presentation.Model.ModelItem key, class System.Activities.Presentation.Model.ModelItem 'value')
		{
			ret
		}
		.method public static hidebysig 
			class System.Activities.Presentation.Services.ModelChangeInfoImpl CreateDictionaryValueChanged(class System.Activities.Presentation.Model.ModelItem subject, class System.Activities.Presentation.Model.ModelItem key, class System.Activities.Presentation.Model.ModelItem oldValue, class System.Activities.Presentation.Model.ModelItem newValue)
		{
			ret
		}
		.property instance class System.Activities.Presentation.Model.ModelItem Key()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Services.ModelChangeInfoImpl::get_Key()
		}
		.property instance valuetype System.Activities.Presentation.Services.ModelChangeType ModelChangeType()
		{
			.get instance valuetype System.Activities.Presentation.Services.ModelChangeType System.Activities.Presentation.Services.ModelChangeInfoImpl::get_ModelChangeType()
		}
		.property instance class System.Activities.Presentation.Model.ModelItem OldValue()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Services.ModelChangeInfoImpl::get_OldValue()
		}
		.property instance string PropertyName()
		{
			.get instance string System.Activities.Presentation.Services.ModelChangeInfoImpl::get_PropertyName()
		}
		.property instance class System.Activities.Presentation.Model.ModelItem Subject()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Services.ModelChangeInfoImpl::get_Subject()
		}
		.property instance class System.Activities.Presentation.Model.ModelItem Value()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Services.ModelChangeInfoImpl::get_Value()
		}
	}
	.class public sealed ModelChangeType
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Activities.Presentation.Services.ModelChangeType CollectionItemAdded = int32(0x00000002)
		.field static public literal valuetype System.Activities.Presentation.Services.ModelChangeType CollectionItemRemoved = int32(0x00000003)
		.field static public literal valuetype System.Activities.Presentation.Services.ModelChangeType DictionaryKeyValueAdded = int32(0x00000004)
		.field static public literal valuetype System.Activities.Presentation.Services.ModelChangeType DictionaryKeyValueRemoved = int32(0x00000005)
		.field static public literal valuetype System.Activities.Presentation.Services.ModelChangeType DictionaryValueChanged = int32(0x00000006)
		.field static public literal valuetype System.Activities.Presentation.Services.ModelChangeType None = int32(0x00000000)
		.field static public literal valuetype System.Activities.Presentation.Services.ModelChangeType PropertyChanged = int32(0x00000001)
	}
	.class public abstract ModelChangedEventArgs
		extends [mscorlib]System.EventArgs
	{
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> get_ItemsAdded()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> get_ItemsRemoved()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelProperty> get_PropertiesChanged()
		{
		}
		.method public virtual hidebysig newslot specialname 
			instance class System.Activities.Presentation.Services.ModelChangeInfo get_ModelChangeInfo()
		{
			ret
		}
		.property instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> ItemsAdded()
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = { string('Don\'t use this property. Use \"ModelChangeInfo\" instead.') }
			.get instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> System.Activities.Presentation.Services.ModelChangedEventArgs::get_ItemsAdded()
		}
		.property instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> ItemsRemoved()
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = { string('Don\'t use this property. Use \"ModelChangeInfo\" instead.') }
			.get instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> System.Activities.Presentation.Services.ModelChangedEventArgs::get_ItemsRemoved()
		}
		.property instance class System.Activities.Presentation.Services.ModelChangeInfo ModelChangeInfo()
		{
			.get instance class System.Activities.Presentation.Services.ModelChangeInfo System.Activities.Presentation.Services.ModelChangedEventArgs::get_ModelChangeInfo()
		}
		.property instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelProperty> PropertiesChanged()
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = { string('Don\'t use this property. Use \"ModelChangeInfo\" instead.') }
			.get instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelProperty> System.Activities.Presentation.Services.ModelChangedEventArgs::get_PropertiesChanged()
		}
	}
	.class public abstract ModelSearchService
		extends [mscorlib]System.Object
	{
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.Activities.Presentation.Model.TextImage GenerateTextImage()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool NavigateTo(int32 location)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool NavigateTo(int32 startLine, int32 startColumn, int32 endLine, int32 endColumn)
		{
		}
	}
	.class public abstract ModelService
		extends [mscorlib]System.Object
	{
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_Root()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void add_ModelChanged(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.Services.ModelChangedEventArgs> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void remove_ModelChanged(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.Services.ModelChangedEventArgs> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
		}
		.method family virtual hidebysig newslot abstract 
			instance class System.Activities.Presentation.Model.ModelItem CreateItem(class [mscorlib]System.Type itemType, valuetype System.Activities.Presentation.Model.CreateOptions options, object[] arguments)
		{
			.param [3]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
		}
		.method family virtual hidebysig newslot abstract 
			instance class System.Activities.Presentation.Model.ModelItem CreateItem(object item)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance class System.Activities.Presentation.Model.ModelItem CreateStaticMemberItem(class [mscorlib]System.Type 'type', string memberName)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> Find(class System.Activities.Presentation.Model.ModelItem startingItem, class [mscorlib]System.Type 'type')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> Find(class System.Activities.Presentation.Model.ModelItem startingItem, class [mscorlib]'System.Predicate`1'<class [mscorlib]System.Type> match)
		{
		}
		.method public hidebysig 
			instance class System.Activities.Presentation.Model.ModelItem FromName(class System.Activities.Presentation.Model.ModelItem scope, string name)
		{
			ret
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.Activities.Presentation.Model.ModelItem FromName(class System.Activities.Presentation.Model.ModelItem scope, string name, valuetype [mscorlib]System.StringComparison comparison)
		{
		}
		.method assembly hidebysig 
			instance class System.Activities.Presentation.Model.ModelItem InvokeCreateItem(class [mscorlib]System.Type itemType, valuetype System.Activities.Presentation.Model.CreateOptions options, object[] arguments)
		{
			.param [3]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig 
			instance class System.Activities.Presentation.Model.ModelItem InvokeCreateStaticMemberItem(class [mscorlib]System.Type 'type', string memberName)
		{
			ret
		}
		.method assembly hidebysig 
			instance class System.Activities.Presentation.Model.ModelItem InvokeCreateItem(object item)
		{
			ret
		}
		.event class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.Services.ModelChangedEventArgs> ModelChanged
		{
			.addon instance void System.Activities.Presentation.Services.ModelService::add_ModelChanged(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.Services.ModelChangedEventArgs>)
			.removeon instance void System.Activities.Presentation.Services.ModelService::remove_ModelChanged(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.Services.ModelChangedEventArgs>)
		}
		.property instance class System.Activities.Presentation.Model.ModelItem Root()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.Services.ModelService::get_Root()
		}
	}
	.class public abstract ViewService
		extends [mscorlib]System.Object
	{
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.Activities.Presentation.Model.ModelItem GetModel(class [WindowsBase]System.Windows.DependencyObject view)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [WindowsBase]System.Windows.DependencyObject GetView(class System.Activities.Presentation.Model.ModelItem model)
		{
		}
	}
}
.namespace System.Activities.Presentation.Sqm
{
	.class private sealed ActivityTypeId
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Activities.Presentation.Sqm.ActivityTypeId AddToCollection = int32(0x00000020)
		.field static public literal valuetype System.Activities.Presentation.Sqm.ActivityTypeId Assign = int32(0x00000017)
		.field static public literal valuetype System.Activities.Presentation.Sqm.ActivityTypeId CancellationScope = int32(0x0000001B)
		.field static public literal valuetype System.Activities.Presentation.Sqm.ActivityTypeId ClearCollection = int32(0x00000021)
		.field static public literal valuetype System.Activities.Presentation.Sqm.ActivityTypeId CompensableActivity = int32(0x0000001C)
		.field static public literal valuetype System.Activities.Presentation.Sqm.ActivityTypeId Compensate = int32(0x0000001D)
		.field static public literal valuetype System.Activities.Presentation.Sqm.ActivityTypeId Confirm = int32(0x0000001E)
		.field static public literal valuetype System.Activities.Presentation.Sqm.ActivityTypeId CorrelationScope = int32(0x0000000E)
		.field static public literal valuetype System.Activities.Presentation.Sqm.ActivityTypeId Delay = int32(0x00000018)
		.field static public literal valuetype System.Activities.Presentation.Sqm.ActivityTypeId DoWhile = int32(0x00000001)
		.field static public literal valuetype System.Activities.Presentation.Sqm.ActivityTypeId ExistsInCollection = int32(0x00000022)
		.field static public literal valuetype System.Activities.Presentation.Sqm.ActivityTypeId FinalState = int32(0x0000002A)
		.field static public literal valuetype System.Activities.Presentation.Sqm.ActivityTypeId FlowDecision = int32(0x0000000C)
		.field static public literal valuetype System.Activities.Presentation.Sqm.ActivityTypeId FlowSwitch = int32(0x0000000D)
		.field static public literal valuetype System.Activities.Presentation.Sqm.ActivityTypeId Flowchart = int32(0x0000000B)
		.field static public literal valuetype System.Activities.Presentation.Sqm.ActivityTypeId ForEach = int32(0x00000002)
		.field static public literal valuetype System.Activities.Presentation.Sqm.ActivityTypeId If = int32(0x00000003)
		.field static public literal valuetype System.Activities.Presentation.Sqm.ActivityTypeId InitializeCorrelation = int32(0x0000000F)
		.field static public literal valuetype System.Activities.Presentation.Sqm.ActivityTypeId Interop = int32(0x00000027)
		.field static public literal valuetype System.Activities.Presentation.Sqm.ActivityTypeId InvokeDelegate = int32(0x00000031)
		.field static public literal valuetype System.Activities.Presentation.Sqm.ActivityTypeId InvokeMethod = int32(0x00000019)
		.field static public literal valuetype System.Activities.Presentation.Sqm.ActivityTypeId NoPersistScope = int32(0x0000002C)
		.field static public literal valuetype System.Activities.Presentation.Sqm.ActivityTypeId Parallel = int32(0x00000004)
		.field static public literal valuetype System.Activities.Presentation.Sqm.ActivityTypeId ParallelForEach = int32(0x00000005)
		.field static public literal valuetype System.Activities.Presentation.Sqm.ActivityTypeId Persist = int32(0x00000015)
		.field static public literal valuetype System.Activities.Presentation.Sqm.ActivityTypeId Pick = int32(0x00000006)
		.field static public literal valuetype System.Activities.Presentation.Sqm.ActivityTypeId PickBranch = int32(0x00000007)
		.field static public literal valuetype System.Activities.Presentation.Sqm.ActivityTypeId Receive = int32(0x00000010)
		.field static public literal valuetype System.Activities.Presentation.Sqm.ActivityTypeId ReceiveAndSendReply = int32(0x00000011)
		.field static public literal valuetype System.Activities.Presentation.Sqm.ActivityTypeId RemoveFromCollection = int32(0x00000023)
		.field static public literal valuetype System.Activities.Presentation.Sqm.ActivityTypeId Rethrow = int32(0x00000026)
		.field static public literal valuetype System.Activities.Presentation.Sqm.ActivityTypeId Send = int32(0x00000012)
		.field static public literal valuetype System.Activities.Presentation.Sqm.ActivityTypeId SendAndReceiveReply = int32(0x00000013)
		.field static public literal valuetype System.Activities.Presentation.Sqm.ActivityTypeId Sequence = int32(0x00000008)
		.field static public literal valuetype System.Activities.Presentation.Sqm.ActivityTypeId State = int32(0x00000029)
		.field static public literal valuetype System.Activities.Presentation.Sqm.ActivityTypeId StateMachine = int32(0x00000028)
		.field static public literal valuetype System.Activities.Presentation.Sqm.ActivityTypeId Switch = int32(0x00000009)
		.field static public literal valuetype System.Activities.Presentation.Sqm.ActivityTypeId TerminateWorkflow = int32(0x00000016)
		.field static public literal valuetype System.Activities.Presentation.Sqm.ActivityTypeId Throw = int32(0x00000024)
		.field static public literal valuetype System.Activities.Presentation.Sqm.ActivityTypeId TransactedReceiveScope = int32(0x00000014)
		.field static public literal valuetype System.Activities.Presentation.Sqm.ActivityTypeId TransactionScope = int32(0x0000001F)
		.field static public literal valuetype System.Activities.Presentation.Sqm.ActivityTypeId TryCatch = int32(0x00000025)
		.field static public literal valuetype System.Activities.Presentation.Sqm.ActivityTypeId Unknown = int32(0x00000000)
		.field static public literal valuetype System.Activities.Presentation.Sqm.ActivityTypeId While = int32(0x0000000A)
		.field static public literal valuetype System.Activities.Presentation.Sqm.ActivityTypeId WriteLine = int32(0x0000001A)
	}
	.class private abstract sealed ActivityUsageCounter
		extends [mscorlib]System.Object
	{
		.method assembly static hidebysig 
			valuetype System.Activities.Presentation.Sqm.ActivityTypeId MapTypeToId(class [mscorlib]System.Type activityType)
		{
			ret
		}
		.method assembly static hidebysig 
			void ReportUsage(class System.Activities.Presentation.Sqm.IVSSqmService sqmService, class [mscorlib]System.Type activityType)
		{
			ret
		}
	}
	.class private sealed DataPointIds
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Activities.Presentation.Sqm.DataPointIds ActivityUsageCount = int32(0x000002EC)
		.field static public literal valuetype System.Activities.Presentation.Sqm.DataPointIds FeatureUsageCount = int32(0x000002ED)
	}
	.class private abstract sealed FeatureUsageCounter
		extends [mscorlib]System.Object
	{
		.method assembly static hidebysig 
			void ReportUsage(class System.Activities.Presentation.Sqm.IVSSqmService sqmService, valuetype System.Activities.Presentation.Sqm.WorkflowDesignerFeatureId featureId)
		{
			ret
		}
	}
	.class public interface abstract IVSSqmService
	{
		.method public virtual hidebysig newslot abstract 
			instance void SetDatapoint(int32 dataPointId, uint32 'value')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void AddItemToStream(int32 dataPointId, uint32 'value')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void AddArrayToStream(int32 dataPointId, uint32[] data, int32 count)
		{
		}
	}
	.class private sealed WorkflowDesignerFeatureId
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Activities.Presentation.Sqm.WorkflowDesignerFeatureId Breadcrumb = int32(0x00000004)
		.field static public literal valuetype System.Activities.Presentation.Sqm.WorkflowDesignerFeatureId CollapseAll = int32(0x00000006)
		.field static public literal valuetype System.Activities.Presentation.Sqm.WorkflowDesignerFeatureId CopyAsImage = int32(0x0000000A)
		.field static public literal valuetype System.Activities.Presentation.Sqm.WorkflowDesignerFeatureId ExpandAll = int32(0x00000005)
		.field static public literal valuetype System.Activities.Presentation.Sqm.WorkflowDesignerFeatureId FitToScreen = int32(0x00000002)
		.field static public literal valuetype System.Activities.Presentation.Sqm.WorkflowDesignerFeatureId Minimap = int32(0x00000003)
		.field static public literal valuetype System.Activities.Presentation.Sqm.WorkflowDesignerFeatureId None = int32(0x00000000)
		.field static public literal valuetype System.Activities.Presentation.Sqm.WorkflowDesignerFeatureId OpenChild = int32(0x00000008)
		.field static public literal valuetype System.Activities.Presentation.Sqm.WorkflowDesignerFeatureId ResetZoom = int32(0x00000001)
		.field static public literal valuetype System.Activities.Presentation.Sqm.WorkflowDesignerFeatureId Restore = int32(0x00000007)
		.field static public literal valuetype System.Activities.Presentation.Sqm.WorkflowDesignerFeatureId SaveAsImage = int32(0x0000000B)
		.field static public literal valuetype System.Activities.Presentation.Sqm.WorkflowDesignerFeatureId ViewParent = int32(0x00000009)
	}
}
.namespace System.Activities.Presentation.Toolbox
{
	.class public abstract ActivityTemplateFactory
		extends [mscorlib]System.Object
		implements System.Activities.Presentation.IActivityTemplateFactory
	{
		.custom instance void [System.Xaml]System.Windows.Markup.ContentPropertyAttribute::.ctor(string) = { string('Implementation') }
		.method family virtual hidebysig newslot specialname 
			instance class [mscorlib]'System.Func`1'<class [System.Activities]System.Activities.Activity> get_Implementation()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method family virtual hidebysig newslot specialname 
			instance void set_Implementation(class [mscorlib]'System.Func`1'<class [System.Activities]System.Activities.Activity> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [System.Activities]System.Activities.Activity Create(class [WindowsBase]System.Windows.DependencyObject target)
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class [mscorlib]'System.Func`1'<class [System.Activities]System.Activities.Activity> Implementation()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string(nullref) }
			.get instance class [mscorlib]'System.Func`1'<class [System.Activities]System.Activities.Activity> System.Activities.Presentation.Toolbox.ActivityTemplateFactory::get_Implementation()
			.set instance void System.Activities.Presentation.Toolbox.ActivityTemplateFactory::set_Implementation(class [mscorlib]'System.Func`1'<class [System.Activities]System.Activities.Activity>)
		}
	}
	.class public sealed ActivityTemplateFactoryBuilder
		extends [mscorlib]System.Object
	{
		.custom instance void [System.Xaml]System.Windows.Markup.ContentPropertyAttribute::.ctor(string) = { string('Implementation') }
		.custom instance void [System]System.ComponentModel.DesignerAttribute::.ctor(class [mscorlib]System.Type) = { type(System.Activities.Presentation.View.ActivityTypeDesigner) }
		.method public hidebysig specialname 
			instance string get_Name()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_Name(string 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Type get_TargetType()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_TargetType(class [mscorlib]System.Type 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance object get_Implementation()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_Implementation(object 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance object Implementation()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.get instance object System.Activities.Presentation.Toolbox.ActivityTemplateFactoryBuilder::get_Implementation()
			.set instance void System.Activities.Presentation.Toolbox.ActivityTemplateFactoryBuilder::set_Implementation(object)
		}
		.property instance string Name()
		{
			.get instance string System.Activities.Presentation.Toolbox.ActivityTemplateFactoryBuilder::get_Name()
			.set instance void System.Activities.Presentation.Toolbox.ActivityTemplateFactoryBuilder::set_Name(string)
		}
		.property instance class [mscorlib]System.Type TargetType()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string(nullref) }
			.get instance class [mscorlib]System.Type System.Activities.Presentation.Toolbox.ActivityTemplateFactoryBuilder::get_TargetType()
			.set instance void System.Activities.Presentation.Toolbox.ActivityTemplateFactoryBuilder::set_TargetType(class [mscorlib]System.Type)
		}
	}
	.class public abstract 'ActivityTemplateFactory`1'<class 'T'>
		extends [mscorlib]System.Object
		implements class 'System.Activities.Presentation.IActivityTemplateFactory`1'<!0>
	{
		.custom instance void [System.Xaml]System.Windows.Markup.ContentPropertyAttribute::.ctor(string) = { string('Implementation') }
		.method family virtual hidebysig newslot specialname 
			instance class [mscorlib]'System.Func`1'<!0> get_Implementation()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method family virtual hidebysig newslot specialname 
			instance void set_Implementation(class [mscorlib]'System.Func`1'<!0> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public final virtual hidebysig newslot 
			instance !0 Create(class [WindowsBase]System.Windows.DependencyObject target, class [PresentationCore]System.Windows.IDataObject dataObject)
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class [mscorlib]'System.Func`1'<!0> Implementation()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string(nullref) }
			.get instance class [mscorlib]'System.Func`1'<!0> 'System.Activities.Presentation.Toolbox.ActivityTemplateFactory`1'::get_Implementation()
			.set instance void 'System.Activities.Presentation.Toolbox.ActivityTemplateFactory`1'::set_Implementation(class [mscorlib]'System.Func`1'<!0>)
		}
	}
	.class public sealed ToolCreatedEventArgs
		extends [PresentationCore]System.Windows.RoutedEventArgs
	{
		.method assembly hidebysig specialname 
			instance void .ctor(class [PresentationCore]System.Windows.RoutedEvent eventName, object sender, class [System]System.ComponentModel.IComponent[] components)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System]System.ComponentModel.IComponent[] get_Components()
		{
			ret
		}
		.property instance class [System]System.ComponentModel.IComponent[] Components()
		{
			.get instance class [System]System.ComponentModel.IComponent[] System.Activities.Presentation.Toolbox.ToolCreatedEventArgs::get_Components()
		}
	}
	.class public sealed ToolCreatedEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object sender, class System.Activities.Presentation.Toolbox.ToolCreatedEventArgs e)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object sender, class System.Activities.Presentation.Toolbox.ToolCreatedEventArgs e, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public sealed ToolboxCategory
		extends [mscorlib]System.Object
		implements [System]System.ComponentModel.INotifyPropertyChanged, [mscorlib]System.Collections.IList, [mscorlib]System.Collections.ICollection, [mscorlib]System.Collections.IEnumerable
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = { string('Item') }
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_CategoryName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_CategoryName(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Toolbox.ToolboxItemWrapper get_Item(int32 index)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.ICollection`1'<class System.Activities.Presentation.Toolbox.ToolboxItemWrapper> get_Tools()
		{
			ret
		}
		.method public hidebysig 
			instance void Add(class System.Activities.Presentation.Toolbox.ToolboxItemWrapper tool)
		{
			ret
		}
		.method public hidebysig 
			instance bool Remove(class System.Activities.Presentation.Toolbox.ToolboxItemWrapper tool)
		{
			ret
		}
		.method assembly hidebysig 
			instance void HandleToolCollectionNotification(class [System]System.Collections.Specialized.NotifyCollectionChangedEventHandler listener, bool register)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method private final virtual hidebysig newslot 
			instance int32 System.Collections.IList.Add(object 'value')
		{
			.override [mscorlib]System.Collections.IList::Add
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.IList.Clear()
		{
			.override [mscorlib]System.Collections.IList::Clear
			ret
		}
		.method private final virtual hidebysig newslot 
			instance bool System.Collections.IList.Contains(object 'value')
		{
			.override [mscorlib]System.Collections.IList::Contains
			ret
		}
		.method private final virtual hidebysig newslot 
			instance int32 System.Collections.IList.IndexOf(object 'value')
		{
			.override [mscorlib]System.Collections.IList::IndexOf
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.IList.Insert(int32 index, object 'value')
		{
			.override [mscorlib]System.Collections.IList::Insert
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance bool System.Collections.IList.get_IsFixedSize()
		{
			.override [mscorlib]System.Collections.IList::get_IsFixedSize
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance bool System.Collections.IList.get_IsReadOnly()
		{
			.override [mscorlib]System.Collections.IList::get_IsReadOnly
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.IList.Remove(object 'value')
		{
			.override [mscorlib]System.Collections.IList::Remove
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.IList.RemoveAt(int32 index)
		{
			.override [mscorlib]System.Collections.IList::RemoveAt
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance object System.Collections.IList.get_Item(int32 index)
		{
			.override [mscorlib]System.Collections.IList::get_Item
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance void System.Collections.IList.set_Item(int32 index, object 'value')
		{
			.override [mscorlib]System.Collections.IList::set_Item
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.ICollection.CopyTo(class [mscorlib]System.Array 'array', int32 index)
		{
			.override [mscorlib]System.Collections.ICollection::CopyTo
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance int32 System.Collections.ICollection.get_Count()
		{
			.override [mscorlib]System.Collections.ICollection::get_Count
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance bool System.Collections.ICollection.get_IsSynchronized()
		{
			.override [mscorlib]System.Collections.ICollection::get_IsSynchronized
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance object System.Collections.ICollection.get_SyncRoot()
		{
			.override [mscorlib]System.Collections.ICollection::get_SyncRoot
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			.override [mscorlib]System.Collections.IEnumerable::GetEnumerator
			ret
		}
		.event [System]System.ComponentModel.PropertyChangedEventHandler PropertyChanged
		{
			.addon instance void System.Activities.Presentation.Toolbox.ToolboxCategory::add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
			.removeon instance void System.Activities.Presentation.Toolbox.ToolboxCategory::remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
		}
		.property instance string CategoryName()
		{
			.get instance string System.Activities.Presentation.Toolbox.ToolboxCategory::get_CategoryName()
			.set instance void System.Activities.Presentation.Toolbox.ToolboxCategory::set_CategoryName(string)
		}
		.property instance class System.Activities.Presentation.Toolbox.ToolboxItemWrapper Item(int32)
		{
			.get instance class System.Activities.Presentation.Toolbox.ToolboxItemWrapper System.Activities.Presentation.Toolbox.ToolboxCategory::get_Item(int32)
		}
		.property instance int32 System.Collections.ICollection.Count()
		{
			.get instance int32 System.Activities.Presentation.Toolbox.ToolboxCategory::System.Collections.ICollection.get_Count()
		}
		.property instance bool System.Collections.ICollection.IsSynchronized()
		{
			.get instance bool System.Activities.Presentation.Toolbox.ToolboxCategory::System.Collections.ICollection.get_IsSynchronized()
		}
		.property instance object System.Collections.ICollection.SyncRoot()
		{
			.get instance object System.Activities.Presentation.Toolbox.ToolboxCategory::System.Collections.ICollection.get_SyncRoot()
		}
		.property instance bool System.Collections.IList.IsFixedSize()
		{
			.get instance bool System.Activities.Presentation.Toolbox.ToolboxCategory::System.Collections.IList.get_IsFixedSize()
		}
		.property instance bool System.Collections.IList.IsReadOnly()
		{
			.get instance bool System.Activities.Presentation.Toolbox.ToolboxCategory::System.Collections.IList.get_IsReadOnly()
		}
		.property instance object System.Collections.IList.Item(int32)
		{
			.get instance object System.Activities.Presentation.Toolbox.ToolboxCategory::System.Collections.IList.get_Item(int32)
			.set instance void System.Activities.Presentation.Toolbox.ToolboxCategory::System.Collections.IList.set_Item(int32, object)
		}
		.property instance class [mscorlib]'System.Collections.Generic.ICollection`1'<class System.Activities.Presentation.Toolbox.ToolboxItemWrapper> Tools()
		{
			.get instance class [mscorlib]'System.Collections.Generic.ICollection`1'<class System.Activities.Presentation.Toolbox.ToolboxItemWrapper> System.Activities.Presentation.Toolbox.ToolboxCategory::get_Tools()
		}
	}
	.class public sealed ToolboxCategoryItems
		extends [mscorlib]System.Object
		implements class [mscorlib]'System.Collections.Generic.ICollection`1'<class System.Activities.Presentation.Toolbox.ToolboxCategory>, class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Toolbox.ToolboxCategory>, [mscorlib]System.Collections.IEnumerable, [mscorlib]System.Collections.IList, [mscorlib]System.Collections.ICollection
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = { string('Item') }
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void .ctor(class [System]System.Collections.Specialized.NotifyCollectionChangedEventHandler listener)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Toolbox.ToolboxCategory get_Item(int32 index)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Add(class System.Activities.Presentation.Toolbox.ToolboxCategory item)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Clear()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool Contains(class System.Activities.Presentation.Toolbox.ToolboxCategory item)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void CopyTo(class System.Activities.Presentation.Toolbox.ToolboxCategory[] 'array', int32 arrayIndex)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance int32 get_Count()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_IsReadOnly()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool Remove(class System.Activities.Presentation.Toolbox.ToolboxCategory item)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [mscorlib]'System.Collections.Generic.IEnumerator`1'<class System.Activities.Presentation.Toolbox.ToolboxCategory> GetEnumerator()
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			.override [mscorlib]System.Collections.IEnumerable::GetEnumerator
			ret
		}
		.method private final virtual hidebysig newslot 
			instance int32 System.Collections.IList.Add(object 'value')
		{
			.override [mscorlib]System.Collections.IList::Add
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.IList.Clear()
		{
			.override [mscorlib]System.Collections.IList::Clear
			ret
		}
		.method private final virtual hidebysig newslot 
			instance bool System.Collections.IList.Contains(object 'value')
		{
			.override [mscorlib]System.Collections.IList::Contains
			ret
		}
		.method private final virtual hidebysig newslot 
			instance int32 System.Collections.IList.IndexOf(object 'value')
		{
			.override [mscorlib]System.Collections.IList::IndexOf
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.IList.Insert(int32 index, object 'value')
		{
			.override [mscorlib]System.Collections.IList::Insert
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance bool System.Collections.IList.get_IsFixedSize()
		{
			.override [mscorlib]System.Collections.IList::get_IsFixedSize
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance bool System.Collections.IList.get_IsReadOnly()
		{
			.override [mscorlib]System.Collections.IList::get_IsReadOnly
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.IList.Remove(object 'value')
		{
			.override [mscorlib]System.Collections.IList::Remove
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.IList.RemoveAt(int32 index)
		{
			.override [mscorlib]System.Collections.IList::RemoveAt
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance object System.Collections.IList.get_Item(int32 index)
		{
			.override [mscorlib]System.Collections.IList::get_Item
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance void System.Collections.IList.set_Item(int32 index, object 'value')
		{
			.override [mscorlib]System.Collections.IList::set_Item
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.ICollection.CopyTo(class [mscorlib]System.Array 'array', int32 index)
		{
			.override [mscorlib]System.Collections.ICollection::CopyTo
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance int32 System.Collections.ICollection.get_Count()
		{
			.override [mscorlib]System.Collections.ICollection::get_Count
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance bool System.Collections.ICollection.get_IsSynchronized()
		{
			.override [mscorlib]System.Collections.ICollection::get_IsSynchronized
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance object System.Collections.ICollection.get_SyncRoot()
		{
			.override [mscorlib]System.Collections.ICollection::get_SyncRoot
			ret
		}
		.property instance int32 Count()
		{
			.get instance int32 System.Activities.Presentation.Toolbox.ToolboxCategoryItems::get_Count()
		}
		.property instance bool IsReadOnly()
		{
			.get instance bool System.Activities.Presentation.Toolbox.ToolboxCategoryItems::get_IsReadOnly()
		}
		.property instance class System.Activities.Presentation.Toolbox.ToolboxCategory Item(int32)
		{
			.get instance class System.Activities.Presentation.Toolbox.ToolboxCategory System.Activities.Presentation.Toolbox.ToolboxCategoryItems::get_Item(int32)
		}
		.property instance int32 System.Collections.ICollection.Count()
		{
			.get instance int32 System.Activities.Presentation.Toolbox.ToolboxCategoryItems::System.Collections.ICollection.get_Count()
		}
		.property instance bool System.Collections.ICollection.IsSynchronized()
		{
			.get instance bool System.Activities.Presentation.Toolbox.ToolboxCategoryItems::System.Collections.ICollection.get_IsSynchronized()
		}
		.property instance object System.Collections.ICollection.SyncRoot()
		{
			.get instance object System.Activities.Presentation.Toolbox.ToolboxCategoryItems::System.Collections.ICollection.get_SyncRoot()
		}
		.property instance bool System.Collections.IList.IsFixedSize()
		{
			.get instance bool System.Activities.Presentation.Toolbox.ToolboxCategoryItems::System.Collections.IList.get_IsFixedSize()
		}
		.property instance bool System.Collections.IList.IsReadOnly()
		{
			.get instance bool System.Activities.Presentation.Toolbox.ToolboxCategoryItems::System.Collections.IList.get_IsReadOnly()
		}
		.property instance object System.Collections.IList.Item(int32)
		{
			.get instance object System.Activities.Presentation.Toolbox.ToolboxCategoryItems::System.Collections.IList.get_Item(int32)
			.set instance void System.Activities.Presentation.Toolbox.ToolboxCategoryItems::System.Collections.IList.set_Item(int32, object)
		}
	}
	.class public sealed ToolboxControl
		extends [PresentationFramework]System.Windows.Controls.Control
	{
		.custom instance void [System.Xaml]System.Windows.Markup.ContentPropertyAttribute::.ctor(string) = { string('Categories') }
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_ToolCreated(class System.Activities.Presentation.Toolbox.ToolCreatedEventHandler 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_ToolCreated(class System.Activities.Presentation.Toolbox.ToolCreatedEventHandler 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_ToolSelected(class [PresentationCore]System.Windows.RoutedEventHandler 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_ToolSelected(class [PresentationCore]System.Windows.RoutedEventHandler 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Toolbox.ToolboxCategoryItems get_Categories()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Categories(class System.Activities.Presentation.Toolbox.ToolboxCategoryItems 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ToolboxFile()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ToolboxFile(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Drawing]System.Drawing.Design.ToolboxItem get_SelectedTool()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationFramework]System.Windows.Style get_ToolItemStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ToolItemStyle(class [PresentationFramework]System.Windows.Style 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationFramework]System.Windows.Style get_CategoryItemStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_CategoryItemStyle(class [PresentationFramework]System.Windows.Style 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationFramework]System.Windows.DataTemplate get_ToolTemplate()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ToolTemplate(class [PresentationFramework]System.Windows.DataTemplate 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationFramework]System.Windows.DataTemplate get_CategoryTemplate()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_CategoryTemplate(class [PresentationFramework]System.Windows.DataTemplate 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.WorkflowDesigner get_AssociatedDesigner()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_AssociatedDesigner(class System.Activities.Presentation.WorkflowDesigner 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public virtual hidebysig 
			instance void OnApplyTemplate()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnPreviewKeyDown(class [PresentationCore]System.Windows.Input.KeyEventArgs e)
		{
			ret
		}
		.method assembly hidebysig 
			instance void OnToolMouseMove(object sender, class [PresentationCore]System.Windows.Input.MouseEventArgs args)
		{
			ret
		}
		.method assembly hidebysig 
			instance void OnTreeViewDoubleClick(object sender, class [PresentationCore]System.Windows.Input.MouseEventArgs args)
		{
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty CategoryItemStyleProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty CategoryTemplateProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty SelectedToolProperty
		.field static public initonly class [PresentationCore]System.Windows.RoutedEvent ToolCreatedEvent
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ToolItemStyleProperty
		.field static public initonly class [PresentationCore]System.Windows.RoutedEvent ToolSelectedEvent
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ToolTemplateProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ToolboxFileProperty
		.field assembly class [PresentationFramework]System.Windows.Controls.TextBox searchBox
		.event System.Activities.Presentation.Toolbox.ToolCreatedEventHandler ToolCreated
		{
			.addon instance void System.Activities.Presentation.Toolbox.ToolboxControl::add_ToolCreated(class System.Activities.Presentation.Toolbox.ToolCreatedEventHandler)
			.removeon instance void System.Activities.Presentation.Toolbox.ToolboxControl::remove_ToolCreated(class System.Activities.Presentation.Toolbox.ToolCreatedEventHandler)
		}
		.event [PresentationCore]System.Windows.RoutedEventHandler ToolSelected
		{
			.addon instance void System.Activities.Presentation.Toolbox.ToolboxControl::add_ToolSelected(class [PresentationCore]System.Windows.RoutedEventHandler)
			.removeon instance void System.Activities.Presentation.Toolbox.ToolboxControl::remove_ToolSelected(class [PresentationCore]System.Windows.RoutedEventHandler)
		}
		.property instance class System.Activities.Presentation.WorkflowDesigner AssociatedDesigner()
		{
			.get instance class System.Activities.Presentation.WorkflowDesigner System.Activities.Presentation.Toolbox.ToolboxControl::get_AssociatedDesigner()
			.set instance void System.Activities.Presentation.Toolbox.ToolboxControl::set_AssociatedDesigner(class System.Activities.Presentation.WorkflowDesigner)
		}
		.property instance class System.Activities.Presentation.Toolbox.ToolboxCategoryItems Categories()
		{
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(2) }
			.get instance class System.Activities.Presentation.Toolbox.ToolboxCategoryItems System.Activities.Presentation.Toolbox.ToolboxControl::get_Categories()
			.set instance void System.Activities.Presentation.Toolbox.ToolboxControl::set_Categories(class System.Activities.Presentation.Toolbox.ToolboxCategoryItems)
		}
		.property instance class [PresentationFramework]System.Windows.Style CategoryItemStyle()
		{
			.get instance class [PresentationFramework]System.Windows.Style System.Activities.Presentation.Toolbox.ToolboxControl::get_CategoryItemStyle()
			.set instance void System.Activities.Presentation.Toolbox.ToolboxControl::set_CategoryItemStyle(class [PresentationFramework]System.Windows.Style)
		}
		.property instance class [PresentationFramework]System.Windows.DataTemplate CategoryTemplate()
		{
			.get instance class [PresentationFramework]System.Windows.DataTemplate System.Activities.Presentation.Toolbox.ToolboxControl::get_CategoryTemplate()
			.set instance void System.Activities.Presentation.Toolbox.ToolboxControl::set_CategoryTemplate(class [PresentationFramework]System.Windows.DataTemplate)
		}
		.property instance class [System.Drawing]System.Drawing.Design.ToolboxItem SelectedTool()
		{
			.get instance class [System.Drawing]System.Drawing.Design.ToolboxItem System.Activities.Presentation.Toolbox.ToolboxControl::get_SelectedTool()
		}
		.property instance class [PresentationFramework]System.Windows.Style ToolItemStyle()
		{
			.get instance class [PresentationFramework]System.Windows.Style System.Activities.Presentation.Toolbox.ToolboxControl::get_ToolItemStyle()
			.set instance void System.Activities.Presentation.Toolbox.ToolboxControl::set_ToolItemStyle(class [PresentationFramework]System.Windows.Style)
		}
		.property instance class [PresentationFramework]System.Windows.DataTemplate ToolTemplate()
		{
			.get instance class [PresentationFramework]System.Windows.DataTemplate System.Activities.Presentation.Toolbox.ToolboxControl::get_ToolTemplate()
			.set instance void System.Activities.Presentation.Toolbox.ToolboxControl::set_ToolTemplate(class [PresentationFramework]System.Windows.DataTemplate)
		}
		.property instance string ToolboxFile()
		{
			.get instance string System.Activities.Presentation.Toolbox.ToolboxControl::get_ToolboxFile()
			.set instance void System.Activities.Presentation.Toolbox.ToolboxControl::set_ToolboxFile(string)
		}
	}
	.class private sealed ToolboxItemImageConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method private final virtual hidebysig newslot 
			instance object System.Windows.Data.IValueConverter.Convert(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			.override [PresentationFramework]System.Windows.Data.IValueConverter::Convert
			ret
		}
		.method private final virtual hidebysig newslot 
			instance object System.Windows.Data.IValueConverter.ConvertBack(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			.override [PresentationFramework]System.Windows.Data.IValueConverter::ConvertBack
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private sealed ToolboxItemLoader
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			class System.Activities.Presentation.Toolbox.ToolboxItemLoader GetInstance()
		{
			ret
		}
		.method public hidebysig 
			instance void LoadToolboxItems(string fileName, class System.Activities.Presentation.Toolbox.ToolboxCategoryItems container, bool resetContainer)
		{
			ret
		}
	}
	.class public sealed ToolboxItemWrapper
		extends [mscorlib]System.Object
		implements [System]System.ComponentModel.INotifyPropertyChanged
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type toolType)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type toolType, string displayName)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type toolType, string bitmapName, string displayName)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string toolName, string assemblyName, string bitmapName, string displayName)
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void .ctor(string toolName, string assemblyName, string bitmapName, string displayName, class [PresentationCore]System.Windows.IDataObject dataObject)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance class [System.Drawing]System.Drawing.Design.ToolboxItem get_ToolboxItem()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsValid()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ToolName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ToolName(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_AssemblyName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_AssemblyName(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_BitmapName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BitmapName(string 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class [PresentationCore]System.Windows.IDataObject get_DataObject()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_DataObject(class [PresentationCore]System.Windows.IDataObject 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Drawing]System.Drawing.Bitmap get_Bitmap()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_DisplayName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_DisplayName(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Type get_Type()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ResolveToolboxItem()
		{
			ret
		}
		.method assembly static hidebysig 
			class [System.Drawing]System.Drawing.Bitmap CreateBitmapFromDrawingBrush(class [PresentationCore]System.Windows.Media.DrawingBrush resource)
		{
			ret
		}
		.method assembly static hidebysig 
			class [System.Drawing]System.Drawing.Bitmap GetBitmapFromResource(string resourceString)
		{
			ret
		}
		.method public virtual hidebysig 
			instance string ToString()
		{
			ret
		}
		.method assembly static hidebysig 
			int32 GetSystemDpi(int32 index)
		{
			ret
		}
		.event [System]System.ComponentModel.PropertyChangedEventHandler PropertyChanged
		{
			.addon instance void System.Activities.Presentation.Toolbox.ToolboxItemWrapper::add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
			.removeon instance void System.Activities.Presentation.Toolbox.ToolboxItemWrapper::remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
		}
		.property instance string AssemblyName()
		{
			.get instance string System.Activities.Presentation.Toolbox.ToolboxItemWrapper::get_AssemblyName()
			.set instance void System.Activities.Presentation.Toolbox.ToolboxItemWrapper::set_AssemblyName(string)
		}
		.property instance class [System.Drawing]System.Drawing.Bitmap Bitmap()
		{
			.get instance class [System.Drawing]System.Drawing.Bitmap System.Activities.Presentation.Toolbox.ToolboxItemWrapper::get_Bitmap()
		}
		.property instance string BitmapName()
		{
			.get instance string System.Activities.Presentation.Toolbox.ToolboxItemWrapper::get_BitmapName()
			.set instance void System.Activities.Presentation.Toolbox.ToolboxItemWrapper::set_BitmapName(string)
		}
		.property instance class [PresentationCore]System.Windows.IDataObject DataObject()
		{
			.get instance class [PresentationCore]System.Windows.IDataObject System.Activities.Presentation.Toolbox.ToolboxItemWrapper::get_DataObject()
			.set instance void System.Activities.Presentation.Toolbox.ToolboxItemWrapper::set_DataObject(class [PresentationCore]System.Windows.IDataObject)
		}
		.property instance string DisplayName()
		{
			.get instance string System.Activities.Presentation.Toolbox.ToolboxItemWrapper::get_DisplayName()
			.set instance void System.Activities.Presentation.Toolbox.ToolboxItemWrapper::set_DisplayName(string)
		}
		.property instance bool IsValid()
		{
			.get instance bool System.Activities.Presentation.Toolbox.ToolboxItemWrapper::get_IsValid()
		}
		.property instance string ToolName()
		{
			.get instance string System.Activities.Presentation.Toolbox.ToolboxItemWrapper::get_ToolName()
			.set instance void System.Activities.Presentation.Toolbox.ToolboxItemWrapper::set_ToolName(string)
		}
		.property instance class [System.Drawing]System.Drawing.Design.ToolboxItem ToolboxItem()
		{
			.get instance class [System.Drawing]System.Drawing.Design.ToolboxItem System.Activities.Presentation.Toolbox.ToolboxItemWrapper::get_ToolboxItem()
		}
		.property instance class [mscorlib]System.Type Type()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.Toolbox.ToolboxItemWrapper::get_Type()
		}
	}
	.class private sealed TreeViewContainerStyleSelector
		extends [PresentationFramework]System.Windows.Controls.StyleSelector
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.Toolbox.ToolboxControl owner)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [PresentationFramework]System.Windows.Style SelectStyle(object item, class [WindowsBase]System.Windows.DependencyObject container)
		{
			ret
		}
	}
	.class private sealed TreeViewTemplateSelector
		extends [PresentationFramework]System.Windows.Controls.DataTemplateSelector
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.Toolbox.ToolboxControl owner)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [PresentationFramework]System.Windows.DataTemplate SelectTemplate(object item, class [WindowsBase]System.Windows.DependencyObject container)
		{
			ret
		}
	}
}
.namespace System.Activities.Presentation.Utility
{
	.class private abstract sealed IconHelper
		extends [mscorlib]System.Object
	{
		.method assembly static hidebysig specialname 
			class [mscorlib]'System.Collections.Generic.Dictionary`2'<string,string> get_IconNameMapping()
		{
			ret
		}
		.method assembly static hidebysig 
			string GetIconResourceKey(string activityFullName)
		{
			ret
		}
		.method assembly static hidebysig 
			class [PresentationCore]System.Windows.Media.DrawingBrush GetBrushFromResource(string activityFullName)
		{
			ret
		}
		.property class [mscorlib]'System.Collections.Generic.Dictionary`2'<string,string> IconNameMapping()
		{
			.get class [mscorlib]'System.Collections.Generic.Dictionary`2'<string,string> System.Activities.Presentation.Utility.IconHelper::get_IconNameMapping()
		}
	}
}
.namespace System.Activities.Presentation.Validation
{
	.class private 'BackgroundValidationSynchronizer`1'<'TValidationResult'>
		extends System.Activities.Presentation.Validation.ValidationSynchronizer
	{
		.class nested assembly abstract SynchronizerState<'TValidationResult'>
			extends [mscorlib]System.Object
		{
			.method public hidebysig specialname 
				instance void .ctor(class 'System.Activities.Presentation.Validation.BackgroundValidationSynchronizer`1'<!0> parent)
			{
				ret
			}
			.method family hidebysig specialname 
				instance class 'System.Activities.Presentation.Validation.BackgroundValidationSynchronizer`1'<!0> get_Parent()
			{
				.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
				ret
			}
			.method public virtual hidebysig newslot abstract 
				instance class 'System.Activities.Presentation.Validation.BackgroundValidationSynchronizer`1'/SynchronizerState<!0> Validate(valuetype System.Activities.Presentation.Validation.ValidationReason reason)
			{
			}
			.method public virtual hidebysig newslot abstract 
				instance class 'System.Activities.Presentation.Validation.BackgroundValidationSynchronizer`1'/SynchronizerState<!0> ValidationCompleted(!0 result)
			{
			}
			.method public virtual hidebysig newslot abstract 
				instance class 'System.Activities.Presentation.Validation.BackgroundValidationSynchronizer`1'/SynchronizerState<!0> ValidationCancelled()
			{
			}
			.method public virtual hidebysig newslot abstract 
				instance class 'System.Activities.Presentation.Validation.BackgroundValidationSynchronizer`1'/SynchronizerState<!0> DeactivateValidation()
			{
			}
			.method public virtual hidebysig newslot abstract 
				instance class 'System.Activities.Presentation.Validation.BackgroundValidationSynchronizer`1'/SynchronizerState<!0> ActivateValidation()
			{
			}
			.property instance class 'System.Activities.Presentation.Validation.BackgroundValidationSynchronizer`1'<!0> Parent()
			{
				.get instance class 'System.Activities.Presentation.Validation.BackgroundValidationSynchronizer`1'<!0> 'System.Activities.Presentation.Validation.BackgroundValidationSynchronizer`1'/SynchronizerState::get_Parent()
			}
		}
		.method assembly hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.TaskDispatcher dispatcher, class [mscorlib]'System.Func`3'<valuetype System.Activities.Presentation.Validation.ValidationReason,valuetype [mscorlib]System.Threading.CancellationToken,!0> validationWork, class [mscorlib]'System.Action`1'<!0> updateWork)
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class 'System.Activities.Presentation.Validation.BackgroundValidationSynchronizer`1'/SynchronizerState<!0> get_CurrentState()
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance void Validate(valuetype System.Activities.Presentation.Validation.ValidationReason validationReason)
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance void DeactivateValidation()
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance void ActivateValidation()
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnCurrentStateChanged()
		{
			ret
		}
		.field assembly initonly class 'System.Activities.Presentation.Validation.BackgroundValidationSynchronizer`1'/SynchronizerState<!0> CancellingForDeactivation
		.field assembly initonly class 'System.Activities.Presentation.Validation.BackgroundValidationSynchronizer`1'/SynchronizerState<!0> CancellingForNextValidation
		.field assembly initonly class 'System.Activities.Presentation.Validation.BackgroundValidationSynchronizer`1'/SynchronizerState<!0> Idle
		.field assembly initonly class 'System.Activities.Presentation.Validation.BackgroundValidationSynchronizer`1'/SynchronizerState<!0> Validating
		.field assembly initonly class 'System.Activities.Presentation.Validation.BackgroundValidationSynchronizer`1'/SynchronizerState<!0> ValidationDeactivated
		.property instance class 'System.Activities.Presentation.Validation.BackgroundValidationSynchronizer`1'/SynchronizerState<!0> CurrentState()
		{
			.get instance class 'System.Activities.Presentation.Validation.BackgroundValidationSynchronizer`1'/SynchronizerState<!0> 'System.Activities.Presentation.Validation.BackgroundValidationSynchronizer`1'::get_CurrentState()
		}
	}
	.class private sealed 'ForegroundValidationSynchronizer`1'<'TValidationResult'>
		extends System.Activities.Presentation.Validation.ValidationSynchronizer
	{
		.method assembly hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.TaskDispatcher dispatcher, class [mscorlib]'System.Func`3'<valuetype System.Activities.Presentation.Validation.ValidationReason,valuetype [mscorlib]System.Threading.CancellationToken,!0> validationWork, class [mscorlib]'System.Action`1'<!0> updateWork)
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance void Validate(valuetype System.Activities.Presentation.Validation.ValidationReason reason)
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance void DeactivateValidation()
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance void ActivateValidation()
		{
			ret
		}
	}
	.class public interface abstract IValidationErrorService
	{
		.method public virtual hidebysig newslot abstract 
			instance void ShowValidationErrors(class [mscorlib]'System.Collections.Generic.IList`1'<class System.Activities.Presentation.Validation.ValidationErrorInfo> errors)
		{
		}
	}
	.class private interface abstract IValidationErrorSourceLocator
	{
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]'System.Collections.Generic.List`1'<object> FindSourceDetailFromActivity(class [System.Activities]System.Activities.Activity errorSource, object errorSourceDetail)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void ReplaceParentChainWithSource(class [System.Activities]System.Activities.Activity parentActivity, class [mscorlib]'System.Collections.Generic.List`1'<object> parentChain)
		{
		}
	}
	.class public serializable ValidationErrorInfo
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor(string message)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [System.Activities]System.Activities.Validation.ValidationError validationError)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Id()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [mscorlib]System.Guid get_SourceReferenceId()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_SourceReferenceId(valuetype [mscorlib]System.Guid 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_Message()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_PropertyName()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_FileName()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_FileName(string 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsWarning()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.property instance string FileName()
		{
			.get instance string System.Activities.Presentation.Validation.ValidationErrorInfo::get_FileName()
			.set instance void System.Activities.Presentation.Validation.ValidationErrorInfo::set_FileName(string)
		}
		.property instance string Id()
		{
			.get instance string System.Activities.Presentation.Validation.ValidationErrorInfo::get_Id()
		}
		.property instance bool IsWarning()
		{
			.get instance bool System.Activities.Presentation.Validation.ValidationErrorInfo::get_IsWarning()
		}
		.property instance string Message()
		{
			.get instance string System.Activities.Presentation.Validation.ValidationErrorInfo::get_Message()
		}
		.property instance string PropertyName()
		{
			.get instance string System.Activities.Presentation.Validation.ValidationErrorInfo::get_PropertyName()
		}
		.property instance valuetype [mscorlib]System.Guid SourceReferenceId()
		{
			.get instance valuetype [mscorlib]System.Guid System.Activities.Presentation.Validation.ValidationErrorInfo::get_SourceReferenceId()
			.set instance void System.Activities.Presentation.Validation.ValidationErrorInfo::set_SourceReferenceId(valuetype [mscorlib]System.Guid)
		}
	}
	.class private sealed ValidationReason
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Activities.Presentation.Validation.ValidationReason Load = int32(0x00000001)
		.field static public literal valuetype System.Activities.Presentation.Validation.ValidationReason ModelChange = int32(0x00000003)
		.field static public literal valuetype System.Activities.Presentation.Validation.ValidationReason Save = int32(0x00000002)
		.field static public literal valuetype System.Activities.Presentation.Validation.ValidationReason Unknown = int32(0x00000000)
	}
	.class private sealed ValidationRoot
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor(class [System.ServiceModel.Activities]System.ServiceModel.Activities.WorkflowService workflowService)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [System.Activities]System.Activities.Activity activity)
		{
			ret
		}
		.method public hidebysig 
			instance class [System.Activities]System.Activities.Validation.ValidationResults Validate(class [System.Activities]System.Activities.Validation.ValidationSettings settings)
		{
			ret
		}
		.method public hidebysig 
			instance class [System.Activities]System.Activities.Activity Resolve(string id)
		{
			ret
		}
	}
	.class public ValidationService
		extends [mscorlib]System.Object
	{
		.class nested assembly ErrorsMarkedEventArgs
			extends [mscorlib]System.EventArgs
		{
			.method public hidebysig specialname 
				instance void .ctor(class [mscorlib]'System.Collections.Generic.ICollection`1'<class [System.Activities]System.Activities.Validation.ValidationError> errors, valuetype System.Activities.Presentation.Validation.ValidationReason reason, class System.Activities.Presentation.Model.ModelTreeManager modelTreeManager, class System.Activities.Presentation.EditingContext context)
			{
				ret
			}
			.method public hidebysig specialname 
				instance class [mscorlib]'System.Collections.Generic.ICollection`1'<class [System.Activities]System.Activities.Validation.ValidationError> get_Errors()
			{
				ret
			}
			.method public hidebysig specialname 
				instance valuetype System.Activities.Presentation.Validation.ValidationReason get_Reason()
			{
				ret
			}
			.method public hidebysig specialname 
				instance class System.Activities.Presentation.Model.ModelTreeManager get_ModelTreeManager()
			{
				ret
			}
			.method public hidebysig specialname 
				instance bool get_Handled()
			{
				.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
				ret
			}
			.method public hidebysig specialname 
				instance void set_Handled(bool 'value')
			{
				.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
				ret
			}
			.method public hidebysig specialname 
				instance class System.Activities.Presentation.EditingContext get_Context()
			{
				ret
			}
			.property instance class System.Activities.Presentation.EditingContext Context()
			{
				.get instance class System.Activities.Presentation.EditingContext System.Activities.Presentation.Validation.ValidationService/ErrorsMarkedEventArgs::get_Context()
			}
			.property instance class [mscorlib]'System.Collections.Generic.ICollection`1'<class [System.Activities]System.Activities.Validation.ValidationError> Errors()
			{
				.get instance class [mscorlib]'System.Collections.Generic.ICollection`1'<class [System.Activities]System.Activities.Validation.ValidationError> System.Activities.Presentation.Validation.ValidationService/ErrorsMarkedEventArgs::get_Errors()
			}
			.property instance bool Handled()
			{
				.get instance bool System.Activities.Presentation.Validation.ValidationService/ErrorsMarkedEventArgs::get_Handled()
				.set instance void System.Activities.Presentation.Validation.ValidationService/ErrorsMarkedEventArgs::set_Handled(bool)
			}
			.property instance class System.Activities.Presentation.Model.ModelTreeManager ModelTreeManager()
			{
				.get instance class System.Activities.Presentation.Model.ModelTreeManager System.Activities.Presentation.Validation.ValidationService/ErrorsMarkedEventArgs::get_ModelTreeManager()
			}
			.property instance valuetype System.Activities.Presentation.Validation.ValidationReason Reason()
			{
				.get instance valuetype System.Activities.Presentation.Validation.ValidationReason System.Activities.Presentation.Validation.ValidationService/ErrorsMarkedEventArgs::get_Reason()
			}
		}
		.method assembly hidebysig specialname 
			instance void add_ValidationCompleted(class [mscorlib]System.EventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void remove_ValidationCompleted(class [mscorlib]System.EventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void add_ErrorsMarked(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.Validation.ValidationService/ErrorsMarkedEventArgs> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void remove_ErrorsMarked(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.Validation.ValidationService/ErrorsMarkedEventArgs> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.EditingContext context)
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.EditingContext context, class System.Activities.Presentation.TaskDispatcher validationTaskDispatcher)
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class [System.Activities]System.Activities.DynamicActivity get_DynamicActivityWrapper()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Activities]System.Activities.Validation.ValidationSettings get_Settings()
		{
			ret
		}
		.method public hidebysig 
			instance void ValidateWorkflow()
		{
			ret
		}
		.method assembly hidebysig 
			instance void ValidateWorkflow(valuetype System.Activities.Presentation.Validation.ValidationReason reason)
		{
			ret
		}
		.method assembly hidebysig 
			instance void DeactivateValidation()
		{
			ret
		}
		.method assembly hidebysig 
			instance void ActivateValidation()
		{
			ret
		}
		.method assembly hidebysig 
			instance class [mscorlib]'System.Tuple`3'<valuetype System.Activities.Presentation.Validation.ValidationReason,class [System.Activities]System.Activities.Validation.ValidationResults,class [mscorlib]System.Exception> CoreValidationWork(valuetype System.Activities.Presentation.Validation.ValidationReason reason, valuetype [mscorlib]System.Threading.CancellationToken cancellationToken)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnValidationCompleted()
		{
			ret
		}
		.method assembly static hidebysig 
			class System.Activities.Presentation.Model.ModelItem FindModelItem(class System.Activities.Presentation.Model.ModelTreeManager modelTreeManager, object sourceDetail)
		{
			ret
		}
		.method assembly static hidebysig 
			class [System.Activities]System.Activities.Activity GetParent(class [System.Activities]System.Activities.Activity childActivity)
		{
			ret
		}
		.method assembly static hidebysig 
			class [mscorlib]'System.Collections.Generic.List`1'<class [System.Activities]System.Activities.Activity> GetParentChain(class [System.Activities]System.Activities.Activity activity)
		{
			ret
		}
		.method public hidebysig 
			instance void NavigateToError(class System.Activities.Presentation.Validation.ValidationErrorInfo validationErrorInfo)
		{
			ret
		}
		.method public hidebysig 
			instance void NavigateToError(string id)
		{
			ret
		}
		.method assembly hidebysig 
			instance void RegisterValidationErrorSourceLocator(class [mscorlib]System.Type activityType, class System.Activities.Presentation.Validation.IValidationErrorSourceLocator validationErrorSourceLocator)
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class 'System.Activities.Presentation.Model.AttachedProperty`1'<valuetype System.Activities.Presentation.Validation.ValidationState> get_ValidationStateProperty()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class 'System.Activities.Presentation.Model.AttachedProperty`1'<string> get_ValidationMessageProperty()
		{
			ret
		}
		.event class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.Validation.ValidationService/ErrorsMarkedEventArgs> ErrorsMarked
		{
			.addon instance void System.Activities.Presentation.Validation.ValidationService::add_ErrorsMarked(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.Validation.ValidationService/ErrorsMarkedEventArgs>)
			.removeon instance void System.Activities.Presentation.Validation.ValidationService::remove_ErrorsMarked(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.Validation.ValidationService/ErrorsMarkedEventArgs>)
		}
		.event [mscorlib]System.EventHandler ValidationCompleted
		{
			.addon instance void System.Activities.Presentation.Validation.ValidationService::add_ValidationCompleted(class [mscorlib]System.EventHandler)
			.removeon instance void System.Activities.Presentation.Validation.ValidationService::remove_ValidationCompleted(class [mscorlib]System.EventHandler)
		}
		.property instance class [System.Activities]System.Activities.DynamicActivity DynamicActivityWrapper()
		{
			.get instance class [System.Activities]System.Activities.DynamicActivity System.Activities.Presentation.Validation.ValidationService::get_DynamicActivityWrapper()
		}
		.property instance class [System.Activities]System.Activities.Validation.ValidationSettings Settings()
		{
			.get instance class [System.Activities]System.Activities.Validation.ValidationSettings System.Activities.Presentation.Validation.ValidationService::get_Settings()
		}
		.property instance class 'System.Activities.Presentation.Model.AttachedProperty`1'<string> ValidationMessageProperty()
		{
			.get instance class 'System.Activities.Presentation.Model.AttachedProperty`1'<string> System.Activities.Presentation.Validation.ValidationService::get_ValidationMessageProperty()
		}
		.property instance class 'System.Activities.Presentation.Model.AttachedProperty`1'<valuetype System.Activities.Presentation.Validation.ValidationState> ValidationStateProperty()
		{
			.get instance class 'System.Activities.Presentation.Model.AttachedProperty`1'<valuetype System.Activities.Presentation.Validation.ValidationState> System.Activities.Presentation.Validation.ValidationService::get_ValidationStateProperty()
		}
	}
	.class public sealed ValidationState
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Activities.Presentation.Validation.ValidationState ChildInvalid = int32(0x00000001)
		.field static public literal valuetype System.Activities.Presentation.Validation.ValidationState Error = int32(0x00000003)
		.field static public literal valuetype System.Activities.Presentation.Validation.ValidationState Valid = int32(0x00000000)
		.field static public literal valuetype System.Activities.Presentation.Validation.ValidationState Warning = int32(0x00000002)
	}
	.class private abstract ValidationSynchronizer
		extends [mscorlib]System.Object
	{
		.method assembly virtual hidebysig newslot strict abstract 
			instance void Validate(valuetype System.Activities.Presentation.Validation.ValidationReason reason)
		{
		}
		.method assembly virtual hidebysig newslot strict abstract 
			instance void DeactivateValidation()
		{
		}
		.method assembly virtual hidebysig newslot strict abstract 
			instance void ActivateValidation()
		{
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
}
.namespace System.Activities.Presentation.View
{
	.class private ActivityTypeDesigner
		extends System.Activities.Presentation.View.DesignerWithHeader
		implements System.Activities.Presentation.IExpandChild, [System.Xaml]System.Windows.Markup.IComponentConnector
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnModelItemChanged(object newItem)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnContextMenuLoaded(class [PresentationFramework]System.Windows.Controls.ContextMenu menu)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_ExpandedChild()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void InitializeComponent()
		{
			ret
		}
		.method assembly hidebysig 
			instance class [mscorlib]System.Delegate _CreateDelegate(class [mscorlib]System.Type delegateType, string 'handler')
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Windows.Markup.IComponentConnector.Connect(int32 connectionId, object target)
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.override [System.Xaml]System.Windows.Markup.IComponentConnector::Connect
			ret
		}
		.field assembly class System.Activities.Presentation.View.ActivityTypeDesigner activityTypeDesignerElement
		.property instance class System.Activities.Presentation.Model.ModelItem ExpandedChild()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.View.ActivityTypeDesigner::get_ExpandedChild()
		}
	}
	.class private ActivityTypeResolver
		extends System.Activities.Presentation.DialogWindow
		implements [System.Xaml]System.Windows.Markup.IComponentConnector
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnInitialized(class [mscorlib]System.EventArgs e)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Type get_ConcreteType()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Type get_EditedType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_EditedType(class [mscorlib]System.Type 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.View.TypeKeyValue> get_GenericTypeMapping()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_GenericTypeMapping(class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.View.TypeKeyValue> 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsTypeResolved()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.View.TypeResolvingOptions get_Options()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_Options(class System.Activities.Presentation.View.TypeResolvingOptions 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void NotifyTypeChanged(class System.Activities.Presentation.View.TypeKeyValue sender)
		{
			ret
		}
		.method family virtual hidebysig 
			instance class [PresentationCore]System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void InitializeComponent()
		{
			ret
		}
		.method assembly hidebysig 
			instance class [mscorlib]System.Delegate _CreateDelegate(class [mscorlib]System.Type delegateType, string 'handler')
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Windows.Markup.IComponentConnector.Connect(int32 connectionId, object target)
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.override [System.Xaml]System.Windows.Markup.IComponentConnector::Connect
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty EditedTypeProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty GenericTypeMappingProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty IsTypeResolvedProperty
		.field assembly class [PresentationFramework]System.Windows.Controls.TextBlock typeName
		.field assembly class [PresentationFramework]System.Windows.Controls.ItemsControl typeResolver
		.property instance class [mscorlib]System.Type ConcreteType()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.View.ActivityTypeResolver::get_ConcreteType()
		}
		.property instance class [mscorlib]System.Type EditedType()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.View.ActivityTypeResolver::get_EditedType()
			.set instance void System.Activities.Presentation.View.ActivityTypeResolver::set_EditedType(class [mscorlib]System.Type)
		}
		.property instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.View.TypeKeyValue> GenericTypeMapping()
		{
			.get instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.View.TypeKeyValue> System.Activities.Presentation.View.ActivityTypeResolver::get_GenericTypeMapping()
			.set instance void System.Activities.Presentation.View.ActivityTypeResolver::set_GenericTypeMapping(class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.View.TypeKeyValue>)
		}
		.property instance bool IsTypeResolved()
		{
			.get instance bool System.Activities.Presentation.View.ActivityTypeResolver::get_IsTypeResolved()
		}
		.property instance class System.Activities.Presentation.View.TypeResolvingOptions Options()
		{
			.get instance class System.Activities.Presentation.View.TypeResolvingOptions System.Activities.Presentation.View.ActivityTypeResolver::get_Options()
			.set instance void System.Activities.Presentation.View.ActivityTypeResolver::set_Options(class System.Activities.Presentation.View.TypeResolvingOptions)
		}
	}
	.class private ActivityTypeResolverAutomationPeer
		extends [PresentationCore]System.Windows.Automation.Peers.UIElementAutomationPeer
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.View.ActivityTypeResolver owner)
		{
			ret
		}
		.method family virtual hidebysig 
			instance valuetype [PresentationCore]System.Windows.Automation.Peers.AutomationControlType GetAutomationControlTypeCore()
		{
			ret
		}
		.method family virtual hidebysig 
			instance string GetNameCore()
		{
			ret
		}
	}
	.class private AnnotationDialog
		extends System.Activities.Presentation.DialogWindow
		implements [System.Xaml]System.Windows.Markup.IComponentConnector
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_AnnotationText()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_AnnotationText(string 'value')
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnKeyDown(class [PresentationCore]System.Windows.Input.KeyEventArgs e)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void InitializeComponent()
		{
			ret
		}
		.method assembly hidebysig 
			instance class [mscorlib]System.Delegate _CreateDelegate(class [mscorlib]System.Type delegateType, string 'handler')
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Windows.Markup.IComponentConnector.Connect(int32 connectionId, object target)
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.override [System.Xaml]System.Windows.Markup.IComponentConnector::Connect
			ret
		}
		.field assembly class [PresentationFramework]System.Windows.Controls.TextBox annotationTextBox
		.property instance string AnnotationText()
		{
			.get instance string System.Activities.Presentation.View.AnnotationDialog::get_AnnotationText()
			.set instance void System.Activities.Presentation.View.AnnotationDialog::set_AnnotationText(string)
		}
	}
	.class private ArgumentDesigner
		extends [PresentationFramework]System.Windows.Controls.ContentControl
		implements [System.Xaml]System.Windows.Markup.IComponentConnector, [PresentationFramework]System.Windows.Markup.IStyleConnector
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_ArgumentCollectionChanged(class [PresentationCore]System.Windows.RoutedEventHandler 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_ArgumentCollectionChanged(class [PresentationCore]System.Windows.RoutedEventHandler 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_ActivitySchema()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ActivitySchema(class System.Activities.Presentation.Model.ModelItem 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.EditingContext get_Context()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Context(class System.Activities.Presentation.EditingContext 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class System.Activities.Presentation.Converters.ArgumentToExpressionConverter get_ArgumentToExpressionConverter()
		{
			ret
		}
		.method public hidebysig 
			instance bool CreateNewArgumentWrapper()
		{
			ret
		}
		.method assembly hidebysig 
			instance void SelectArgument(class System.Activities.Presentation.Model.ModelItem argument)
		{
			ret
		}
		.method assembly hidebysig 
			instance void UpdateTypeDesigner(class System.Activities.Presentation.View.DesignTimeArgument argument)
		{
			ret
		}
		.method assembly hidebysig 
			instance void CheckCaseInsensitiveDuplicates(class System.Activities.Presentation.View.VBIdentifierName identifierName, string newName)
		{
			ret
		}
		.method assembly hidebysig 
			instance void ValidateArgumentName(class System.Activities.Presentation.View.VBIdentifierName identifierName, string newName, string oldName)
		{
			ret
		}
		.method assembly hidebysig 
			instance void UpdateArgumentName(class System.Activities.Presentation.View.DesignTimeArgument argumentWrapper, string newName, string oldName)
		{
			ret
		}
		.method assembly hidebysig 
			instance void NotifyAnnotationTextChanged()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnContextMenuOpening(class [PresentationFramework]System.Windows.Controls.ContextMenuEventArgs e)
		{
			ret
		}
		.method family hidebysig 
			instance void OnDataGridCellGotFocus(object sender, class [PresentationCore]System.Windows.RoutedEventArgs e)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void InitializeComponent()
		{
			ret
		}
		.method assembly hidebysig 
			instance class [mscorlib]System.Delegate _CreateDelegate(class [mscorlib]System.Type delegateType, string 'handler')
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Windows.Markup.IComponentConnector.Connect(int32 connectionId, object target)
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.override [System.Xaml]System.Windows.Markup.IComponentConnector::Connect
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Windows.Markup.IStyleConnector.Connect(int32 connectionId, object target)
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.override [PresentationFramework]System.Windows.Markup.IStyleConnector::Connect
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ActivitySchemaProperty
		.field static public initonly class [PresentationCore]System.Windows.RoutedEvent ArgumentCollectionChangedEvent
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ContextProperty
		.field assembly class System.Activities.Presentation.View.ArgumentDesigner argumentDesigner
		.field assembly class [PresentationFramework]System.Windows.Controls.DataGrid argumentsDataGrid
		.event [PresentationCore]System.Windows.RoutedEventHandler ArgumentCollectionChanged
		{
			.addon instance void System.Activities.Presentation.View.ArgumentDesigner::add_ArgumentCollectionChanged(class [PresentationCore]System.Windows.RoutedEventHandler)
			.removeon instance void System.Activities.Presentation.View.ArgumentDesigner::remove_ArgumentCollectionChanged(class [PresentationCore]System.Windows.RoutedEventHandler)
		}
		.property instance class System.Activities.Presentation.Model.ModelItem ActivitySchema()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.View.ArgumentDesigner::get_ActivitySchema()
			.set instance void System.Activities.Presentation.View.ArgumentDesigner::set_ActivitySchema(class System.Activities.Presentation.Model.ModelItem)
		}
		.property instance class System.Activities.Presentation.Converters.ArgumentToExpressionConverter ArgumentToExpressionConverter()
		{
			.get instance class System.Activities.Presentation.Converters.ArgumentToExpressionConverter System.Activities.Presentation.View.ArgumentDesigner::get_ArgumentToExpressionConverter()
		}
		.property instance class System.Activities.Presentation.EditingContext Context()
		{
			.get instance class System.Activities.Presentation.EditingContext System.Activities.Presentation.View.ArgumentDesigner::get_Context()
			.set instance void System.Activities.Presentation.View.ArgumentDesigner::set_Context(class System.Activities.Presentation.EditingContext)
		}
	}
	.class private sealed 'ArrayOf`1'<'T'>
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private abstract sealed AutoScrollHelper
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			void AutoScroll(class [PresentationCore]System.Windows.Input.MouseEventArgs e, class [WindowsBase]System.Windows.DependencyObject element, float64 offsetPerScroll)
		{
			ret
		}
		.method public static hidebysig 
			void AutoScroll(class [PresentationCore]System.Windows.DragEventArgs e, class [PresentationFramework]System.Windows.Controls.ScrollViewer scrollViewer, float64 offsetPerScroll)
		{
			ret
		}
		.method public static hidebysig 
			void AutoScroll(valuetype [WindowsBase]System.Windows.Point position, class [PresentationFramework]System.Windows.Controls.ScrollViewer scrollViewer, float64 offsetPerScroll)
		{
			ret
		}
	}
	.class private BreadCrumbTextConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IMultiValueConverter
	{
		.method assembly hidebysig specialname 
			instance float64 get_PixelsPerChar()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_PixelsPerChar(float64 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object Convert(object[] values, class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object[] ConvertBack(object 'value', class [mscorlib]System.Type[] targetTypes, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance float64 PixelsPerChar()
		{
			.get instance float64 System.Activities.Presentation.View.BreadCrumbTextConverter::get_PixelsPerChar()
			.set instance void System.Activities.Presentation.View.BreadCrumbTextConverter::set_PixelsPerChar(float64)
		}
	}
	.class private sealed BrowseForType
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private sealed CanExpandCollapseAllConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed CommandMenuMode
		extends [mscorlib]System.Object
	{
		.field static public initonly class System.Activities.Presentation.View.CommandMenuMode FullCommandMenu
		.field static public initonly class System.Activities.Presentation.View.CommandMenuMode NoCommandMenu
	}
	.class private sealed ContextMenuIconProvider
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IMultiValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object[] values, class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object[] ConvertBack(object 'value', class [mscorlib]System.Type[] targetTypes, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private sealed DataGridHelper
		extends [PresentationFramework]System.Windows.FrameworkElement
		implements [System.Xaml]System.Windows.Markup.IComponentConnector, [PresentationFramework]System.Windows.Markup.IStyleConnector
	{
		.class nested assembly sealed DefaultControlBehavior
			extends System.Activities.Presentation.View.DataGridHelper/EditingControlBehavior
		{
			.method public hidebysig specialname 
				instance void .ctor(class [PresentationFramework]System.Windows.Controls.DataGrid dataGrid)
			{
				ret
			}
			.method public virtual hidebysig 
				instance bool HandleControlLoaded(class [PresentationFramework]System.Windows.Controls.Control control, class [PresentationFramework]System.Windows.Controls.DataGridCell cell, bool newRowLoaded)
			{
				ret
			}
			.method public virtual hidebysig 
				instance bool ControlUnloaded(class [PresentationFramework]System.Windows.Controls.Control control, class [PresentationFramework]System.Windows.Controls.DataGridCell cell)
			{
				ret
			}
		}
		.class nested assembly abstract EditingControlBehavior
			extends [mscorlib]System.Object
		{
			.method family hidebysig specialname 
				instance class System.Activities.Presentation.View.DesignerView get_DesignerView()
			{
				.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
				ret
			}
			.method family hidebysig specialname 
				instance class [PresentationFramework]System.Windows.Controls.DataGrid get_OwnerDataGrid()
			{
				.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
				ret
			}
			.method family hidebysig specialname 
				instance void set_OwnerDataGrid(class [PresentationFramework]System.Windows.Controls.DataGrid 'value')
			{
				.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
				ret
			}
			.method public hidebysig specialname 
				instance void .ctor(class [PresentationFramework]System.Windows.Controls.DataGrid dataGrid)
			{
				ret
			}
			.method public virtual hidebysig newslot abstract 
				instance bool HandleControlLoaded(class [PresentationFramework]System.Windows.Controls.Control control, class [PresentationFramework]System.Windows.Controls.DataGridCell cell, bool newRowLoaded)
			{
			}
			.method public virtual hidebysig newslot abstract 
				instance bool ControlUnloaded(class [PresentationFramework]System.Windows.Controls.Control control, class [PresentationFramework]System.Windows.Controls.DataGridCell cell)
			{
			}
			.method family hidebysig 
				instance void ToggleDesignerViewAutoCommit(bool shouldIgnore)
			{
				ret
			}
			.property instance class System.Activities.Presentation.View.DesignerView DesignerView()
			{
				.get instance class System.Activities.Presentation.View.DesignerView System.Activities.Presentation.View.DataGridHelper/EditingControlBehavior::get_DesignerView()
			}
			.property instance class [PresentationFramework]System.Windows.Controls.DataGrid OwnerDataGrid()
			{
				.get instance class [PresentationFramework]System.Windows.Controls.DataGrid System.Activities.Presentation.View.DataGridHelper/EditingControlBehavior::get_OwnerDataGrid()
				.set instance void System.Activities.Presentation.View.DataGridHelper/EditingControlBehavior::set_OwnerDataGrid(class [PresentationFramework]System.Windows.Controls.DataGrid)
			}
		}
		.class nested assembly sealed ExpressionTextBoxBehavior
			extends System.Activities.Presentation.View.DataGridHelper/EditingControlBehavior
		{
			.method public hidebysig specialname 
				instance void .ctor(class [PresentationFramework]System.Windows.Controls.DataGrid dataGrid)
			{
				ret
			}
			.method public virtual hidebysig 
				instance bool HandleControlLoaded(class [PresentationFramework]System.Windows.Controls.Control control, class [PresentationFramework]System.Windows.Controls.DataGridCell cell, bool newRowLoaded)
			{
				ret
			}
			.method public virtual hidebysig 
				instance bool ControlUnloaded(class [PresentationFramework]System.Windows.Controls.Control control, class [PresentationFramework]System.Windows.Controls.DataGridCell cell)
			{
				ret
			}
		}
		.class nested assembly sealed TextBoxBehavior
			extends System.Activities.Presentation.View.DataGridHelper/EditingControlBehavior
		{
			.method public hidebysig specialname 
				instance void .ctor(class [PresentationFramework]System.Windows.Controls.DataGrid dataGrid)
			{
				ret
			}
			.method public virtual hidebysig 
				instance bool HandleControlLoaded(class [PresentationFramework]System.Windows.Controls.Control control, class [PresentationFramework]System.Windows.Controls.DataGridCell cell, bool newRowLoaded)
			{
				ret
			}
			.method public virtual hidebysig 
				instance bool ControlUnloaded(class [PresentationFramework]System.Windows.Controls.Control control, class [PresentationFramework]System.Windows.Controls.DataGridCell cell)
			{
				ret
			}
		}
		.class nested assembly sealed TypePresenterBehavior
			extends System.Activities.Presentation.View.DataGridHelper/EditingControlBehavior
		{
			.method public hidebysig specialname 
				instance void .ctor(class [PresentationFramework]System.Windows.Controls.DataGrid dataGrid)
			{
				ret
			}
			.method public virtual hidebysig 
				instance bool HandleControlLoaded(class [PresentationFramework]System.Windows.Controls.Control control, class [PresentationFramework]System.Windows.Controls.DataGridCell cell, bool newRowLoaded)
			{
				ret
			}
			.method public virtual hidebysig 
				instance bool ControlUnloaded(class [PresentationFramework]System.Windows.Controls.Control control, class [PresentationFramework]System.Windows.Controls.DataGridCell cell)
			{
				ret
			}
		}
		.class nested assembly sealed VBIdentifierDesignerBehavior
			extends System.Activities.Presentation.View.DataGridHelper/EditingControlBehavior
		{
			.method public hidebysig specialname 
				instance void .ctor(class [PresentationFramework]System.Windows.Controls.DataGrid dataGrid)
			{
				ret
			}
			.method public virtual hidebysig 
				instance bool HandleControlLoaded(class [PresentationFramework]System.Windows.Controls.Control control, class [PresentationFramework]System.Windows.Controls.DataGridCell cell, bool newRowLoaded)
			{
				ret
			}
			.method public virtual hidebysig 
				instance bool ControlUnloaded(class [PresentationFramework]System.Windows.Controls.Control control, class [PresentationFramework]System.Windows.Controls.DataGridCell cell)
			{
				ret
			}
		}
		.method public hidebysig specialname 
			instance void add_DataGridCellEditEnding(class [mscorlib]'System.EventHandler`1'<class [PresentationFramework]System.Windows.Controls.DataGridCellEditEndingEventArgs> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void remove_DataGridCellEditEnding(class [mscorlib]'System.EventHandler`1'<class [PresentationFramework]System.Windows.Controls.DataGridCellEditEndingEventArgs> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [PresentationFramework]System.Windows.Controls.DataGrid 'instance', class [PresentationFramework]System.Windows.Controls.Control owner)
		{
			ret
		}
		.method public static hidebysig 
			bool GetIsCustomEditor(class [WindowsBase]System.Windows.DependencyObject obj)
		{
			ret
		}
		.method public static hidebysig 
			void SetIsCustomEditor(class [WindowsBase]System.Windows.DependencyObject obj, bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Func`3'<class [PresentationFramework]System.Windows.Controls.DataGrid,object,object> get_NotifyNewRowAddedCallback()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_NotifyNewRowAddedCallback(class [mscorlib]'System.Func`3'<class [PresentationFramework]System.Windows.Controls.DataGrid,object,object> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Action`3'<class [PresentationFramework]System.Windows.Controls.Control,class [PresentationFramework]System.Windows.Controls.DataGridCell,bool> get_NotifyBeginCellEditCallback()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_NotifyBeginCellEditCallback(class [mscorlib]'System.Action`3'<class [PresentationFramework]System.Windows.Controls.Control,class [PresentationFramework]System.Windows.Controls.DataGridCell,bool> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Action`2'<class [PresentationFramework]System.Windows.Controls.Control,class [PresentationFramework]System.Windows.Controls.DataGridCell> get_NotifyEndCellEditCallback()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_NotifyEndCellEditCallback(class [mscorlib]'System.Action`2'<class [PresentationFramework]System.Windows.Controls.Control,class [PresentationFramework]System.Windows.Controls.DataGridCell> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance bool get_ExplicitCommit()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance class [PresentationFramework]System.Windows.Controls.DataGrid get_DataGrid()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance bool get_IsEditInProgress()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class System.Activities.Presentation.EditingContext get_Context()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_Context(class System.Activities.Presentation.EditingContext 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Func`2'<class System.Activities.Presentation.View.ResolveTemplateParams,bool> get_ResolveDynamicTemplateCallback()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ResolveDynamicTemplateCallback(class [mscorlib]'System.Func`2'<class System.Activities.Presentation.View.ResolveTemplateParams,bool> 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Func`3'<class [PresentationFramework]System.Windows.Controls.DataGridCell,object,class System.Activities.Presentation.Model.ModelProperty> get_LoadDynamicContentDataCallback()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_LoadDynamicContentDataCallback(class [mscorlib]'System.Func`3'<class [PresentationFramework]System.Windows.Controls.DataGridCell,object,class System.Activities.Presentation.Model.ModelProperty> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Func`3'<class [PresentationFramework]System.Windows.Controls.DataGridCell,object,class System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor> get_LoadCustomPropertyValueEditorCallback()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_LoadCustomPropertyValueEditorCallback(class [mscorlib]'System.Func`3'<class [PresentationFramework]System.Windows.Controls.DataGridCell,object,class System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance object get_AddNewRowContent()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_AddNewRowContent(object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System]System.Windows.Input.ICommand get_AddNewRowCommand()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_AddNewRowCommand(class [System]System.Windows.Input.ICommand 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_ShowValidationErrorAsToolTip()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ShowValidationErrorAsToolTip(bool 'value')
		{
			ret
		}
		.method public hidebysig 
			instance !!0 SelectedItem<class 'T'>()
		{
			ret
		}
		.method public hidebysig 
			instance !!0 Source<class 'T'>()
		{
			ret
		}
		.method public hidebysig 
			instance void BeginRowEdit(object 'value', class [PresentationFramework]System.Windows.Controls.DataGridColumn column)
		{
			ret
		}
		.method public hidebysig 
			instance void BeginRowEdit(object 'value')
		{
			ret
		}
		.method assembly static hidebysig 
			void OnEditingControlLoaded(object sender, class [PresentationCore]System.Windows.RoutedEventArgs args)
		{
			ret
		}
		.method assembly static hidebysig 
			void OnEditingControlUnloaded(object sender, class [PresentationCore]System.Windows.RoutedEventArgs args)
		{
			ret
		}
		.method public hidebysig 
			instance void UpdateDynamicContentColumns(object entry)
		{
			ret
		}
		.method assembly static hidebysig 
			void DataGridCellGotFocus(class [PresentationFramework]System.Windows.Controls.DataGrid dataGrid, class [PresentationCore]System.Windows.RoutedEventArgs e)
		{
			ret
		}
		.method public static hidebysig specialname 
			class [PresentationFramework]System.Windows.DataTemplate get_DynamicCellContentTemplate()
		{
			ret
		}
		.method public static hidebysig 
			class [PresentationFramework]System.Windows.Controls.DataGridCell GetCell(class [PresentationFramework]System.Windows.Controls.DataGrid dataGrid, int32 row, int32 column)
		{
			ret
		}
		.method assembly static hidebysig 
			class System.Activities.Presentation.Model.ModelItem GetSingleSelectedObject(class [PresentationFramework]System.Windows.Controls.DataGrid dataGrid)
		{
			ret
		}
		.method public static hidebysig 
			class [PresentationFramework]System.Windows.Controls.DataGridRow GetRow(class [PresentationFramework]System.Windows.Controls.DataGrid dataGrid, int32 index)
		{
			ret
		}
		.method public static hidebysig 
			!!0 GetVisualChild<([PresentationCore]System.Windows.Media.Visual) 'T'>(class [WindowsBase]System.Windows.DependencyObject parent)
		{
			ret
		}
		.method public static hidebysig 
			void CommitPendingEdits(class [PresentationFramework]System.Windows.Controls.DataGrid dataGrid)
		{
			ret
		}
		.method public static hidebysig 
			void OnDeleteSelectedItems(class [PresentationFramework]System.Windows.Controls.DataGrid dataGrid)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void InitializeComponent()
		{
			ret
		}
		.method assembly hidebysig 
			instance class [mscorlib]System.Delegate _CreateDelegate(class [mscorlib]System.Type delegateType, string 'handler')
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Windows.Markup.IComponentConnector.Connect(int32 connectionId, object target)
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.override [System.Xaml]System.Windows.Markup.IComponentConnector::Connect
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Windows.Markup.IStyleConnector.Connect(int32 connectionId, object target)
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.override [PresentationFramework]System.Windows.Markup.IStyleConnector::Connect
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty AddNewRowCommandProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty AddNewRowContentProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty IsCustomEditorProperty
		.field static public initonly string PART_ButtonAdd
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ShowValidationErrorAsToolTipProperty
		.field assembly class System.Activities.Presentation.View.DataGridHelper dataGridHelperRoot
		.event class [mscorlib]'System.EventHandler`1'<class [PresentationFramework]System.Windows.Controls.DataGridCellEditEndingEventArgs> DataGridCellEditEnding
		{
			.addon instance void System.Activities.Presentation.View.DataGridHelper::add_DataGridCellEditEnding(class [mscorlib]'System.EventHandler`1'<class [PresentationFramework]System.Windows.Controls.DataGridCellEditEndingEventArgs>)
			.removeon instance void System.Activities.Presentation.View.DataGridHelper::remove_DataGridCellEditEnding(class [mscorlib]'System.EventHandler`1'<class [PresentationFramework]System.Windows.Controls.DataGridCellEditEndingEventArgs>)
		}
		.property instance class [System]System.Windows.Input.ICommand AddNewRowCommand()
		{
			.get instance class [System]System.Windows.Input.ICommand System.Activities.Presentation.View.DataGridHelper::get_AddNewRowCommand()
			.set instance void System.Activities.Presentation.View.DataGridHelper::set_AddNewRowCommand(class [System]System.Windows.Input.ICommand)
		}
		.property instance object AddNewRowContent()
		{
			.get instance object System.Activities.Presentation.View.DataGridHelper::get_AddNewRowContent()
			.set instance void System.Activities.Presentation.View.DataGridHelper::set_AddNewRowContent(object)
		}
		.property instance class System.Activities.Presentation.EditingContext Context()
		{
			.get instance class System.Activities.Presentation.EditingContext System.Activities.Presentation.View.DataGridHelper::get_Context()
			.set instance void System.Activities.Presentation.View.DataGridHelper::set_Context(class System.Activities.Presentation.EditingContext)
		}
		.property instance class [PresentationFramework]System.Windows.Controls.DataGrid DataGrid()
		{
			.get instance class [PresentationFramework]System.Windows.Controls.DataGrid System.Activities.Presentation.View.DataGridHelper::get_DataGrid()
		}
		.property class [PresentationFramework]System.Windows.DataTemplate DynamicCellContentTemplate()
		{
			.get class [PresentationFramework]System.Windows.DataTemplate System.Activities.Presentation.View.DataGridHelper::get_DynamicCellContentTemplate()
		}
		.property instance bool ExplicitCommit()
		{
			.get instance bool System.Activities.Presentation.View.DataGridHelper::get_ExplicitCommit()
		}
		.property instance bool IsEditInProgress()
		{
			.get instance bool System.Activities.Presentation.View.DataGridHelper::get_IsEditInProgress()
		}
		.property instance class [mscorlib]'System.Func`3'<class [PresentationFramework]System.Windows.Controls.DataGridCell,object,class System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor> LoadCustomPropertyValueEditorCallback()
		{
			.get instance class [mscorlib]'System.Func`3'<class [PresentationFramework]System.Windows.Controls.DataGridCell,object,class System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor> System.Activities.Presentation.View.DataGridHelper::get_LoadCustomPropertyValueEditorCallback()
			.set instance void System.Activities.Presentation.View.DataGridHelper::set_LoadCustomPropertyValueEditorCallback(class [mscorlib]'System.Func`3'<class [PresentationFramework]System.Windows.Controls.DataGridCell,object,class System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor>)
		}
		.property instance class [mscorlib]'System.Func`3'<class [PresentationFramework]System.Windows.Controls.DataGridCell,object,class System.Activities.Presentation.Model.ModelProperty> LoadDynamicContentDataCallback()
		{
			.get instance class [mscorlib]'System.Func`3'<class [PresentationFramework]System.Windows.Controls.DataGridCell,object,class System.Activities.Presentation.Model.ModelProperty> System.Activities.Presentation.View.DataGridHelper::get_LoadDynamicContentDataCallback()
			.set instance void System.Activities.Presentation.View.DataGridHelper::set_LoadDynamicContentDataCallback(class [mscorlib]'System.Func`3'<class [PresentationFramework]System.Windows.Controls.DataGridCell,object,class System.Activities.Presentation.Model.ModelProperty>)
		}
		.property instance class [mscorlib]'System.Action`3'<class [PresentationFramework]System.Windows.Controls.Control,class [PresentationFramework]System.Windows.Controls.DataGridCell,bool> NotifyBeginCellEditCallback()
		{
			.get instance class [mscorlib]'System.Action`3'<class [PresentationFramework]System.Windows.Controls.Control,class [PresentationFramework]System.Windows.Controls.DataGridCell,bool> System.Activities.Presentation.View.DataGridHelper::get_NotifyBeginCellEditCallback()
			.set instance void System.Activities.Presentation.View.DataGridHelper::set_NotifyBeginCellEditCallback(class [mscorlib]'System.Action`3'<class [PresentationFramework]System.Windows.Controls.Control,class [PresentationFramework]System.Windows.Controls.DataGridCell,bool>)
		}
		.property instance class [mscorlib]'System.Action`2'<class [PresentationFramework]System.Windows.Controls.Control,class [PresentationFramework]System.Windows.Controls.DataGridCell> NotifyEndCellEditCallback()
		{
			.get instance class [mscorlib]'System.Action`2'<class [PresentationFramework]System.Windows.Controls.Control,class [PresentationFramework]System.Windows.Controls.DataGridCell> System.Activities.Presentation.View.DataGridHelper::get_NotifyEndCellEditCallback()
			.set instance void System.Activities.Presentation.View.DataGridHelper::set_NotifyEndCellEditCallback(class [mscorlib]'System.Action`2'<class [PresentationFramework]System.Windows.Controls.Control,class [PresentationFramework]System.Windows.Controls.DataGridCell>)
		}
		.property instance class [mscorlib]'System.Func`3'<class [PresentationFramework]System.Windows.Controls.DataGrid,object,object> NotifyNewRowAddedCallback()
		{
			.get instance class [mscorlib]'System.Func`3'<class [PresentationFramework]System.Windows.Controls.DataGrid,object,object> System.Activities.Presentation.View.DataGridHelper::get_NotifyNewRowAddedCallback()
			.set instance void System.Activities.Presentation.View.DataGridHelper::set_NotifyNewRowAddedCallback(class [mscorlib]'System.Func`3'<class [PresentationFramework]System.Windows.Controls.DataGrid,object,object>)
		}
		.property instance class [mscorlib]'System.Func`2'<class System.Activities.Presentation.View.ResolveTemplateParams,bool> ResolveDynamicTemplateCallback()
		{
			.get instance class [mscorlib]'System.Func`2'<class System.Activities.Presentation.View.ResolveTemplateParams,bool> System.Activities.Presentation.View.DataGridHelper::get_ResolveDynamicTemplateCallback()
			.set instance void System.Activities.Presentation.View.DataGridHelper::set_ResolveDynamicTemplateCallback(class [mscorlib]'System.Func`2'<class System.Activities.Presentation.View.ResolveTemplateParams,bool>)
		}
		.property instance bool ShowValidationErrorAsToolTip()
		{
			.get instance bool System.Activities.Presentation.View.DataGridHelper::get_ShowValidationErrorAsToolTip()
			.set instance void System.Activities.Presentation.View.DataGridHelper::set_ShowValidationErrorAsToolTip(bool)
		}
	}
	.class private sealed DesignTimeArgument
		extends System.Activities.Presentation.DesignObjectWrapper
	{
		.class nested assembly sealed DefaultValueEditor
			extends System.Activities.Presentation.View.ExpressionValueEditor
		{
			.method public hidebysig specialname 
				instance void .ctor()
			{
				ret
			}
		}
		.class nested assembly sealed DirectionPropertyEditor
			extends System.Activities.Presentation.PropertyEditing.PropertyValueEditor
		{
			.method public hidebysig specialname 
				instance void .ctor()
			{
				ret
			}
		}
		.class nested assembly sealed InvalidXamlMemberValueEditor
			extends System.Activities.Presentation.PropertyEditing.PropertyValueEditor
		{
			.method public hidebysig specialname 
				instance void .ctor()
			{
				ret
			}
		}
		.class nested assembly sealed IsRequiredPropertyEditor
			extends System.Activities.Presentation.PropertyEditing.PropertyValueEditor
		{
			.method public hidebysig specialname 
				instance void .ctor()
			{
				ret
			}
		}
		.class nested assembly sealed ValueNotSupportedEditor
			extends System.Activities.Presentation.PropertyEditing.PropertyValueEditor
		{
			.method public hidebysig specialname 
				instance void .ctor()
			{
				ret
			}
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.Model.ModelItem argument, class System.Activities.Presentation.View.ArgumentDesigner editor)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Dispose()
		{
			ret
		}
		.method public static hidebysig 
			class System.Activities.Presentation.PropertyDescriptorData[] InitializeTypeProperties()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class System.Activities.Presentation.View.ArgumentDesigner get_Editor()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method family virtual hidebysig specialname 
			instance string get_AutomationId()
		{
			ret
		}
		.method assembly hidebysig 
			instance class System.Activities.Presentation.View.VBIdentifierName GetArgumentName()
		{
			ret
		}
		.method public virtual hidebysig 
			instance string ToString()
		{
			ret
		}
		.method assembly hidebysig 
			instance class [mscorlib]System.Type GetArgumentType()
		{
			ret
		}
		.method assembly hidebysig 
			instance valuetype System.Activities.Presentation.View.PropertyKind GetArgumentDirection()
		{
			ret
		}
		.method assembly hidebysig 
			instance object GetArgumentValue()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool Filter(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method assembly hidebysig 
			instance class System.Activities.Presentation.Model.ModelItem GetOwnerSchemaProperty()
		{
			ret
		}
		.method family virtual hidebysig 
			instance class [mscorlib]System.Type OnGetDynamicPropertyValueEditorType(string propertyName)
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ValidateArgumentName(object 'value', class [mscorlib]'System.Collections.Generic.List`1'<string> errors)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnReflectedObjectPropertyChanged(string propertyName)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnPropertyChanged(string propertyName)
		{
			ret
		}
		.field static assembly initonly string AnnotationTextProperty
		.field static assembly initonly string ArgumentDefaultValueProperty
		.field static assembly initonly string ArgumentDirectionProperty
		.field static assembly initonly string ArgumentNameProperty
		.field static assembly initonly string ArgumentTypeProperty
		.field static assembly initonly string IsOutputArgument
		.field static assembly initonly string IsRequiredProperty
		.field static assembly initonly string OwnerSchemaProperty
		.property instance string AutomationId()
		{
			.get instance string System.Activities.Presentation.View.DesignTimeArgument::get_AutomationId()
		}
		.property instance class System.Activities.Presentation.View.ArgumentDesigner Editor()
		{
			.get instance class System.Activities.Presentation.View.ArgumentDesigner System.Activities.Presentation.View.DesignTimeArgument::get_Editor()
		}
	}
	.class private sealed DesignTimeVariable
		extends System.Activities.Presentation.DesignObjectWrapper
	{
		.class nested assembly sealed ScopeValueEditor
			extends System.Activities.Presentation.PropertyEditing.PropertyValueEditor
		{
			.method public hidebysig specialname 
				instance void .ctor()
			{
				ret
			}
		}
		.method assembly hidebysig specialname 
			instance class System.Activities.Presentation.View.VariableDesigner get_Editor()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class System.Activities.Presentation.PropertyDescriptorData[] InitializeTypeProperties()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.Model.ModelItem modelItem, class System.Activities.Presentation.View.VariableDesigner editor)
		{
			ret
		}
		.method family virtual hidebysig specialname 
			instance string get_AutomationId()
		{
			ret
		}
		.method assembly hidebysig 
			instance class System.Activities.Presentation.View.VBIdentifierName GetVariableName()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnReflectedObjectPropertyChanged(string propertyName)
		{
			ret
		}
		.method public virtual hidebysig 
			instance string ToString()
		{
			ret
		}
		.method family virtual hidebysig 
			instance class [mscorlib]System.Type OnGetDynamicPropertyValueEditorType(string propertyName)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnPropertyChanged(string propertyName)
		{
			ret
		}
		.field static assembly initonly string AnnotationTextProperty
		.field static assembly initonly string ToolTipProperty
		.field static assembly initonly string VariableDefaultProperty
		.field static assembly initonly string VariableModifiersProperty
		.field static assembly initonly string VariableNameProperty
		.field static assembly initonly string VariableScopeLevelProperty
		.field static assembly initonly string VariableScopeProperty
		.field static assembly initonly string VariableTypeProperty
		.property instance string AutomationId()
		{
			.get instance string System.Activities.Presentation.View.DesignTimeVariable::get_AutomationId()
		}
		.property instance class System.Activities.Presentation.View.VariableDesigner Editor()
		{
			.get instance class System.Activities.Presentation.View.VariableDesigner System.Activities.Presentation.View.DesignTimeVariable::get_Editor()
		}
	}
	.class private sealed DesignTimeVariableToScopeConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public DesignerView
		extends [PresentationFramework]System.Windows.Controls.UserControl
		implements [System.Xaml]System.Windows.Markup.IComponentConnector, [PresentationFramework]System.Windows.Markup.IStyleConnector
	{
		.class nested assembly sealed BreadCrumbObjectSeparator
			extends [mscorlib]System.Object
		{
			.method public hidebysig specialname 
				instance class [mscorlib]System.Type get_ItemType()
			{
				ret
			}
			.method public hidebysig specialname 
				instance void .ctor()
			{
				ret
			}
			.property instance class [mscorlib]System.Type ItemType()
			{
				.get instance class [mscorlib]System.Type System.Activities.Presentation.View.DesignerView/BreadCrumbObjectSeparator::get_ItemType()
			}
		}
		.method assembly hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.EditingContext context)
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsMultipleSelectionMode()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method family virtual hidebysig 
			instance void OnInitialized(class [mscorlib]System.EventArgs e)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_ActivitySchema()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.EditingContext get_Context()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationCore]System.Windows.UIElement get_RootDesigner()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_RootDesigner(class [PresentationCore]System.Windows.UIElement 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_ShouldExpandAll()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ShouldExpandAll(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_ShouldCollapseAll()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ShouldCollapseAll(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsReadOnly()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsReadOnly(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.WorkflowViewElement get_FocusedViewElement()
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_ZoomFactor()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class [PresentationFramework]System.Windows.Controls.ScrollViewer get_ScrollViewer()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class [PresentationCore]System.Windows.UIElement get_ScrollableContent()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance bool get_SuppressSelectionOnMouseUp()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance bool get_ShouldIgnoreDataGridAutoCommit()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_ShouldIgnoreDataGridAutoCommit(bool 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance bool get_ShouldStillAllowRubberBandEvenIfMouseLeftButtonDownIsHandled()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_ShouldStillAllowRubberBandEvenIfMouseLeftButtonDownIsHandled(bool 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance bool get_InPanMode()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_InPanMode(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.Activities.Presentation.View.ShellBarItemVisibility get_WorkflowShellBarItemVisibility()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_WorkflowShellBarItemVisibility(valuetype System.Activities.Presentation.View.ShellBarItemVisibility 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.Activities.Presentation.View.ShellHeaderItemsVisibility get_WorkflowShellHeaderItemsVisibility()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_WorkflowShellHeaderItemsVisibility(valuetype System.Activities.Presentation.View.ShellHeaderItemsVisibility 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void MakeRootDesigner(class System.Activities.Presentation.Model.ModelItem modelItem)
		{
			ret
		}
		.method assembly hidebysig 
			instance void MakeRootDesigner(class System.Activities.Presentation.Model.ModelItem modelItem, bool setAsSelection)
		{
			ret
		}
		.method assembly hidebysig 
			instance void ForceMakeRootDesigner(class System.Activities.Presentation.Model.ModelItem modelItem)
		{
			ret
		}
		.method assembly hidebysig 
			instance void BeginDragShadowTracking(class System.Activities.Presentation.DragDropHelper/ViewElementDragShadow dragShadow)
		{
			ret
		}
		.method assembly hidebysig 
			instance void EndDragShadowTracking(class System.Activities.Presentation.DragDropHelper/ViewElementDragShadow dragShadow)
		{
			ret
		}
		.method assembly hidebysig 
			instance void MakeRootDesigner(class System.Activities.Presentation.Model.ModelItem modelItem, bool setAsSelection, bool checkIfCanBeMadeRoot)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnKeyDown(class [PresentationCore]System.Windows.Input.KeyEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnPreviewMouseWheel(class [PresentationCore]System.Windows.Input.MouseWheelEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnPreviewMouseLeftButtonDown(class [PresentationCore]System.Windows.Input.MouseButtonEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnPreviewDragOver(class [PresentationCore]System.Windows.DragEventArgs e)
		{
			ret
		}
		.method public hidebysig 
			instance void RegisterViewElement(class System.Activities.Presentation.WorkflowViewElement viewElement)
		{
			ret
		}
		.method public hidebysig 
			instance void UnregisterViewElement(class System.Activities.Presentation.WorkflowViewElement viewElement)
		{
			ret
		}
		.method public hidebysig 
			instance void OnReferenceUpdated(class [mscorlib]System.Reflection.AssemblyName updatedReference, bool isAdded)
		{
			ret
		}
		.method assembly hidebysig 
			instance void CheckButtonVariables()
		{
			ret
		}
		.method assembly hidebysig 
			instance void CheckButtonArguments()
		{
			ret
		}
		.method public hidebysig 
			instance void FlushState()
		{
			ret
		}
		.method assembly hidebysig 
			instance void RestoreDesignerStates()
		{
			ret
		}
		.method assembly static hidebysig 
			bool IsMouseInViewport(class [PresentationCore]System.Windows.Input.MouseButtonEventArgs e, class [PresentationFramework]System.Windows.Controls.ScrollViewer scrollViewer)
		{
			ret
		}
		.method assembly hidebysig 
			instance void ResetAllChordKeyGesturesMode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationFramework]System.Windows.Style get_MenuItemStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MenuItemStyle(class [PresentationFramework]System.Windows.Style 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationFramework]System.Windows.Style get_MenuSeparatorStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MenuSeparatorStyle(class [PresentationFramework]System.Windows.Style 'value')
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnContextMenuOpening(class [PresentationFramework]System.Windows.Controls.ContextMenuEventArgs e)
		{
			ret
		}
		.method public static hidebysig 
			class System.Activities.Presentation.View.CommandMenuMode GetCommandMenuMode(class [WindowsBase]System.Windows.DependencyObject obj)
		{
			ret
		}
		.method public static hidebysig 
			void SetCommandMenuMode(class [WindowsBase]System.Windows.DependencyObject obj, class System.Activities.Presentation.View.CommandMenuMode 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void InitializeComponent()
		{
			ret
		}
		.method assembly hidebysig 
			instance class [mscorlib]System.Delegate _CreateDelegate(class [mscorlib]System.Type delegateType, string 'handler')
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Windows.Markup.IComponentConnector.Connect(int32 connectionId, object target)
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.override [System.Xaml]System.Windows.Markup.IComponentConnector::Connect
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Windows.Markup.IStyleConnector.Connect(int32 connectionId, object target)
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.override [PresentationFramework]System.Windows.Markup.IStyleConnector::Connect
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ActivitySchemaProperty
		.field static public initonly class [System]System.Windows.Input.ICommand AddAnnotationCommand
		.field assembly class [PresentationFramework]System.Windows.Controls.MenuItem Annotations
		.field assembly class [PresentationFramework]System.Windows.Controls.Grid BreadCrumbBarLayout
		.field assembly class [PresentationFramework]System.Windows.Controls.MenuItem BreakpointMenu
		.field static public initonly class [System]System.Windows.Input.ICommand CollapseAllCommand
		.field static public initonly class [System]System.Windows.Input.ICommand CollapseCommand
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty CommandMenuModeProperty
		.field static public initonly class [System]System.Windows.Input.ICommand CommitCommand
		.field static public initonly class [System]System.Windows.Input.ICommand CopyAsImageCommand
		.field static public initonly class [System]System.Windows.Input.ICommand CopyCommand
		.field static public initonly class [System]System.Windows.Input.ICommand CreateArgumentCommand
		.field static public initonly class [System]System.Windows.Input.ICommand CreateVariableCommand
		.field static public initonly class [System]System.Windows.Input.ICommand CreateWorkflowElementCommand
		.field static public literal string CustomMenuItemsSeparatorCommand = "6F455692-EA19-4ac9-ABEE-57F6DF20A687"
		.field static public initonly class [System]System.Windows.Input.ICommand CutCommand
		.field static public initonly class [System]System.Windows.Input.ICommand CycleThroughDesignerCommand
		.field static public initonly class [System]System.Windows.Input.ICommand DeleteAllAnnotationCommand
		.field static public initonly class [System]System.Windows.Input.ICommand DeleteAnnotationCommand
		.field static public initonly class [System]System.Windows.Input.ICommand DeleteBreakpointCommand
		.field static public initonly class [System]System.Windows.Input.ICommand DisableBreakpointCommand
		.field static public initonly class [System]System.Windows.Input.ICommand EditAnnotationCommand
		.field static public initonly class [System]System.Windows.Input.ICommand EnableBreakpointCommand
		.field static public initonly class [System]System.Windows.Input.ICommand ExpandAllCommand
		.field static public initonly class [System]System.Windows.Input.ICommand ExpandCommand
		.field static public initonly class [System]System.Windows.Input.ICommand ExpandInPlaceCommand
		.field static public initonly class [System]System.Windows.Input.ICommand FitToScreenCommand
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty FocusedViewElementProperty
		.field static public initonly class [System]System.Windows.Input.ICommand GoToParentCommand
		.field static public initonly class [System]System.Windows.Input.ICommand HideAllAnnotationCommand
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty InPanModeProperty
		.field static public initonly class [System]System.Windows.Input.ICommand InsertBreakpointCommand
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty IsReadOnlyProperty
		.field assembly class [PresentationFramework]System.Windows.Shapes.Path Line
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty MenuItemStyleProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty MenuSeparatorStyleProperty
		.field static public initonly class [System]System.Windows.Input.ICommand MoveFocusCommand
		.field static public initonly class [System]System.Windows.Input.ICommand PasteCommand
		.field static public initonly class [System]System.Windows.Input.ICommand RedoCommand
		.field static public initonly class [System]System.Windows.Input.ICommand ResetZoomCommand
		.field static public initonly class [System]System.Windows.Input.ICommand RestoreCommand
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty RootDesignerProperty
		.field static public initonly class [System]System.Windows.Input.ICommand SaveAsImageCommand
		.field static public initonly class [System]System.Windows.Input.ICommand SelectAllCommand
		.field static assembly class [WindowsBase]System.Windows.DependencyProperty ShouldCollapseAllProperty
		.field static assembly class [WindowsBase]System.Windows.DependencyProperty ShouldExpandAllProperty
		.field static public initonly class [System]System.Windows.Input.ICommand ShowAllAnnotationCommand
		.field static public initonly class [System]System.Windows.Input.ICommand ToggleArgumentDesignerCommand
		.field static public initonly class [System]System.Windows.Input.ICommand ToggleImportsDesignerCommand
		.field static public initonly class [System]System.Windows.Input.ICommand ToggleMiniMapCommand
		.field static public initonly class [System]System.Windows.Input.ICommand ToggleSelectionCommand
		.field static public initonly class [System]System.Windows.Input.ICommand ToggleVariableDesignerCommand
		.field static public initonly class [System]System.Windows.Input.ICommand UndoCommand
		.field static public initonly class [System]System.Windows.Input.ICommand ZoomInCommand
		.field static public initonly class [System]System.Windows.Input.ICommand ZoomOutCommand
		.field assembly class System.Activities.Presentation.View.ArgumentDesigner arguments1
		.field assembly class [PresentationFramework]System.Windows.Controls.Primitives.StatusBarItem argumentsStatusBarItem
		.field assembly class [PresentationFramework]System.Windows.Controls.Grid bottomPanel
		.field assembly class [PresentationFramework]System.Windows.Controls.ListBox breadCrumbListBox
		.field assembly class [PresentationFramework]System.Windows.Controls.Primitives.ToggleButton buttonArguments1
		.field assembly class [PresentationFramework]System.Windows.Controls.Button buttonFitToScreen
		.field assembly class [PresentationFramework]System.Windows.Controls.Primitives.ToggleButton buttonImports1
		.field assembly class [PresentationFramework]System.Windows.Controls.Primitives.ToggleButton buttonMinimap
		.field assembly class [PresentationFramework]System.Windows.Controls.Primitives.ToggleButton buttonPanMode
		.field assembly class [PresentationFramework]System.Windows.Controls.Button buttonResetZoom
		.field assembly class [PresentationFramework]System.Windows.Controls.Primitives.ToggleButton buttonVariables1
		.field assembly class [PresentationFramework]System.Windows.Controls.Primitives.ToggleButton collapseAllButton
		.field assembly class [PresentationFramework]System.Windows.Controls.MenuItem collapseMenuItem
		.field assembly class [PresentationFramework]System.Windows.Controls.MenuItem copyMenuItem
		.field assembly class System.Activities.Presentation.View.ExtensionSurface designerExtensionSurface
		.field assembly class [PresentationFramework]System.Windows.Controls.ContentPresenter designerPresenter
		.field assembly class [PresentationFramework]System.Windows.Controls.Grid designerViewGrid
		.field assembly class [PresentationFramework]System.Windows.Controls.Primitives.ToggleButton expandAllButton
		.field assembly class [PresentationFramework]System.Windows.Controls.MenuItem expandInPlaceMenuItem
		.field assembly class [PresentationFramework]System.Windows.Controls.MenuItem expandMenuItem
		.field assembly class [PresentationFramework]System.Windows.Controls.MenuItem goToParentMenuItem
		.field assembly class System.Activities.Presentation.View.ImportDesigner imports1
		.field assembly class [PresentationFramework]System.Windows.Controls.Primitives.StatusBarItem importsStatusBarItem
		.field assembly class System.Activities.Presentation.WorkflowViewElement lastClickedDesigner
		.field assembly class System.Activities.Presentation.View.ExtensionWindow miniMap
		.field assembly class [PresentationFramework]System.Windows.FrameworkElement minimapPlacementTarget
		.field assembly class [PresentationFramework]System.Windows.Controls.Primitives.StatusBarItem minimapStatusBar
		.field assembly class [PresentationFramework]System.Windows.Controls.Primitives.StatusBarItem panModeStatusBarItem
		.field assembly class [PresentationFramework]System.Windows.Controls.ScrollViewer scrollViewer
		.field assembly class [PresentationFramework]System.Windows.Controls.Grid scrollViewerContent
		.field assembly class [PresentationFramework]System.Windows.Controls.Grid scrollableContent
		.field assembly class [PresentationFramework]System.Windows.Controls.Primitives.StatusBar shellBar
		.field assembly class [PresentationFramework]System.Windows.Controls.GridSplitter splitter
		.field assembly class System.Activities.Presentation.View.VariableDesigner variables1
		.field assembly class [PresentationFramework]System.Windows.Controls.Primitives.StatusBarItem variablesStatusBarItem
		.field assembly class [PresentationFramework]System.Windows.Controls.Viewbox viewBox
		.field assembly class System.Activities.Presentation.View.ExtensionSurface wfViewExtensionSurface
		.field assembly class System.Activities.Presentation.View.DesignerView xnDesignerView
		.field assembly class [PresentationFramework]System.Windows.Controls.Primitives.StatusBarItem zoomFitToScreenStatusBar
		.field assembly class [PresentationFramework]System.Windows.Controls.Primitives.StatusBarItem zoomIconStatusBar
		.field assembly class [PresentationFramework]System.Windows.Controls.ComboBox zoomPicker
		.field assembly class [PresentationFramework]System.Windows.Controls.Primitives.StatusBarItem zoomPickerStatusBar
		.field assembly class [PresentationFramework]System.Windows.Controls.Slider zoomSlider
		.field assembly class [PresentationFramework]System.Windows.Controls.Primitives.StatusBarItem zoomSliderStatusBar
		.property instance class System.Activities.Presentation.Model.ModelItem ActivitySchema()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.View.DesignerView::get_ActivitySchema()
		}
		.property instance class System.Activities.Presentation.EditingContext Context()
		{
			.get instance class System.Activities.Presentation.EditingContext System.Activities.Presentation.View.DesignerView::get_Context()
		}
		.property instance class System.Activities.Presentation.WorkflowViewElement FocusedViewElement()
		{
			.get instance class System.Activities.Presentation.WorkflowViewElement System.Activities.Presentation.View.DesignerView::get_FocusedViewElement()
		}
		.property instance bool InPanMode()
		{
			.get instance bool System.Activities.Presentation.View.DesignerView::get_InPanMode()
			.set instance void System.Activities.Presentation.View.DesignerView::set_InPanMode(bool)
		}
		.property instance bool IsMultipleSelectionMode()
		{
			.get instance bool System.Activities.Presentation.View.DesignerView::get_IsMultipleSelectionMode()
		}
		.property instance bool IsReadOnly()
		{
			.get instance bool System.Activities.Presentation.View.DesignerView::get_IsReadOnly()
			.set instance void System.Activities.Presentation.View.DesignerView::set_IsReadOnly(bool)
		}
		.property instance class [PresentationFramework]System.Windows.Style MenuItemStyle()
		{
			.get instance class [PresentationFramework]System.Windows.Style System.Activities.Presentation.View.DesignerView::get_MenuItemStyle()
			.set instance void System.Activities.Presentation.View.DesignerView::set_MenuItemStyle(class [PresentationFramework]System.Windows.Style)
		}
		.property instance class [PresentationFramework]System.Windows.Style MenuSeparatorStyle()
		{
			.get instance class [PresentationFramework]System.Windows.Style System.Activities.Presentation.View.DesignerView::get_MenuSeparatorStyle()
			.set instance void System.Activities.Presentation.View.DesignerView::set_MenuSeparatorStyle(class [PresentationFramework]System.Windows.Style)
		}
		.property instance class [PresentationCore]System.Windows.UIElement RootDesigner()
		{
			.get instance class [PresentationCore]System.Windows.UIElement System.Activities.Presentation.View.DesignerView::get_RootDesigner()
			.set instance void System.Activities.Presentation.View.DesignerView::set_RootDesigner(class [PresentationCore]System.Windows.UIElement)
		}
		.property instance class [PresentationFramework]System.Windows.Controls.ScrollViewer ScrollViewer()
		{
			.get instance class [PresentationFramework]System.Windows.Controls.ScrollViewer System.Activities.Presentation.View.DesignerView::get_ScrollViewer()
		}
		.property instance class [PresentationCore]System.Windows.UIElement ScrollableContent()
		{
			.get instance class [PresentationCore]System.Windows.UIElement System.Activities.Presentation.View.DesignerView::get_ScrollableContent()
		}
		.property instance bool ShouldCollapseAll()
		{
			.get instance bool System.Activities.Presentation.View.DesignerView::get_ShouldCollapseAll()
			.set instance void System.Activities.Presentation.View.DesignerView::set_ShouldCollapseAll(bool)
		}
		.property instance bool ShouldExpandAll()
		{
			.get instance bool System.Activities.Presentation.View.DesignerView::get_ShouldExpandAll()
			.set instance void System.Activities.Presentation.View.DesignerView::set_ShouldExpandAll(bool)
		}
		.property instance bool ShouldIgnoreDataGridAutoCommit()
		{
			.get instance bool System.Activities.Presentation.View.DesignerView::get_ShouldIgnoreDataGridAutoCommit()
			.set instance void System.Activities.Presentation.View.DesignerView::set_ShouldIgnoreDataGridAutoCommit(bool)
		}
		.property instance bool ShouldStillAllowRubberBandEvenIfMouseLeftButtonDownIsHandled()
		{
			.get instance bool System.Activities.Presentation.View.DesignerView::get_ShouldStillAllowRubberBandEvenIfMouseLeftButtonDownIsHandled()
			.set instance void System.Activities.Presentation.View.DesignerView::set_ShouldStillAllowRubberBandEvenIfMouseLeftButtonDownIsHandled(bool)
		}
		.property instance bool SuppressSelectionOnMouseUp()
		{
			.get instance bool System.Activities.Presentation.View.DesignerView::get_SuppressSelectionOnMouseUp()
		}
		.property instance valuetype System.Activities.Presentation.View.ShellBarItemVisibility WorkflowShellBarItemVisibility()
		{
			.get instance valuetype System.Activities.Presentation.View.ShellBarItemVisibility System.Activities.Presentation.View.DesignerView::get_WorkflowShellBarItemVisibility()
			.set instance void System.Activities.Presentation.View.DesignerView::set_WorkflowShellBarItemVisibility(valuetype System.Activities.Presentation.View.ShellBarItemVisibility)
		}
		.property instance valuetype System.Activities.Presentation.View.ShellHeaderItemsVisibility WorkflowShellHeaderItemsVisibility()
		{
			.get instance valuetype System.Activities.Presentation.View.ShellHeaderItemsVisibility System.Activities.Presentation.View.DesignerView::get_WorkflowShellHeaderItemsVisibility()
			.set instance void System.Activities.Presentation.View.DesignerView::set_WorkflowShellHeaderItemsVisibility(valuetype System.Activities.Presentation.View.ShellHeaderItemsVisibility)
		}
		.property instance float64 ZoomFactor()
		{
			.get instance float64 System.Activities.Presentation.View.DesignerView::get_ZoomFactor()
		}
	}
	.class private DesignerWithHeader
		extends System.Activities.Presentation.WorkflowViewElement
	{
		.method public hidebysig specialname 
			instance class [PresentationFramework]System.Windows.DataTemplate get_Header()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Header(class [PresentationFramework]System.Windows.DataTemplate 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty HeaderProperty
		.property instance class [PresentationFramework]System.Windows.DataTemplate Header()
		{
			.get instance class [PresentationFramework]System.Windows.DataTemplate System.Activities.Presentation.View.DesignerWithHeader::get_Header()
			.set instance void System.Activities.Presentation.View.DesignerWithHeader::set_Header(class [PresentationFramework]System.Windows.DataTemplate)
		}
	}
	.class public sealed EditingState
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Activities.Presentation.View.EditingState Editing = int32(0x00000000)
		.field static public literal valuetype System.Activities.Presentation.View.EditingState Idle = int32(0x00000002)
		.field static public literal valuetype System.Activities.Presentation.View.EditingState Validating = int32(0x00000001)
	}
	.class private EditorResources
		extends [mscorlib]System.Object
	{
		.method assembly static hidebysig 
			class [PresentationFramework]System.Windows.ResourceDictionary GetResources()
		{
			ret
		}
		.method assembly static hidebysig 
			class [PresentationFramework]System.Windows.ResourceDictionary GetIcons()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private ErrorItem
		extends System.Activities.Presentation.ContextItem
	{
		.method public hidebysig specialname 
			instance string get_Message()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_Message(string 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_Details()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_Details(string 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]System.Type get_ItemType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance string Details()
		{
			.get instance string System.Activities.Presentation.View.ErrorItem::get_Details()
			.set instance void System.Activities.Presentation.View.ErrorItem::set_Details(string)
		}
		.property instance class [mscorlib]System.Type ItemType()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.View.ErrorItem::get_ItemType()
		}
		.property instance string Message()
		{
			.get instance string System.Activities.Presentation.View.ErrorItem::get_Message()
			.set instance void System.Activities.Presentation.View.ErrorItem::set_Message(string)
		}
	}
	.class private sealed ErrorToTooltipConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IMultiValueConverter
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.View.DataGridHelper owner)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object Convert(object[] values, class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object[] ConvertBack(object 'value', class [mscorlib]System.Type[] targetTypes, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
	}
	.class private sealed ErrorView
		extends [PresentationFramework]System.Windows.Controls.UserControl
		implements [System.Xaml]System.Windows.Markup.IComponentConnector
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Message()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Message(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Details()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Details(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.EditingContext get_Context()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_Context(class System.Activities.Presentation.EditingContext 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void InitializeComponent()
		{
			ret
		}
		.method assembly hidebysig 
			instance class [mscorlib]System.Delegate _CreateDelegate(class [mscorlib]System.Type delegateType, string 'handler')
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Windows.Markup.IComponentConnector.Connect(int32 connectionId, object target)
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.override [System.Xaml]System.Windows.Markup.IComponentConnector::Connect
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty DetailsProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty MessageProperty
		.property instance class System.Activities.Presentation.EditingContext Context()
		{
			.get instance class System.Activities.Presentation.EditingContext System.Activities.Presentation.View.ErrorView::get_Context()
			.set instance void System.Activities.Presentation.View.ErrorView::set_Context(class System.Activities.Presentation.EditingContext)
		}
		.property instance string Details()
		{
			.get instance string System.Activities.Presentation.View.ErrorView::get_Details()
			.set instance void System.Activities.Presentation.View.ErrorView::set_Details(string)
		}
		.property instance string Message()
		{
			.get instance string System.Activities.Presentation.View.ErrorView::get_Message()
			.set instance void System.Activities.Presentation.View.ErrorView::set_Message(string)
		}
	}
	.class private sealed ExpandAllCollapseAllToggleConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IMultiValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object[] values, class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object[] ConvertBack(object 'value', class [mscorlib]System.Type[] targetTypes, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed ExpressionTextBox
		extends [PresentationFramework]System.Windows.Controls.UserControl
		implements [System.Xaml]System.Windows.Markup.IComponentConnector
	{
		.method public hidebysig specialname 
			instance string get_HintText()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_HintText(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_Expression()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Expression(class System.Activities.Presentation.Model.ModelItem 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Type get_ExpressionType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ExpressionType(class [mscorlib]System.Type 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_UseLocationExpression()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_UseLocationExpression(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_OwnerActivity()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_OwnerActivity(class System.Activities.Presentation.Model.ModelItem 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_PathToArgument()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_PathToArgument(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsSupportedExpression()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsSupportedExpression(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_DefaultValue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_DefaultValue(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_AcceptsReturn()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_AcceptsReturn(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_AcceptsTab()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_AcceptsTab(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsReadOnly()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsReadOnly(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [PresentationFramework]System.Windows.Controls.ScrollBarVisibility get_VerticalScrollBarVisibility()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_VerticalScrollBarVisibility(valuetype [PresentationFramework]System.Windows.Controls.ScrollBarVisibility 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [PresentationFramework]System.Windows.Controls.ScrollBarVisibility get_HorizontalScrollBarVisibility()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_HorizontalScrollBarVisibility(valuetype [PresentationFramework]System.Windows.Controls.ScrollBarVisibility 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_MaxLines()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MaxLines(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_MinLines()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MinLines(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_ExplicitCommit()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ExplicitCommit(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.View.IExpressionEditorService get_ExpressionEditorService()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_EditorLostLogicalFocus(class [PresentationCore]System.Windows.RoutedEventHandler 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_EditorLostLogicalFocus(class [PresentationCore]System.Windows.RoutedEventHandler 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance bool get_IsIndependentExpression()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_IsIndependentExpression(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ExpressionActivityEditor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ExpressionActivityEditor(string 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance string get_InternalHintText()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_InternalHintText(string 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance bool get_IsInlinePropertyEditor()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_IsInlinePropertyEditor(bool 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class System.Activities.Presentation.Expressions.ExpressionActivityEditor get_Editor()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance string get_CurrentEditorName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnInitialized(class [mscorlib]System.EventArgs e)
		{
			ret
		}
		.method public static hidebysig 
			void RegisterExpressionActivityEditor(string name, class [mscorlib]System.Type expressionActivityEditorType, class System.Activities.Presentation.Expressions.CreateExpressionFromStringCallback convertFromString)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnPropertyChanged(valuetype [WindowsBase]System.Windows.DependencyPropertyChangedEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance class [PresentationCore]System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer()
		{
			ret
		}
		.method public hidebysig 
			instance void BeginEdit()
		{
			ret
		}
		.method assembly hidebysig 
			instance void OnCompleteWordCommandCanExecute(object sender, class [PresentationCore]System.Windows.Input.CanExecuteRoutedEventArgs e)
		{
			ret
		}
		.method assembly hidebysig 
			instance void OnCompleteWordCommandExecute(object sender, class [PresentationCore]System.Windows.Input.ExecutedRoutedEventArgs e)
		{
			ret
		}
		.method assembly hidebysig 
			instance void OnGlobalIntellisenseCommandCanExecute(object sender, class [PresentationCore]System.Windows.Input.CanExecuteRoutedEventArgs e)
		{
			ret
		}
		.method assembly hidebysig 
			instance void OnGlobalIntellisenseCommandExecute(object sender, class [PresentationCore]System.Windows.Input.ExecutedRoutedEventArgs e)
		{
			ret
		}
		.method assembly hidebysig 
			instance void OnParameterInfoCommandCanExecute(object sender, class [PresentationCore]System.Windows.Input.CanExecuteRoutedEventArgs e)
		{
			ret
		}
		.method assembly hidebysig 
			instance void OnParameterInfoCommandExecute(object sender, class [PresentationCore]System.Windows.Input.ExecutedRoutedEventArgs e)
		{
			ret
		}
		.method assembly hidebysig 
			instance void OnQuickInfoCommandCanExecute(object sender, class [PresentationCore]System.Windows.Input.CanExecuteRoutedEventArgs e)
		{
			ret
		}
		.method assembly hidebysig 
			instance void OnQuickInfoCommandExecute(object sender, class [PresentationCore]System.Windows.Input.ExecutedRoutedEventArgs e)
		{
			ret
		}
		.method assembly hidebysig 
			instance void OnIncreaseFilterLevelCommandCanExecute(object sender, class [PresentationCore]System.Windows.Input.CanExecuteRoutedEventArgs e)
		{
			ret
		}
		.method assembly hidebysig 
			instance void OnIncreaseFilterLevelCommandExecute(object sender, class [PresentationCore]System.Windows.Input.ExecutedRoutedEventArgs e)
		{
			ret
		}
		.method assembly hidebysig 
			instance void OnDecreaseFilterLevelCommandCanExecute(object sender, class [PresentationCore]System.Windows.Input.CanExecuteRoutedEventArgs e)
		{
			ret
		}
		.method assembly hidebysig 
			instance void OnDecreaseFilterLevelCommandExecute(object sender, class [PresentationCore]System.Windows.Input.ExecutedRoutedEventArgs e)
		{
			ret
		}
		.method assembly hidebysig 
			instance void InitializeHintText(string defaultEditorHintText)
		{
			ret
		}
		.method assembly static hidebysig 
			bool TryConvertFromString(string targetEditor, string expressionText, bool isLocationExpression, class [mscorlib]System.Type resultType, [out] class [System.Activities]System.Activities.ActivityWithResult& expression)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void InitializeComponent()
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Windows.Markup.IComponentConnector.Connect(int32 connectionId, object target)
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.override [System.Xaml]System.Windows.Markup.IComponentConnector::Connect
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty AcceptsReturnProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty AcceptsTabProperty
		.field static public initonly class [System]System.Windows.Input.ICommand CompleteWordCommand
		.field static public initonly class [System]System.Windows.Input.ICommand DecreaseFilterLevelCommand
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty DefaultValueProperty
		.field static public initonly class [PresentationCore]System.Windows.RoutedEvent EditorLostLogicalFocusEvent
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ExplicitCommitProperty
		.field static public literal string ExpressionActivityEditorOptionName = "ExpressionActivityEditorName"
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ExpressionActivityEditorProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ExpressionProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ExpressionTypeProperty
		.field static public initonly class [System]System.Windows.Input.ICommand GlobalIntellisenseCommand
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty HintTextProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty HorizontalScrollBarVisibilityProperty
		.field static public initonly class [System]System.Windows.Input.ICommand IncreaseFilterLevelCommand
		.field static assembly initonly class [WindowsBase]System.Windows.DependencyProperty InternalHintTextProperty
		.field static assembly initonly class [WindowsBase]System.Windows.DependencyProperty IsIndependentExpressionProperty
		.field static assembly initonly class [WindowsBase]System.Windows.DependencyProperty IsInlinePropertyEditorProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty IsReadOnlyProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty IsSupportedExpressionProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty MaxLinesProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty MinLinesProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty OwnerActivityProperty
		.field static public initonly class [System]System.Windows.Input.ICommand ParameterInfoCommand
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty PathToArgumentProperty
		.field static public initonly class [System]System.Windows.Input.ICommand QuickInfoCommand
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty UseLocationExpressionProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty VerticalScrollBarVisibilityProperty
		.event [PresentationCore]System.Windows.RoutedEventHandler EditorLostLogicalFocus
		{
			.addon instance void System.Activities.Presentation.View.ExpressionTextBox::add_EditorLostLogicalFocus(class [PresentationCore]System.Windows.RoutedEventHandler)
			.removeon instance void System.Activities.Presentation.View.ExpressionTextBox::remove_EditorLostLogicalFocus(class [PresentationCore]System.Windows.RoutedEventHandler)
		}
		.property instance bool AcceptsReturn()
		{
			.get instance bool System.Activities.Presentation.View.ExpressionTextBox::get_AcceptsReturn()
			.set instance void System.Activities.Presentation.View.ExpressionTextBox::set_AcceptsReturn(bool)
		}
		.property instance bool AcceptsTab()
		{
			.get instance bool System.Activities.Presentation.View.ExpressionTextBox::get_AcceptsTab()
			.set instance void System.Activities.Presentation.View.ExpressionTextBox::set_AcceptsTab(bool)
		}
		.property instance string CurrentEditorName()
		{
			.get instance string System.Activities.Presentation.View.ExpressionTextBox::get_CurrentEditorName()
		}
		.property instance string DefaultValue()
		{
			.get instance string System.Activities.Presentation.View.ExpressionTextBox::get_DefaultValue()
			.set instance void System.Activities.Presentation.View.ExpressionTextBox::set_DefaultValue(string)
		}
		.property instance class System.Activities.Presentation.Expressions.ExpressionActivityEditor Editor()
		{
			.get instance class System.Activities.Presentation.Expressions.ExpressionActivityEditor System.Activities.Presentation.View.ExpressionTextBox::get_Editor()
		}
		.property instance bool ExplicitCommit()
		{
			.get instance bool System.Activities.Presentation.View.ExpressionTextBox::get_ExplicitCommit()
			.set instance void System.Activities.Presentation.View.ExpressionTextBox::set_ExplicitCommit(bool)
		}
		.property instance class System.Activities.Presentation.Model.ModelItem Expression()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.View.ExpressionTextBox::get_Expression()
			.set instance void System.Activities.Presentation.View.ExpressionTextBox::set_Expression(class System.Activities.Presentation.Model.ModelItem)
		}
		.property instance string ExpressionActivityEditor()
		{
			.get instance string System.Activities.Presentation.View.ExpressionTextBox::get_ExpressionActivityEditor()
			.set instance void System.Activities.Presentation.View.ExpressionTextBox::set_ExpressionActivityEditor(string)
		}
		.property instance class System.Activities.Presentation.View.IExpressionEditorService ExpressionEditorService()
		{
			.get instance class System.Activities.Presentation.View.IExpressionEditorService System.Activities.Presentation.View.ExpressionTextBox::get_ExpressionEditorService()
		}
		.property instance class [mscorlib]System.Type ExpressionType()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.View.ExpressionTextBox::get_ExpressionType()
			.set instance void System.Activities.Presentation.View.ExpressionTextBox::set_ExpressionType(class [mscorlib]System.Type)
		}
		.property instance string HintText()
		{
			.get instance string System.Activities.Presentation.View.ExpressionTextBox::get_HintText()
			.set instance void System.Activities.Presentation.View.ExpressionTextBox::set_HintText(string)
		}
		.property instance valuetype [PresentationFramework]System.Windows.Controls.ScrollBarVisibility HorizontalScrollBarVisibility()
		{
			.get instance valuetype [PresentationFramework]System.Windows.Controls.ScrollBarVisibility System.Activities.Presentation.View.ExpressionTextBox::get_HorizontalScrollBarVisibility()
			.set instance void System.Activities.Presentation.View.ExpressionTextBox::set_HorizontalScrollBarVisibility(valuetype [PresentationFramework]System.Windows.Controls.ScrollBarVisibility)
		}
		.property instance string InternalHintText()
		{
			.get instance string System.Activities.Presentation.View.ExpressionTextBox::get_InternalHintText()
			.set instance void System.Activities.Presentation.View.ExpressionTextBox::set_InternalHintText(string)
		}
		.property instance bool IsIndependentExpression()
		{
			.get instance bool System.Activities.Presentation.View.ExpressionTextBox::get_IsIndependentExpression()
			.set instance void System.Activities.Presentation.View.ExpressionTextBox::set_IsIndependentExpression(bool)
		}
		.property instance bool IsInlinePropertyEditor()
		{
			.get instance bool System.Activities.Presentation.View.ExpressionTextBox::get_IsInlinePropertyEditor()
			.set instance void System.Activities.Presentation.View.ExpressionTextBox::set_IsInlinePropertyEditor(bool)
		}
		.property instance bool IsReadOnly()
		{
			.get instance bool System.Activities.Presentation.View.ExpressionTextBox::get_IsReadOnly()
			.set instance void System.Activities.Presentation.View.ExpressionTextBox::set_IsReadOnly(bool)
		}
		.property instance bool IsSupportedExpression()
		{
			.get instance bool System.Activities.Presentation.View.ExpressionTextBox::get_IsSupportedExpression()
			.set instance void System.Activities.Presentation.View.ExpressionTextBox::set_IsSupportedExpression(bool)
		}
		.property instance int32 MaxLines()
		{
			.get instance int32 System.Activities.Presentation.View.ExpressionTextBox::get_MaxLines()
			.set instance void System.Activities.Presentation.View.ExpressionTextBox::set_MaxLines(int32)
		}
		.property instance int32 MinLines()
		{
			.get instance int32 System.Activities.Presentation.View.ExpressionTextBox::get_MinLines()
			.set instance void System.Activities.Presentation.View.ExpressionTextBox::set_MinLines(int32)
		}
		.property instance class System.Activities.Presentation.Model.ModelItem OwnerActivity()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.View.ExpressionTextBox::get_OwnerActivity()
			.set instance void System.Activities.Presentation.View.ExpressionTextBox::set_OwnerActivity(class System.Activities.Presentation.Model.ModelItem)
		}
		.property instance string PathToArgument()
		{
			.get instance string System.Activities.Presentation.View.ExpressionTextBox::get_PathToArgument()
			.set instance void System.Activities.Presentation.View.ExpressionTextBox::set_PathToArgument(string)
		}
		.property instance bool UseLocationExpression()
		{
			.get instance bool System.Activities.Presentation.View.ExpressionTextBox::get_UseLocationExpression()
			.set instance void System.Activities.Presentation.View.ExpressionTextBox::set_UseLocationExpression(bool)
		}
		.property instance valuetype [PresentationFramework]System.Windows.Controls.ScrollBarVisibility VerticalScrollBarVisibility()
		{
			.get instance valuetype [PresentationFramework]System.Windows.Controls.ScrollBarVisibility System.Activities.Presentation.View.ExpressionTextBox::get_VerticalScrollBarVisibility()
			.set instance void System.Activities.Presentation.View.ExpressionTextBox::set_VerticalScrollBarVisibility(valuetype [PresentationFramework]System.Windows.Controls.ScrollBarVisibility)
		}
	}
	.class private ExpressionTextBoxAutomationPeer
		extends [PresentationCore]System.Windows.Automation.Peers.UIElementAutomationPeer
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.View.ExpressionTextBox owner)
		{
			ret
		}
		.method family virtual hidebysig 
			instance string GetItemStatusCore()
		{
			ret
		}
	}
	.class private ExpressionTextBoxViewModel
		extends [mscorlib]System.Object
	{
		.method assembly static hidebysig 
			void RegisterExpressionActivityService(string name, class [mscorlib]System.Type expressionEditorType, class System.Activities.Presentation.Expressions.CreateExpressionFromStringCallback convertFromString)
		{
			ret
		}
		.method assembly hidebysig 
			instance bool TryCreateEditor(string expressionEditorName, [out] class System.Activities.Presentation.Expressions.ExpressionActivityEditor& editorInstance)
		{
			ret
		}
		.method assembly hidebysig 
			instance class System.Activities.Presentation.View.IExpressionEditorService GetExpressionService(class System.Activities.Presentation.Expressions.ExpressionActivityEditor editor)
		{
			ret
		}
		.method assembly hidebysig 
			instance string GetExpressionEditorType(string localSetting, object root, class [System]System.Runtime.Versioning.FrameworkName targetFramework)
		{
			ret
		}
		.method assembly hidebysig 
			instance void InitializeEditor(class System.Activities.Presentation.Expressions.ExpressionActivityEditor editor, class System.Activities.Presentation.View.ExpressionTextBox expressionTextBox)
		{
			ret
		}
		.method assembly static hidebysig 
			bool TryConvertString(string targetEditor, string expressionText, bool isLocationExpression, class [mscorlib]System.Type resultType, [out] class [System.Activities]System.Activities.ActivityWithResult& expression)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private ExpressionValidationRule
		extends [PresentationFramework]System.Windows.Controls.ValidationRule
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.View.ExpressionTextBox owner)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [PresentationFramework]System.Windows.Controls.ValidationResult Validate(object 'value', class [mscorlib]System.Globalization.CultureInfo cultureInfo)
		{
			ret
		}
	}
	.class private ExpressionValueEditor
		extends System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void ShowDialog(class System.Activities.Presentation.PropertyEditing.PropertyValue propertyValue, class [PresentationCore]System.Windows.IInputElement commandSource)
		{
			ret
		}
		.method family virtual hidebysig newslot specialname 
			instance class [PresentationFramework]System.Windows.DataTemplate get_DialogTemplate()
		{
			ret
		}
		.method family virtual hidebysig newslot specialname 
			instance string get_DialogTitle()
		{
			ret
		}
		.property instance class [PresentationFramework]System.Windows.DataTemplate DialogTemplate()
		{
			.get instance class [PresentationFramework]System.Windows.DataTemplate System.Activities.Presentation.View.ExpressionValueEditor::get_DialogTemplate()
		}
		.property instance string DialogTitle()
		{
			.get instance string System.Activities.Presentation.View.ExpressionValueEditor::get_DialogTitle()
		}
	}
	.class private sealed ExtensionSurface
		extends [PresentationFramework]System.Windows.Controls.Panel
	{
		.class nested public sealed PlacementMode
			extends [mscorlib]System.Enum
		{
			.field public rtspecialname specialname int32 value__
			.field static public literal valuetype System.Activities.Presentation.View.ExtensionSurface/PlacementMode Absolute = int32(0x00000001)
			.field static public literal valuetype System.Activities.Presentation.View.ExtensionSurface/PlacementMode Relative = int32(0x00000000)
		}
		.class nested public sealed PositionAlignment
			extends [mscorlib]System.Enum
		{
			.field public rtspecialname specialname int32 value__
			.field static public literal valuetype System.Activities.Presentation.View.ExtensionSurface/PositionAlignment Center = int32(0x00000004)
			.field static public literal valuetype System.Activities.Presentation.View.ExtensionSurface/PositionAlignment CenterHorizontal = int32(0x00000005)
			.field static public literal valuetype System.Activities.Presentation.View.ExtensionSurface/PositionAlignment CenterVertical = int32(0x00000006)
			.field static public literal valuetype System.Activities.Presentation.View.ExtensionSurface/PositionAlignment LeftBottom = int32(0x00000001)
			.field static public literal valuetype System.Activities.Presentation.View.ExtensionSurface/PositionAlignment LeftTop = int32(0x00000000)
			.field static public literal valuetype System.Activities.Presentation.View.ExtensionSurface/PositionAlignment RightBottom = int32(0x00000003)
			.field static public literal valuetype System.Activities.Presentation.View.ExtensionSurface/PositionAlignment RightTop = int32(0x00000002)
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.View.DesignerView get_Designer()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Designer(class System.Activities.Presentation.View.DesignerView 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_AutoExpandCanvas()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_AutoExpandCanvas(bool 'value')
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnVisualChildrenChanged(class [WindowsBase]System.Windows.DependencyObject visualAdded, class [WindowsBase]System.Windows.DependencyObject visualRemoved)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnRenderSizeChanged(class [PresentationCore]System.Windows.SizeChangedInfo sizeInfo)
		{
			ret
		}
		.method assembly hidebysig 
			instance void SetWindowPosition(class System.Activities.Presentation.View.ExtensionWindow window, valuetype [WindowsBase]System.Windows.Point position)
		{
			ret
		}
		.method assembly hidebysig 
			instance void SetSize(class System.Activities.Presentation.View.ExtensionWindow window, valuetype [WindowsBase]System.Windows.Size size)
		{
			ret
		}
		.method family virtual hidebysig 
			instance valuetype [WindowsBase]System.Windows.Size ArrangeOverride(valuetype [WindowsBase]System.Windows.Size arrangeSize)
		{
			ret
		}
		.method family virtual hidebysig 
			instance valuetype [WindowsBase]System.Windows.Size MeasureOverride(valuetype [WindowsBase]System.Windows.Size constraint)
		{
			ret
		}
		.method public hidebysig 
			instance void SelectWindow(class System.Activities.Presentation.View.ExtensionWindow window)
		{
			ret
		}
		.method public static hidebysig 
			void SetPlacementTarget(class [WindowsBase]System.Windows.DependencyObject container, class [PresentationFramework]System.Windows.FrameworkElement 'value')
		{
			ret
		}
		.method public static hidebysig 
			class [PresentationFramework]System.Windows.FrameworkElement GetPlacementTarget(class [WindowsBase]System.Windows.DependencyObject container)
		{
			ret
		}
		.method public static hidebysig 
			void SetAlignment(class [WindowsBase]System.Windows.DependencyObject container, valuetype System.Activities.Presentation.View.ExtensionSurface/PositionAlignment 'value')
		{
			ret
		}
		.method public static hidebysig 
			valuetype System.Activities.Presentation.View.ExtensionSurface/PositionAlignment GetAlignment(class [WindowsBase]System.Windows.DependencyObject container)
		{
			ret
		}
		.method public static hidebysig 
			void SetMode(class [WindowsBase]System.Windows.DependencyObject container, valuetype System.Activities.Presentation.View.ExtensionSurface/PlacementMode 'value')
		{
			ret
		}
		.method public static hidebysig 
			valuetype System.Activities.Presentation.View.ExtensionSurface/PlacementMode GetMode(class [WindowsBase]System.Windows.DependencyObject container)
		{
			ret
		}
		.method public static hidebysig 
			void SetPosition(class [WindowsBase]System.Windows.DependencyObject container, valuetype [WindowsBase]System.Windows.Point 'value')
		{
			ret
		}
		.method public static hidebysig 
			valuetype [WindowsBase]System.Windows.Point GetPosition(class [WindowsBase]System.Windows.DependencyObject container)
		{
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty AlignmentProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty AutoExpandCanvasProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty DesignerProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ModeProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty PlacementTargetProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty PositionProperty
		.property instance bool AutoExpandCanvas()
		{
			.get instance bool System.Activities.Presentation.View.ExtensionSurface::get_AutoExpandCanvas()
			.set instance void System.Activities.Presentation.View.ExtensionSurface::set_AutoExpandCanvas(bool)
		}
		.property instance class System.Activities.Presentation.View.DesignerView Designer()
		{
			.get instance class System.Activities.Presentation.View.DesignerView System.Activities.Presentation.View.ExtensionSurface::get_Designer()
			.set instance void System.Activities.Presentation.View.ExtensionSurface::set_Designer(class System.Activities.Presentation.View.DesignerView)
		}
	}
	.class private ExtensionWindow
		extends [PresentationFramework]System.Windows.Controls.ContentControl
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnInitialized(class [mscorlib]System.EventArgs e)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_Closing(class System.Activities.Presentation.View.ExtensionWindowClosingEventHandler 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_Closing(class System.Activities.Presentation.View.ExtensionWindowClosingEventHandler 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_Close(class System.Activities.Presentation.View.ExtensionWindowCloseEventHandler 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_Close(class System.Activities.Presentation.View.ExtensionWindowCloseEventHandler 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_VisibilityChanged(class [PresentationCore]System.Windows.RoutedEventHandler 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_VisibilityChanged(class [PresentationCore]System.Windows.RoutedEventHandler 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_Data()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Data(object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Title()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Title(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationCore]System.Windows.Media.DrawingBrush get_Icon()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Icon(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_ShowWindowHeader()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ShowWindowHeader(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_ShowResizeGrip()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ShowResizeGrip(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class [PresentationFramework]System.Windows.Controls.MenuItem> get_MenuItems()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.View.ExtensionSurface get_Surface()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsResizable()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsResizable(bool 'value')
		{
			ret
		}
		.method family hidebysig specialname 
			instance class [PresentationFramework]System.Windows.Controls.ContentPresenter get_ContentPresenter()
		{
			ret
		}
		.method public hidebysig 
			instance valuetype [WindowsBase]System.Windows.Point GetPlacementTargetOffset()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnVisualParentChanged(class [WindowsBase]System.Windows.DependencyObject oldParent)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnDataChanged(object oldData, object newData)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnVisibilityChanged(valuetype [PresentationCore]System.Windows.Visibility oldValue, valuetype [PresentationCore]System.Windows.Visibility newValue)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnPositionChanged(valuetype [WindowsBase]System.Windows.Point position)
		{
			ret
		}
		.method public hidebysig 
			instance bool TryFindElement(string elementName, [out] object& element)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void OnApplyTemplate()
		{
			ret
		}
		.method assembly static hidebysig 
			void RaiseWindowCloseEvent(class System.Activities.Presentation.View.ExtensionWindow sender)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnKeyDown(class [PresentationCore]System.Windows.Input.KeyEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnMouseDown(class [PresentationCore]System.Windows.Input.MouseButtonEventArgs e)
		{
			ret
		}
		.method public hidebysig 
			instance void SelectWindow()
		{
			ret
		}
		.method assembly static hidebysig 
			bool TryGetParentExtensionWindow(class [PresentationFramework]System.Windows.FrameworkElement element, [out] class System.Activities.Presentation.View.ExtensionWindow& window, [out] class System.Activities.Presentation.View.ExtensionSurface& surface)
		{
			ret
		}
		.field static public initonly class [PresentationCore]System.Windows.RoutedEvent CloseEvent
		.field static public initonly class [PresentationCore]System.Windows.RoutedEvent ClosingEvent
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty DataProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty IconProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty IsResizableProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty MenuItemsProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ShowResizeGripProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ShowWindowHeaderProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty TitleProperty
		.field static public initonly class [PresentationCore]System.Windows.RoutedEvent VisibilityChangedEvent
		.event System.Activities.Presentation.View.ExtensionWindowCloseEventHandler Close
		{
			.addon instance void System.Activities.Presentation.View.ExtensionWindow::add_Close(class System.Activities.Presentation.View.ExtensionWindowCloseEventHandler)
			.removeon instance void System.Activities.Presentation.View.ExtensionWindow::remove_Close(class System.Activities.Presentation.View.ExtensionWindowCloseEventHandler)
		}
		.event System.Activities.Presentation.View.ExtensionWindowClosingEventHandler Closing
		{
			.addon instance void System.Activities.Presentation.View.ExtensionWindow::add_Closing(class System.Activities.Presentation.View.ExtensionWindowClosingEventHandler)
			.removeon instance void System.Activities.Presentation.View.ExtensionWindow::remove_Closing(class System.Activities.Presentation.View.ExtensionWindowClosingEventHandler)
		}
		.event [PresentationCore]System.Windows.RoutedEventHandler VisibilityChanged
		{
			.addon instance void System.Activities.Presentation.View.ExtensionWindow::add_VisibilityChanged(class [PresentationCore]System.Windows.RoutedEventHandler)
			.removeon instance void System.Activities.Presentation.View.ExtensionWindow::remove_VisibilityChanged(class [PresentationCore]System.Windows.RoutedEventHandler)
		}
		.property instance class [PresentationFramework]System.Windows.Controls.ContentPresenter ContentPresenter()
		{
			.get instance class [PresentationFramework]System.Windows.Controls.ContentPresenter System.Activities.Presentation.View.ExtensionWindow::get_ContentPresenter()
		}
		.property instance object Data()
		{
			.get instance object System.Activities.Presentation.View.ExtensionWindow::get_Data()
			.set instance void System.Activities.Presentation.View.ExtensionWindow::set_Data(object)
		}
		.property instance class [PresentationCore]System.Windows.Media.DrawingBrush Icon()
		{
			.get instance class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.View.ExtensionWindow::get_Icon()
			.set instance void System.Activities.Presentation.View.ExtensionWindow::set_Icon(class [PresentationCore]System.Windows.Media.DrawingBrush)
		}
		.property instance bool IsResizable()
		{
			.get instance bool System.Activities.Presentation.View.ExtensionWindow::get_IsResizable()
			.set instance void System.Activities.Presentation.View.ExtensionWindow::set_IsResizable(bool)
		}
		.property instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class [PresentationFramework]System.Windows.Controls.MenuItem> MenuItems()
		{
			.get instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class [PresentationFramework]System.Windows.Controls.MenuItem> System.Activities.Presentation.View.ExtensionWindow::get_MenuItems()
		}
		.property instance bool ShowResizeGrip()
		{
			.get instance bool System.Activities.Presentation.View.ExtensionWindow::get_ShowResizeGrip()
			.set instance void System.Activities.Presentation.View.ExtensionWindow::set_ShowResizeGrip(bool)
		}
		.property instance bool ShowWindowHeader()
		{
			.get instance bool System.Activities.Presentation.View.ExtensionWindow::get_ShowWindowHeader()
			.set instance void System.Activities.Presentation.View.ExtensionWindow::set_ShowWindowHeader(bool)
		}
		.property instance class System.Activities.Presentation.View.ExtensionSurface Surface()
		{
			.get instance class System.Activities.Presentation.View.ExtensionSurface System.Activities.Presentation.View.ExtensionWindow::get_Surface()
		}
		.property instance string Title()
		{
			.get instance string System.Activities.Presentation.View.ExtensionWindow::get_Title()
			.set instance void System.Activities.Presentation.View.ExtensionWindow::set_Title(string)
		}
	}
	.class private sealed ExtensionWindowCloseEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object sender, class [PresentationCore]System.Windows.RoutedEventArgs e)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object sender, class [PresentationCore]System.Windows.RoutedEventArgs e, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class private sealed ExtensionWindowClosingEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object sender, class System.Activities.Presentation.View.ExtensionWindowClosingRoutedEventArgs e)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object sender, class System.Activities.Presentation.View.ExtensionWindowClosingRoutedEventArgs e, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class private sealed ExtensionWindowClosingRoutedEventArgs
		extends [PresentationCore]System.Windows.RoutedEventArgs
	{
		.method assembly hidebysig specialname 
			instance void .ctor(class [PresentationCore]System.Windows.RoutedEvent routedEvent, object source)
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_Cancel()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_Cancel(bool 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.property instance bool Cancel()
		{
			.get instance bool System.Activities.Presentation.View.ExtensionWindowClosingRoutedEventArgs::get_Cancel()
			.set instance void System.Activities.Presentation.View.ExtensionWindowClosingRoutedEventArgs::set_Cancel(bool)
		}
	}
	.class private ExtensionWindowHeader
		extends [PresentationFramework]System.Windows.Controls.Control
	{
		.method public hidebysig specialname 
			instance string get_Title()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Title(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationCore]System.Windows.Media.DrawingBrush get_ButtonCloseIcon()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ButtonCloseIcon(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationCore]System.Windows.Media.DrawingBrush get_Icon()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Icon(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationCore]System.Windows.Media.DrawingBrush get_DropDownMenuIcon()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_DropDownMenuIcon(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance void OnApplyTemplate()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnMouseLeftButtonDown(class [PresentationCore]System.Windows.Input.MouseButtonEventArgs args)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnMouseMove(class [PresentationCore]System.Windows.Input.MouseEventArgs args)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnMouseLeftButtonUp(class [PresentationCore]System.Windows.Input.MouseButtonEventArgs args)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnVisualParentChanged(class [WindowsBase]System.Windows.DependencyObject oldParent)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ButtonCloseIconProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty DropDownMenuIconProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty IconProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty TitleProperty
		.property instance class [PresentationCore]System.Windows.Media.DrawingBrush ButtonCloseIcon()
		{
			.get instance class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.View.ExtensionWindowHeader::get_ButtonCloseIcon()
			.set instance void System.Activities.Presentation.View.ExtensionWindowHeader::set_ButtonCloseIcon(class [PresentationCore]System.Windows.Media.DrawingBrush)
		}
		.property instance class [PresentationCore]System.Windows.Media.DrawingBrush DropDownMenuIcon()
		{
			.get instance class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.View.ExtensionWindowHeader::get_DropDownMenuIcon()
			.set instance void System.Activities.Presentation.View.ExtensionWindowHeader::set_DropDownMenuIcon(class [PresentationCore]System.Windows.Media.DrawingBrush)
		}
		.property instance class [PresentationCore]System.Windows.Media.DrawingBrush Icon()
		{
			.get instance class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.View.ExtensionWindowHeader::get_Icon()
			.set instance void System.Activities.Presentation.View.ExtensionWindowHeader::set_Icon(class [PresentationCore]System.Windows.Media.DrawingBrush)
		}
		.property instance string Title()
		{
			.get instance string System.Activities.Presentation.View.ExtensionWindowHeader::get_Title()
			.set instance void System.Activities.Presentation.View.ExtensionWindowHeader::set_Title(string)
		}
	}
	.class private ExtensionWindowResizeGrip
		extends [PresentationFramework]System.Windows.Controls.Control
	{
		.method public hidebysig specialname 
			instance class [PresentationCore]System.Windows.Media.DrawingBrush get_Icon()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Icon(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnMouseLeftButtonDown(class [PresentationCore]System.Windows.Input.MouseButtonEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnMouseMove(class [PresentationCore]System.Windows.Input.MouseEventArgs args)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnMouseLeftButtonUp(class [PresentationCore]System.Windows.Input.MouseButtonEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnVisualParentChanged(class [WindowsBase]System.Windows.DependencyObject oldParent)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty IconProperty
		.property instance class [PresentationCore]System.Windows.Media.DrawingBrush Icon()
		{
			.get instance class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.View.ExtensionWindowResizeGrip::get_Icon()
			.set instance void System.Activities.Presentation.View.ExtensionWindowResizeGrip::set_Icon(class [PresentationCore]System.Windows.Media.DrawingBrush)
		}
	}
	.class private FilterableData
		extends [WindowsBase]System.Windows.DependencyObject
	{
		.method public hidebysig specialname 
			instance object get_Data()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Data(object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsSelected()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsSelected(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [PresentationCore]System.Windows.Visibility get_Visibility()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Visibility(valuetype [PresentationCore]System.Windows.Visibility 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance object get_Owner()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_Owner(object 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public virtual hidebysig 
			instance string ToString()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty DataProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty IsSelectedProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty VisibilityProperty
		.property instance object Data()
		{
			.get instance object System.Activities.Presentation.View.FilterableData::get_Data()
			.set instance void System.Activities.Presentation.View.FilterableData::set_Data(object)
		}
		.property instance bool IsSelected()
		{
			.get instance bool System.Activities.Presentation.View.FilterableData::get_IsSelected()
			.set instance void System.Activities.Presentation.View.FilterableData::set_IsSelected(bool)
		}
		.property instance object Owner()
		{
			.get instance object System.Activities.Presentation.View.FilterableData::get_Owner()
			.set instance void System.Activities.Presentation.View.FilterableData::set_Owner(object)
		}
		.property instance valuetype [PresentationCore]System.Windows.Visibility Visibility()
		{
			.get instance valuetype [PresentationCore]System.Windows.Visibility System.Activities.Presentation.View.FilterableData::get_Visibility()
			.set instance void System.Activities.Presentation.View.FilterableData::set_Visibility(valuetype [PresentationCore]System.Windows.Visibility)
		}
	}
	.class private 'FilterableData`1'<'TData'>
		extends System.Activities.Presentation.View.FilterableData
	{
		.method public hidebysig specialname 
			instance !0 get_TypedData()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_TypedData(!0 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance string ToString()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance !0 TypedData()
		{
			.get instance !0 'System.Activities.Presentation.View.FilterableData`1'::get_TypedData()
			.set instance void 'System.Activities.Presentation.View.FilterableData`1'::set_TypedData(!0)
		}
	}
	.class private GenericActivityTypeDesigner
		extends System.Activities.Presentation.WorkflowViewElement
		implements [System.Xaml]System.Windows.Markup.IComponentConnector
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnContextMenuLoaded(class [PresentationFramework]System.Windows.Controls.ContextMenu menu)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void InitializeComponent()
		{
			ret
		}
		.method assembly hidebysig 
			instance class [mscorlib]System.Delegate _CreateDelegate(class [mscorlib]System.Type delegateType, string 'handler')
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Windows.Markup.IComponentConnector.Connect(int32 connectionId, object target)
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.override [System.Xaml]System.Windows.Markup.IComponentConnector::Connect
			ret
		}
		.field assembly class System.Activities.Presentation.View.GenericActivityTypeDesigner genericActivityTypeDesignerElement
	}
	.class private sealed HandleValueEditor
		extends System.Activities.Presentation.PropertyEditing.PropertyValueEditor
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public interface abstract IExpressionEditorInstance
	{
		.method public virtual hidebysig newslot abstract specialname 
			instance class [PresentationFramework]System.Windows.Controls.Control get_HostControl()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance string get_Text()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void set_Text(string 'value')
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance valuetype [PresentationFramework]System.Windows.Controls.ScrollBarVisibility get_VerticalScrollBarVisibility()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void set_VerticalScrollBarVisibility(valuetype [PresentationFramework]System.Windows.Controls.ScrollBarVisibility 'value')
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance valuetype [PresentationFramework]System.Windows.Controls.ScrollBarVisibility get_HorizontalScrollBarVisibility()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void set_HorizontalScrollBarVisibility(valuetype [PresentationFramework]System.Windows.Controls.ScrollBarVisibility 'value')
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance int32 get_MinLines()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void set_MinLines(int32 'value')
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance int32 get_MaxLines()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void set_MaxLines(int32 'value')
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_HasAggregateFocus()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_AcceptsReturn()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void set_AcceptsReturn(bool 'value')
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_AcceptsTab()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void set_AcceptsTab(bool 'value')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Close()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Focus()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void ClearSelection()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool Cut()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool Copy()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool Paste()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool Undo()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool Redo()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool CompleteWord()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool GlobalIntellisense()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool ParameterInfo()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool QuickInfo()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool IncreaseFilterLevel()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool DecreaseFilterLevel()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool CanCut()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool CanCopy()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool CanPaste()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool CanUndo()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool CanRedo()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool CanCompleteWord()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool CanGlobalIntellisense()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool CanParameterInfo()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool CanQuickInfo()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool CanIncreaseFilterLevel()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool CanDecreaseFilterLevel()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance string GetCommittedText()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void add_TextChanged(class [mscorlib]System.EventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void remove_TextChanged(class [mscorlib]System.EventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void add_LostAggregateFocus(class [mscorlib]System.EventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void remove_LostAggregateFocus(class [mscorlib]System.EventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void add_GotAggregateFocus(class [mscorlib]System.EventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void remove_GotAggregateFocus(class [mscorlib]System.EventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void add_Closing(class [mscorlib]System.EventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void remove_Closing(class [mscorlib]System.EventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
		}
		.event [mscorlib]System.EventHandler Closing
		{
			.addon instance void System.Activities.Presentation.View.IExpressionEditorInstance::add_Closing(class [mscorlib]System.EventHandler)
			.removeon instance void System.Activities.Presentation.View.IExpressionEditorInstance::remove_Closing(class [mscorlib]System.EventHandler)
		}
		.event [mscorlib]System.EventHandler GotAggregateFocus
		{
			.addon instance void System.Activities.Presentation.View.IExpressionEditorInstance::add_GotAggregateFocus(class [mscorlib]System.EventHandler)
			.removeon instance void System.Activities.Presentation.View.IExpressionEditorInstance::remove_GotAggregateFocus(class [mscorlib]System.EventHandler)
		}
		.event [mscorlib]System.EventHandler LostAggregateFocus
		{
			.addon instance void System.Activities.Presentation.View.IExpressionEditorInstance::add_LostAggregateFocus(class [mscorlib]System.EventHandler)
			.removeon instance void System.Activities.Presentation.View.IExpressionEditorInstance::remove_LostAggregateFocus(class [mscorlib]System.EventHandler)
		}
		.event [mscorlib]System.EventHandler TextChanged
		{
			.addon instance void System.Activities.Presentation.View.IExpressionEditorInstance::add_TextChanged(class [mscorlib]System.EventHandler)
			.removeon instance void System.Activities.Presentation.View.IExpressionEditorInstance::remove_TextChanged(class [mscorlib]System.EventHandler)
		}
		.property instance bool AcceptsReturn()
		{
			.get instance bool System.Activities.Presentation.View.IExpressionEditorInstance::get_AcceptsReturn()
			.set instance void System.Activities.Presentation.View.IExpressionEditorInstance::set_AcceptsReturn(bool)
		}
		.property instance bool AcceptsTab()
		{
			.get instance bool System.Activities.Presentation.View.IExpressionEditorInstance::get_AcceptsTab()
			.set instance void System.Activities.Presentation.View.IExpressionEditorInstance::set_AcceptsTab(bool)
		}
		.property instance bool HasAggregateFocus()
		{
			.get instance bool System.Activities.Presentation.View.IExpressionEditorInstance::get_HasAggregateFocus()
		}
		.property instance valuetype [PresentationFramework]System.Windows.Controls.ScrollBarVisibility HorizontalScrollBarVisibility()
		{
			.get instance valuetype [PresentationFramework]System.Windows.Controls.ScrollBarVisibility System.Activities.Presentation.View.IExpressionEditorInstance::get_HorizontalScrollBarVisibility()
			.set instance void System.Activities.Presentation.View.IExpressionEditorInstance::set_HorizontalScrollBarVisibility(valuetype [PresentationFramework]System.Windows.Controls.ScrollBarVisibility)
		}
		.property instance class [PresentationFramework]System.Windows.Controls.Control HostControl()
		{
			.get instance class [PresentationFramework]System.Windows.Controls.Control System.Activities.Presentation.View.IExpressionEditorInstance::get_HostControl()
		}
		.property instance int32 MaxLines()
		{
			.get instance int32 System.Activities.Presentation.View.IExpressionEditorInstance::get_MaxLines()
			.set instance void System.Activities.Presentation.View.IExpressionEditorInstance::set_MaxLines(int32)
		}
		.property instance int32 MinLines()
		{
			.get instance int32 System.Activities.Presentation.View.IExpressionEditorInstance::get_MinLines()
			.set instance void System.Activities.Presentation.View.IExpressionEditorInstance::set_MinLines(int32)
		}
		.property instance string Text()
		{
			.get instance string System.Activities.Presentation.View.IExpressionEditorInstance::get_Text()
			.set instance void System.Activities.Presentation.View.IExpressionEditorInstance::set_Text(string)
		}
		.property instance valuetype [PresentationFramework]System.Windows.Controls.ScrollBarVisibility VerticalScrollBarVisibility()
		{
			.get instance valuetype [PresentationFramework]System.Windows.Controls.ScrollBarVisibility System.Activities.Presentation.View.IExpressionEditorInstance::get_VerticalScrollBarVisibility()
			.set instance void System.Activities.Presentation.View.IExpressionEditorInstance::set_VerticalScrollBarVisibility(valuetype [PresentationFramework]System.Windows.Controls.ScrollBarVisibility)
		}
	}
	.class public interface abstract IExpressionEditorService
	{
		.method public virtual hidebysig newslot abstract 
			instance class System.Activities.Presentation.View.IExpressionEditorInstance CreateExpressionEditor(class System.Activities.Presentation.Hosting.AssemblyContextControlItem assemblies, class System.Activities.Presentation.Hosting.ImportedNamespaceContextItem importedNamespaces, class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.ModelItem> variables, string text, class [mscorlib]System.Type expressionType)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.Activities.Presentation.View.IExpressionEditorInstance CreateExpressionEditor(class System.Activities.Presentation.Hosting.AssemblyContextControlItem assemblies, class System.Activities.Presentation.Hosting.ImportedNamespaceContextItem importedNamespaces, class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.ModelItem> variables, string text, class [mscorlib]System.Type expressionType, valuetype [WindowsBase]System.Windows.Size initialSize)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.Activities.Presentation.View.IExpressionEditorInstance CreateExpressionEditor(class System.Activities.Presentation.Hosting.AssemblyContextControlItem assemblies, class System.Activities.Presentation.Hosting.ImportedNamespaceContextItem importedNamespaces, class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.ModelItem> variables, string text)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.Activities.Presentation.View.IExpressionEditorInstance CreateExpressionEditor(class System.Activities.Presentation.Hosting.AssemblyContextControlItem assemblies, class System.Activities.Presentation.Hosting.ImportedNamespaceContextItem importedNamespaces, class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.ModelItem> variables, string text, valuetype [WindowsBase]System.Windows.Size initialSize)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void CloseExpressionEditors()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void UpdateContext(class System.Activities.Presentation.Hosting.AssemblyContextControlItem assemblies, class System.Activities.Presentation.Hosting.ImportedNamespaceContextItem importedNamespaces)
		{
		}
	}
	.class private interface abstract IVersionEditor
	{
		.method public virtual hidebysig newslot abstract 
			instance void ShowErrorMessage(string message)
		{
		}
	}
	.class private ImportDesigner
		extends [PresentationFramework]System.Windows.Controls.ContentControl
		implements [System.Xaml]System.Windows.Markup.IComponentConnector, [PresentationFramework]System.Windows.Markup.IStyleConnector
	{
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.EditingContext get_Context()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Context(class System.Activities.Presentation.EditingContext 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnInitialized(class [mscorlib]System.EventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnIsKeyboardFocusWithinChanged(valuetype [WindowsBase]System.Windows.DependencyPropertyChangedEventArgs e)
		{
			ret
		}
		.method assembly hidebysig 
			instance void OnReferenceUpdated(class [mscorlib]System.Reflection.AssemblyName updatedReference, bool isAdded)
		{
			ret
		}
		.method public static hidebysig 
			void AddImport(string importedNamespace, class System.Activities.Presentation.EditingContext editingContext)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void InitializeComponent()
		{
			ret
		}
		.method assembly hidebysig 
			instance class [mscorlib]System.Delegate _CreateDelegate(class [mscorlib]System.Type delegateType, string 'handler')
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Windows.Markup.IComponentConnector.Connect(int32 connectionId, object target)
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.override [System.Xaml]System.Windows.Markup.IComponentConnector::Connect
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Windows.Markup.IStyleConnector.Connect(int32 connectionId, object target)
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.override [PresentationFramework]System.Windows.Markup.IStyleConnector::Connect
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ContextProperty
		.field assembly class [PresentationFramework]System.Windows.Controls.DataGrid importedNamespacesDataGrid
		.field assembly class [PresentationFramework]System.Windows.Controls.ComboBox inputComboBox
		.field assembly class System.Activities.Presentation.View.ImportDesigner variableDesigner
		.property instance class System.Activities.Presentation.EditingContext Context()
		{
			.get instance class System.Activities.Presentation.EditingContext System.Activities.Presentation.View.ImportDesigner::get_Context()
			.set instance void System.Activities.Presentation.View.ImportDesigner::set_Context(class System.Activities.Presentation.EditingContext)
		}
	}
	.class private sealed LineToHeightConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IMultiValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object[] values, class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object[] ConvertBack(object 'value', class [mscorlib]System.Type[] targetTypes, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private sealed ModelPropertyPathExpanderConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private NamespaceDisplay
		extends [PresentationFramework]System.Windows.Controls.UserControl
		implements [System.Xaml]System.Windows.Markup.IComponentConnector
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Namespace()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Namespace(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsInvalid()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsInvalid(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ErrorMessage()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ErrorMessage(string 'value')
		{
			ret
		}
		.method family virtual hidebysig 
			instance class [PresentationCore]System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void InitializeComponent()
		{
			ret
		}
		.method assembly hidebysig 
			instance class [mscorlib]System.Delegate _CreateDelegate(class [mscorlib]System.Type delegateType, string 'handler')
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Windows.Markup.IComponentConnector.Connect(int32 connectionId, object target)
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.override [System.Xaml]System.Windows.Markup.IComponentConnector::Connect
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ErrorMessageProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty IsInvalidProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty NamespaceProperty
		.field assembly class System.Activities.Presentation.View.NamespaceDisplay namespaceDisplay
		.property instance string ErrorMessage()
		{
			.get instance string System.Activities.Presentation.View.NamespaceDisplay::get_ErrorMessage()
			.set instance void System.Activities.Presentation.View.NamespaceDisplay::set_ErrorMessage(string)
		}
		.property instance bool IsInvalid()
		{
			.get instance bool System.Activities.Presentation.View.NamespaceDisplay::get_IsInvalid()
			.set instance void System.Activities.Presentation.View.NamespaceDisplay::set_IsInvalid(bool)
		}
		.property instance string Namespace()
		{
			.get instance string System.Activities.Presentation.View.NamespaceDisplay::get_Namespace()
			.set instance void System.Activities.Presentation.View.NamespaceDisplay::set_Namespace(string)
		}
	}
	.class private NamespaceDisplayAutomationPeer
		extends [PresentationCore]System.Windows.Automation.Peers.UIElementAutomationPeer
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.View.NamespaceDisplay owner)
		{
			ret
		}
		.method family virtual hidebysig 
			instance string GetItemStatusCore()
		{
			ret
		}
	}
	.class private NoContextMenuGrid
		extends [PresentationFramework]System.Windows.Controls.Grid
	{
		.method family virtual hidebysig 
			instance void OnContextMenuOpening(class [PresentationFramework]System.Windows.Controls.ContextMenuEventArgs e)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private ParserContext
		extends [System.Activities]System.Activities.LocationReferenceEnvironment
		implements [System.Xaml]System.Windows.Markup.IValueSerializerContext, [System]System.ComponentModel.ITypeDescriptorContext, [mscorlib]System.IServiceProvider, [System.Xaml]System.Xaml.IXamlNameResolver, [System.Xaml]System.Xaml.INamespacePrefixLookup, [System.Xaml]System.Xaml.IXamlNamespaceResolver
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.Model.ModelItem modelItem)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance class [System]System.ComponentModel.IContainer get_Container()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance object get_Instance()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_Instance(object 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance class [System]System.ComponentModel.PropertyDescriptor get_PropertyDescriptor()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_PropertyDescriptor(class [System]System.ComponentModel.PropertyDescriptor 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [System.Activities]System.Activities.Activity get_Root()
		{
			ret
		}
		.method public hidebysig 
			instance bool Initialize(class System.Activities.Presentation.Model.ModelItem modelItem)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool IsVisible(class [System.Activities]System.Activities.LocationReference reference)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool TryGetLocationReference(string name, [out] class [System.Activities]System.Activities.LocationReference& result)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance string GetNamespace(string prefix)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class [System.Xaml]System.Xaml.NamespaceDeclaration> GetNamespacePrefixes()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class [System.Activities]System.Activities.LocationReference> GetLocationReferences()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object Resolve(string name)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object Resolve(string name, [out] bool& isFullyInitialized)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_IsFixupTokenAvailable()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<string> get_Namespaces()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object GetFixupToken(class [mscorlib]'System.Collections.Generic.IEnumerable`1'<string> names)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object GetFixupToken(class [mscorlib]'System.Collections.Generic.IEnumerable`1'<string> names, bool canAssignDirectly)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object GetService(class [mscorlib]System.Type serviceType)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [System.Xaml]System.Windows.Markup.ValueSerializer GetValueSerializerFor(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [System.Xaml]System.Windows.Markup.ValueSerializer GetValueSerializerFor(class [System]System.ComponentModel.PropertyDescriptor descriptor)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance string LookupPrefix(string ns)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void OnComponentChanged()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool OnComponentChanging()
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<valuetype [mscorlib]'System.Collections.Generic.KeyValuePair`2'<string,object>> System.Xaml.IXamlNameResolver.GetAllNamesAndValuesInScope()
		{
			.override [System.Xaml]System.Xaml.IXamlNameResolver::GetAllNamesAndValuesInScope
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance void System.Xaml.IXamlNameResolver.add_OnNameScopeInitializationComplete(class [mscorlib]System.EventHandler 'value')
		{
			.override [System.Xaml]System.Xaml.IXamlNameResolver::add_OnNameScopeInitializationComplete
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance void System.Xaml.IXamlNameResolver.remove_OnNameScopeInitializationComplete(class [mscorlib]System.EventHandler 'value')
		{
			.override [System.Xaml]System.Xaml.IXamlNameResolver::remove_OnNameScopeInitializationComplete
			ret
		}
		.event [mscorlib]System.EventHandler System.Xaml.IXamlNameResolver.OnNameScopeInitializationComplete
		{
			.addon instance void System.Activities.Presentation.View.ParserContext::System.Xaml.IXamlNameResolver.add_OnNameScopeInitializationComplete(class [mscorlib]System.EventHandler)
			.removeon instance void System.Activities.Presentation.View.ParserContext::System.Xaml.IXamlNameResolver.remove_OnNameScopeInitializationComplete(class [mscorlib]System.EventHandler)
		}
		.property instance class [System]System.ComponentModel.IContainer Container()
		{
			.get instance class [System]System.ComponentModel.IContainer System.Activities.Presentation.View.ParserContext::get_Container()
		}
		.property instance object Instance()
		{
			.get instance object System.Activities.Presentation.View.ParserContext::get_Instance()
			.set instance void System.Activities.Presentation.View.ParserContext::set_Instance(object)
		}
		.property instance bool IsFixupTokenAvailable()
		{
			.get instance bool System.Activities.Presentation.View.ParserContext::get_IsFixupTokenAvailable()
		}
		.property instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<string> Namespaces()
		{
			.get instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<string> System.Activities.Presentation.View.ParserContext::get_Namespaces()
		}
		.property instance class [System]System.ComponentModel.PropertyDescriptor PropertyDescriptor()
		{
			.get instance class [System]System.ComponentModel.PropertyDescriptor System.Activities.Presentation.View.ParserContext::get_PropertyDescriptor()
			.set instance void System.Activities.Presentation.View.ParserContext::set_PropertyDescriptor(class [System]System.ComponentModel.PropertyDescriptor)
		}
		.property instance class [System.Activities]System.Activities.Activity Root()
		{
			.get instance class [System.Activities]System.Activities.Activity System.Activities.Presentation.View.ParserContext::get_Root()
		}
	}
	.class private PropertyEntryToEditingContextConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private sealed PropertyEntryToEditorOptionConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed PropertyKind
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Activities.Presentation.View.PropertyKind InArgument = int32(0x00000000)
		.field static public literal valuetype System.Activities.Presentation.View.PropertyKind InOutArgument = int32(0x00000001)
		.field static public literal valuetype System.Activities.Presentation.View.PropertyKind OutArgument = int32(0x00000002)
		.field static public literal valuetype System.Activities.Presentation.View.PropertyKind Property = int32(0x00000003)
	}
	.class private sealed PropertyValueTextBox
		extends [PresentationFramework]System.Windows.Controls.TextBox
	{
		.method family virtual hidebysig 
			instance void OnInitialized(class [mscorlib]System.EventArgs e)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private 'QuadTree`1'<class 'T'>
		extends [mscorlib]System.Object
	{
		.class nested assembly QuadNode<class 'T'>
			extends [mscorlib]System.Object
		{
			.method public hidebysig specialname 
				instance void .ctor(!0 node, valuetype [WindowsBase]System.Windows.Rect bounds)
			{
				ret
			}
			.method public hidebysig specialname 
				instance !0 get_Node()
			{
				ret
			}
			.method public hidebysig specialname 
				instance void set_Node(!0 'value')
			{
				ret
			}
			.method public hidebysig specialname 
				instance valuetype [WindowsBase]System.Windows.Rect get_Bounds()
			{
				ret
			}
			.method public hidebysig specialname 
				instance class 'System.Activities.Presentation.View.QuadTree`1'/QuadNode<!0> get_Next()
			{
				ret
			}
			.method public hidebysig specialname 
				instance void set_Next(class 'System.Activities.Presentation.View.QuadTree`1'/QuadNode<!0> 'value')
			{
				ret
			}
			.property instance valuetype [WindowsBase]System.Windows.Rect Bounds()
			{
				.get instance valuetype [WindowsBase]System.Windows.Rect 'System.Activities.Presentation.View.QuadTree`1'/QuadNode::get_Bounds()
			}
			.property instance class 'System.Activities.Presentation.View.QuadTree`1'/QuadNode<!0> Next()
			{
				.get instance class 'System.Activities.Presentation.View.QuadTree`1'/QuadNode<!0> 'System.Activities.Presentation.View.QuadTree`1'/QuadNode::get_Next()
				.set instance void 'System.Activities.Presentation.View.QuadTree`1'/QuadNode::set_Next(class 'System.Activities.Presentation.View.QuadTree`1'/QuadNode<!0>)
			}
			.property instance !0 Node()
			{
				.get instance !0 'System.Activities.Presentation.View.QuadTree`1'/QuadNode::get_Node()
				.set instance void 'System.Activities.Presentation.View.QuadTree`1'/QuadNode::set_Node(!0)
			}
		}
		.class nested assembly Quadrant<class 'T'>
			extends [mscorlib]System.Object
		{
			.method public hidebysig specialname 
				instance void .ctor(class 'System.Activities.Presentation.View.QuadTree`1'/Quadrant<!0> parent, valuetype [WindowsBase]System.Windows.Rect bounds)
			{
				ret
			}
			.method assembly hidebysig specialname 
				instance class 'System.Activities.Presentation.View.QuadTree`1'/Quadrant<!0> get_Parent()
			{
				ret
			}
			.method assembly hidebysig specialname 
				instance valuetype [WindowsBase]System.Windows.Rect get_Bounds()
			{
				ret
			}
			.method assembly hidebysig 
				instance class 'System.Activities.Presentation.View.QuadTree`1'/Quadrant<!0> Insert(!0 node, valuetype [WindowsBase]System.Windows.Rect bounds)
			{
				ret
			}
			.method assembly hidebysig 
				instance void GetIntersectingNodes(class [mscorlib]'System.Collections.Generic.List`1'<class 'System.Activities.Presentation.View.QuadTree`1'/QuadNode<!0>> nodes, valuetype [WindowsBase]System.Windows.Rect bounds)
			{
				ret
			}
			.method assembly hidebysig 
				instance bool HasIntersectingNodes(valuetype [WindowsBase]System.Windows.Rect bounds)
			{
				ret
			}
			.method assembly hidebysig 
				instance bool RemoveNode(!0 node)
			{
				ret
			}
			.property instance valuetype [WindowsBase]System.Windows.Rect Bounds()
			{
				.get instance valuetype [WindowsBase]System.Windows.Rect 'System.Activities.Presentation.View.QuadTree`1'/Quadrant::get_Bounds()
			}
			.property instance class 'System.Activities.Presentation.View.QuadTree`1'/Quadrant<!0> Parent()
			{
				.get instance class 'System.Activities.Presentation.View.QuadTree`1'/Quadrant<!0> 'System.Activities.Presentation.View.QuadTree`1'/Quadrant::get_Parent()
			}
		}
		.method public hidebysig specialname 
			instance valuetype [WindowsBase]System.Windows.Rect get_Bounds()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Bounds(valuetype [WindowsBase]System.Windows.Rect 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Insert(!0 node, valuetype [WindowsBase]System.Windows.Rect bounds)
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<!0> GetNodesInside(valuetype [WindowsBase]System.Windows.Rect bounds)
		{
			ret
		}
		.method public hidebysig 
			instance bool HasNodesInside(valuetype [WindowsBase]System.Windows.Rect bounds)
		{
			ret
		}
		.method public hidebysig 
			instance bool Remove(!0 node)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance valuetype [WindowsBase]System.Windows.Rect Bounds()
		{
			.get instance valuetype [WindowsBase]System.Windows.Rect 'System.Activities.Presentation.View.QuadTree`1'::get_Bounds()
			.set instance void 'System.Activities.Presentation.View.QuadTree`1'::set_Bounds(valuetype [WindowsBase]System.Windows.Rect)
		}
	}
	.class private sealed ResolveTemplateParams
		extends [mscorlib]System.Object
	{
		.method assembly hidebysig specialname 
			instance void .ctor(class [PresentationFramework]System.Windows.Controls.DataGridCell cell, object 'instance')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationFramework]System.Windows.Controls.DataGridCell get_Cell()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance object get_Instance()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsDefaultTemplate()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsDefaultTemplate(bool 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationFramework]System.Windows.DataTemplate get_Template()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_Template(class [PresentationFramework]System.Windows.DataTemplate 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.property instance class [PresentationFramework]System.Windows.Controls.DataGridCell Cell()
		{
			.get instance class [PresentationFramework]System.Windows.Controls.DataGridCell System.Activities.Presentation.View.ResolveTemplateParams::get_Cell()
		}
		.property instance object Instance()
		{
			.get instance object System.Activities.Presentation.View.ResolveTemplateParams::get_Instance()
		}
		.property instance bool IsDefaultTemplate()
		{
			.get instance bool System.Activities.Presentation.View.ResolveTemplateParams::get_IsDefaultTemplate()
			.set instance void System.Activities.Presentation.View.ResolveTemplateParams::set_IsDefaultTemplate(bool)
		}
		.property instance class [PresentationFramework]System.Windows.DataTemplate Template()
		{
			.get instance class [PresentationFramework]System.Windows.DataTemplate System.Activities.Presentation.View.ResolveTemplateParams::get_Template()
			.set instance void System.Activities.Presentation.View.ResolveTemplateParams::set_Template(class [PresentationFramework]System.Windows.DataTemplate)
		}
	}
	.class private sealed RubberBandSelector
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.EditingContext context)
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsSelected()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsSelected(bool 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void RegisterViewElement(class System.Activities.Presentation.WorkflowViewElement view)
		{
			ret
		}
		.method public hidebysig 
			instance void UnregisterViewElement(class System.Activities.Presentation.WorkflowViewElement view)
		{
			ret
		}
		.method public hidebysig 
			instance void OnScrollViewerMouseLeftButtonDown(class [PresentationCore]System.Windows.Input.MouseButtonEventArgs e)
		{
			ret
		}
		.method public hidebysig 
			instance void OnScrollViewerMouseMove(class [PresentationCore]System.Windows.Input.MouseEventArgs e)
		{
			ret
		}
		.method public hidebysig 
			instance void OnScrollViewerPreviewMouseLeftButtonUp(class [PresentationCore]System.Windows.Input.MouseEventArgs e)
		{
			ret
		}
		.method public hidebysig 
			instance void OnScrollViewerMouseLeave()
		{
			ret
		}
		.method public hidebysig 
			instance void OnScrollViewerEscapeKeyDown()
		{
			ret
		}
		.property instance bool IsSelected()
		{
			.get instance bool System.Activities.Presentation.View.RubberBandSelector::get_IsSelected()
			.set instance void System.Activities.Presentation.View.RubberBandSelector::set_IsSelected(bool)
		}
	}
	.class private sealed ScopeComboBox
		extends [PresentationFramework]System.Windows.Controls.ComboBox
	{
		.method family virtual hidebysig 
			instance void OnInitialized(class [mscorlib]System.EventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnSelectionChanged(class [PresentationFramework]System.Windows.Controls.SelectionChangedEventArgs e)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private sealed ScopeToTooltipConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method assembly static hidebysig 
			string BuildToolTip(class System.Activities.Presentation.Model.ModelItem entry, class [PresentationFramework]System.Windows.Data.IMultiValueConverter displayNameConverter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object Convert(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private ScrollViewerPanner
		extends [mscorlib]System.Object
	{
		.class nested assembly sealed PanState
			extends [mscorlib]System.Enum
		{
			.field public rtspecialname specialname int32 value__
			.field static public literal valuetype System.Activities.Presentation.View.ScrollViewerPanner/PanState Normal = int32(0x00000000)
			.field static public literal valuetype System.Activities.Presentation.View.ScrollViewerPanner/PanState Panning = int32(0x00000002)
			.field static public literal valuetype System.Activities.Presentation.View.ScrollViewerPanner/PanState ReadyToPan = int32(0x00000001)
		}
		.method public hidebysig specialname 
			instance void .ctor(class [PresentationFramework]System.Windows.Controls.ScrollViewer scrollViewer)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationFramework]System.Windows.Controls.ScrollViewer get_ScrollViewer()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ScrollViewer(class [PresentationFramework]System.Windows.Controls.ScrollViewer 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_InPanMode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_InPanMode(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationCore]System.Windows.Input.Cursor get_Hand()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_Hand(class [PresentationCore]System.Windows.Input.Cursor 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationCore]System.Windows.Input.Cursor get_DraggingHand()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_DraggingHand(class [PresentationCore]System.Windows.Input.Cursor 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance valuetype System.Activities.Presentation.View.ScrollViewerPanner/PanState get_CurrentPanState()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_CurrentPanState(valuetype System.Activities.Presentation.View.ScrollViewerPanner/PanState 'value')
		{
			ret
		}
		.method assembly hidebysig 
			instance bool IsInScrollableArea(valuetype [WindowsBase]System.Windows.Point mousePosition)
		{
			ret
		}
		.method assembly hidebysig 
			instance void OnScrollViewerMouseDown(object sender, class [PresentationCore]System.Windows.Input.MouseButtonEventArgs e)
		{
			ret
		}
		.method assembly hidebysig 
			instance void OnLostMouseCapture(object sender, class [PresentationCore]System.Windows.Input.MouseEventArgs e)
		{
			ret
		}
		.method assembly hidebysig 
			instance void OnScrollViewerMouseMove(object sender, class [PresentationCore]System.Windows.Input.MouseEventArgs e)
		{
			ret
		}
		.method assembly hidebysig 
			instance void OnScrollViewerMouseUp(object sender, class [PresentationCore]System.Windows.Input.MouseButtonEventArgs e)
		{
			ret
		}
		.method assembly hidebysig 
			instance void OnScrollViewerKeyDown(object sender, class [PresentationCore]System.Windows.Input.KeyEventArgs e)
		{
			ret
		}
		.method assembly hidebysig 
			instance void OnScrollViewerKeyUp(object sender, class [PresentationCore]System.Windows.Input.KeyEventArgs e)
		{
			ret
		}
		.property instance valuetype System.Activities.Presentation.View.ScrollViewerPanner/PanState CurrentPanState()
		{
			.get instance valuetype System.Activities.Presentation.View.ScrollViewerPanner/PanState System.Activities.Presentation.View.ScrollViewerPanner::get_CurrentPanState()
			.set instance void System.Activities.Presentation.View.ScrollViewerPanner::set_CurrentPanState(valuetype System.Activities.Presentation.View.ScrollViewerPanner/PanState)
		}
		.property instance class [PresentationCore]System.Windows.Input.Cursor DraggingHand()
		{
			.get instance class [PresentationCore]System.Windows.Input.Cursor System.Activities.Presentation.View.ScrollViewerPanner::get_DraggingHand()
			.set instance void System.Activities.Presentation.View.ScrollViewerPanner::set_DraggingHand(class [PresentationCore]System.Windows.Input.Cursor)
		}
		.property instance class [PresentationCore]System.Windows.Input.Cursor Hand()
		{
			.get instance class [PresentationCore]System.Windows.Input.Cursor System.Activities.Presentation.View.ScrollViewerPanner::get_Hand()
			.set instance void System.Activities.Presentation.View.ScrollViewerPanner::set_Hand(class [PresentationCore]System.Windows.Input.Cursor)
		}
		.property instance bool InPanMode()
		{
			.get instance bool System.Activities.Presentation.View.ScrollViewerPanner::get_InPanMode()
			.set instance void System.Activities.Presentation.View.ScrollViewerPanner::set_InPanMode(bool)
		}
		.property instance class [PresentationFramework]System.Windows.Controls.ScrollViewer ScrollViewer()
		{
			.get instance class [PresentationFramework]System.Windows.Controls.ScrollViewer System.Activities.Presentation.View.ScrollViewerPanner::get_ScrollViewer()
			.set instance void System.Activities.Presentation.View.ScrollViewerPanner::set_ScrollViewer(class [PresentationFramework]System.Windows.Controls.ScrollViewer)
		}
	}
	.class private SearchToolTipAdorner
		extends [PresentationFramework]System.Windows.Documents.Adorner
	{
		.method public hidebysig specialname 
			instance void .ctor(class [PresentationCore]System.Windows.UIElement adornedElement, class System.Activities.Presentation.View.DesignerView designerView, string text)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnRender(class [PresentationCore]System.Windows.Media.DrawingContext drawingContext)
		{
			ret
		}
	}
	.class public Selection
		extends System.Activities.Presentation.ContextItem
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> selectedObjects)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> selectedObjects, class [mscorlib]'System.Predicate`1'<class System.Activities.Presentation.Model.ModelItem> match)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Collections.IEnumerable selectedObjects)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Collections.IEnumerable selectedObjects, class [mscorlib]'System.Predicate`1'<class System.Activities.Presentation.Model.ModelItem> match)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.Model.ModelItem[] selectedObjects)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_PrimarySelection()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> get_SelectedObjects()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_SelectionCount()
		{
			ret
		}
		.method public final virtual hidebysig specialname 
			instance class [mscorlib]System.Type get_ItemType()
		{
			ret
		}
		.method public static hidebysig 
			class System.Activities.Presentation.View.Selection Select(class System.Activities.Presentation.EditingContext context, class System.Activities.Presentation.Model.ModelItem itemToSelect)
		{
			ret
		}
		.method public static hidebysig 
			class System.Activities.Presentation.View.Selection SelectOnly(class System.Activities.Presentation.EditingContext context, class System.Activities.Presentation.Model.ModelItem itemToSelect)
		{
			ret
		}
		.method public static hidebysig 
			void Subscribe(class System.Activities.Presentation.EditingContext context, class 'System.Activities.Presentation.SubscribeContextCallback`1'<class System.Activities.Presentation.View.Selection> 'handler')
		{
			ret
		}
		.method public static hidebysig 
			class System.Activities.Presentation.View.Selection Toggle(class System.Activities.Presentation.EditingContext context, class System.Activities.Presentation.Model.ModelItem itemToToggle)
		{
			ret
		}
		.method public static hidebysig 
			class System.Activities.Presentation.View.Selection Union(class System.Activities.Presentation.EditingContext context, class System.Activities.Presentation.Model.ModelItem itemToAdd)
		{
			ret
		}
		.method assembly static hidebysig 
			bool MultipleObjectsSelected(class System.Activities.Presentation.EditingContext context)
		{
			ret
		}
		.method assembly static hidebysig 
			bool IsSelection(class System.Activities.Presentation.Model.ModelItem item)
		{
			ret
		}
		.method assembly static hidebysig 
			bool IsPrimarySelection(class System.Activities.Presentation.Model.ModelItem item)
		{
			ret
		}
		.method public static hidebysig 
			void Unsubscribe(class System.Activities.Presentation.EditingContext context, class 'System.Activities.Presentation.SubscribeContextCallback`1'<class System.Activities.Presentation.View.Selection> 'handler')
		{
			ret
		}
		.property instance class [mscorlib]System.Type ItemType()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.View.Selection::get_ItemType()
		}
		.property instance class System.Activities.Presentation.Model.ModelItem PrimarySelection()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.View.Selection::get_PrimarySelection()
		}
		.property instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> SelectedObjects()
		{
			.get instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> System.Activities.Presentation.View.Selection::get_SelectedObjects()
		}
		.property instance int32 SelectionCount()
		{
			.get instance int32 System.Activities.Presentation.View.Selection::get_SelectionCount()
		}
	}
	.class public sealed ShellBarItemVisibility
		extends [mscorlib]System.Enum
	{
		.custom instance void [mscorlib]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Activities.Presentation.View.ShellBarItemVisibility All = int32(0xFFFFFFFF)
		.field static public literal valuetype System.Activities.Presentation.View.ShellBarItemVisibility Arguments = int32(0x00000002)
		.field static public literal valuetype System.Activities.Presentation.View.ShellBarItemVisibility Imports = int32(0x00000004)
		.field static public literal valuetype System.Activities.Presentation.View.ShellBarItemVisibility MiniMap = int32(0x00000010)
		.field static public literal valuetype System.Activities.Presentation.View.ShellBarItemVisibility None = int32(0x00000000)
		.field static public literal valuetype System.Activities.Presentation.View.ShellBarItemVisibility PanMode = int32(0x00000020)
		.field static public literal valuetype System.Activities.Presentation.View.ShellBarItemVisibility Variables = int32(0x00000001)
		.field static public literal valuetype System.Activities.Presentation.View.ShellBarItemVisibility Zoom = int32(0x00000008)
	}
	.class public sealed ShellHeaderItemsVisibility
		extends [mscorlib]System.Enum
	{
		.custom instance void [mscorlib]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Activities.Presentation.View.ShellHeaderItemsVisibility All = int32(0xFFFFFFFF)
		.field static public literal valuetype System.Activities.Presentation.View.ShellHeaderItemsVisibility Breadcrumb = int32(0x00000001)
		.field static public literal valuetype System.Activities.Presentation.View.ShellHeaderItemsVisibility CollapseAll = int32(0x00000004)
		.field static public literal valuetype System.Activities.Presentation.View.ShellHeaderItemsVisibility ExpandAll = int32(0x00000002)
		.field static public literal valuetype System.Activities.Presentation.View.ShellHeaderItemsVisibility None = int32(0x00000000)
	}
	.class private SpacerPlaceholder
		extends [PresentationFramework]System.Windows.Controls.UserControl
		implements [System.Xaml]System.Windows.Markup.IComponentConnector
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_TargetVisiable(bool 'value')
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnDrop(class [PresentationCore]System.Windows.DragEventArgs e)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void InitializeComponent()
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Windows.Markup.IComponentConnector.Connect(int32 connectionId, object target)
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.override [System.Xaml]System.Windows.Markup.IComponentConnector::Connect
			ret
		}
		.field assembly class [PresentationFramework]System.Windows.Shapes.Rectangle dropTarget
		.property instance bool TargetVisiable()
		{
			.set instance void System.Activities.Presentation.View.SpacerPlaceholder::set_TargetVisiable(bool)
		}
	}
	.class private sealed TypeBrowser
		extends System.Activities.Presentation.DialogWindow
		implements [System.Xaml]System.Windows.Markup.IComponentConnector, [PresentationFramework]System.Windows.Markup.IStyleConnector
	{
		.class nested assembly AssemblyNode
			extends System.Activities.Presentation.View.TypeBrowser/Node
		{
			.method public hidebysig specialname 
				instance void .ctor(class [mscorlib]System.Reflection.Assembly 'assembly', bool isLocal, class [mscorlib]'System.Func`2'<class [mscorlib]System.Type,bool> 'filter', class System.Activities.Presentation.EditingContext context)
			{
				ret
			}
			.method public hidebysig specialname 
				instance string get_DisplayName()
			{
				ret
			}
			.method public hidebysig specialname 
				instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.View.TypeBrowser/NamespaceNode> get_Namespaces()
			{
				ret
			}
			.method public hidebysig specialname 
				instance string get_Data()
			{
				ret
			}
			.method public virtual hidebysig 
				instance string ToString()
			{
				ret
			}
			.property instance string Data()
			{
				.get instance string System.Activities.Presentation.View.TypeBrowser/AssemblyNode::get_Data()
			}
			.property instance string DisplayName()
			{
				.get instance string System.Activities.Presentation.View.TypeBrowser/AssemblyNode::get_DisplayName()
			}
			.property instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.View.TypeBrowser/NamespaceNode> Namespaces()
			{
				.get instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.View.TypeBrowser/NamespaceNode> System.Activities.Presentation.View.TypeBrowser/AssemblyNode::get_Namespaces()
			}
		}
		.class nested assembly NamespaceNode
			extends System.Activities.Presentation.View.TypeBrowser/Node
		{
			.method public hidebysig specialname 
				instance string get_DisplayName()
			{
				ret
			}
			.method public hidebysig specialname 
				instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.View.TypeBrowser/TypeNode> get_Types()
			{
				ret
			}
			.method public hidebysig specialname 
				instance string get_Data()
			{
				ret
			}
			.method public hidebysig specialname 
				instance void .ctor(string name)
			{
				ret
			}
			.property instance string Data()
			{
				.get instance string System.Activities.Presentation.View.TypeBrowser/NamespaceNode::get_Data()
			}
			.property instance string DisplayName()
			{
				.get instance string System.Activities.Presentation.View.TypeBrowser/NamespaceNode::get_DisplayName()
			}
			.property instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.View.TypeBrowser/TypeNode> Types()
			{
				.get instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.View.TypeBrowser/TypeNode> System.Activities.Presentation.View.TypeBrowser/NamespaceNode::get_Types()
			}
		}
		.class nested assembly Node
			extends [mscorlib]System.Object
			implements [System]System.ComponentModel.INotifyPropertyChanged
		{
			.method public final virtual hidebysig newslot specialname 
				instance void add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
			{
				.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
				ret
			}
			.method public final virtual hidebysig newslot specialname 
				instance void remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
			{
				.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
				ret
			}
			.method family hidebysig specialname 
				instance void .ctor()
			{
				ret
			}
			.method family hidebysig 
				instance void Notify(string 'property')
			{
				ret
			}
			.method public hidebysig specialname 
				instance bool get_IsExpanded()
			{
				ret
			}
			.method public hidebysig specialname 
				instance void set_IsExpanded(bool 'value')
			{
				ret
			}
			.method public hidebysig specialname 
				instance bool get_IsSelected()
			{
				ret
			}
			.method public hidebysig specialname 
				instance void set_IsSelected(bool 'value')
			{
				ret
			}
			.method public hidebysig specialname 
				instance valuetype [PresentationCore]System.Windows.Visibility get_Visibility()
			{
				ret
			}
			.method public hidebysig specialname 
				instance void set_Visibility(valuetype [PresentationCore]System.Windows.Visibility 'value')
			{
				ret
			}
			.method public hidebysig specialname 
				instance object get_Tag()
			{
				.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
				ret
			}
			.method public hidebysig specialname 
				instance void set_Tag(object 'value')
			{
				.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
				ret
			}
			.event [System]System.ComponentModel.PropertyChangedEventHandler PropertyChanged
			{
				.addon instance void System.Activities.Presentation.View.TypeBrowser/Node::add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
				.removeon instance void System.Activities.Presentation.View.TypeBrowser/Node::remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
			}
			.property instance bool IsExpanded()
			{
				.get instance bool System.Activities.Presentation.View.TypeBrowser/Node::get_IsExpanded()
				.set instance void System.Activities.Presentation.View.TypeBrowser/Node::set_IsExpanded(bool)
			}
			.property instance bool IsSelected()
			{
				.get instance bool System.Activities.Presentation.View.TypeBrowser/Node::get_IsSelected()
				.set instance void System.Activities.Presentation.View.TypeBrowser/Node::set_IsSelected(bool)
			}
			.property instance object Tag()
			{
				.get instance object System.Activities.Presentation.View.TypeBrowser/Node::get_Tag()
				.set instance void System.Activities.Presentation.View.TypeBrowser/Node::set_Tag(object)
			}
			.property instance valuetype [PresentationCore]System.Windows.Visibility Visibility()
			{
				.get instance valuetype [PresentationCore]System.Windows.Visibility System.Activities.Presentation.View.TypeBrowser/Node::get_Visibility()
				.set instance void System.Activities.Presentation.View.TypeBrowser/Node::set_Visibility(valuetype [PresentationCore]System.Windows.Visibility)
			}
		}
		.class nested assembly TypeNode
			extends System.Activities.Presentation.View.TypeBrowser/Node
		{
			.method public hidebysig specialname 
				instance string get_DisplayName()
			{
				ret
			}
			.method public hidebysig specialname 
				instance string get_FullName()
			{
				ret
			}
			.method public hidebysig specialname 
				instance class [mscorlib]System.Type get_Data()
			{
				ret
			}
			.method public hidebysig specialname 
				instance void .ctor(class [mscorlib]System.Type 'type')
			{
				ret
			}
			.property instance class [mscorlib]System.Type Data()
			{
				.get instance class [mscorlib]System.Type System.Activities.Presentation.View.TypeBrowser/TypeNode::get_Data()
			}
			.property instance string DisplayName()
			{
				.get instance string System.Activities.Presentation.View.TypeBrowser/TypeNode::get_DisplayName()
			}
			.property instance string FullName()
			{
				.get instance string System.Activities.Presentation.View.TypeBrowser/TypeNode::get_FullName()
			}
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.Hosting.AssemblyContextControlItem assemblyContext, class System.Activities.Presentation.EditingContext context, class [mscorlib]'System.Func`2'<class [mscorlib]System.Type,bool> 'filter')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Type get_ConcreteType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.View.TypeBrowser/AssemblyNode> get_LocalAssemblies()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.View.TypeBrowser/AssemblyNode> get_ReferenceAssemblies()
		{
			ret
		}
		.method public hidebysig 
			instance valuetype [mscorlib]'System.Nullable`1'<bool> ShowDialog(class [WindowsBase]System.Windows.DependencyObject owner)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnKeyDown(class [PresentationCore]System.Windows.Input.KeyEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance class [PresentationCore]System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void InitializeComponent()
		{
			ret
		}
		.method assembly hidebysig 
			instance class [mscorlib]System.Delegate _CreateDelegate(class [mscorlib]System.Type delegateType, string 'handler')
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Windows.Markup.IComponentConnector.Connect(int32 connectionId, object target)
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.override [System.Xaml]System.Windows.Markup.IComponentConnector::Connect
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Windows.Markup.IStyleConnector.Connect(int32 connectionId, object target)
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.override [PresentationFramework]System.Windows.Markup.IStyleConnector::Connect
			ret
		}
		.field assembly class [PresentationFramework]System.Windows.Controls.TreeViewItem LocalAssembly
		.field assembly class [PresentationFramework]System.Windows.Controls.TreeViewItem ReferencedAssemblies
		.field assembly class System.Activities.Presentation.View.TypeBrowser controlRoot
		.field assembly class [PresentationFramework]System.Windows.Controls.DockPanel dockPanelName
		.field assembly class [PresentationFramework]System.Windows.Controls.StackPanel genericPanel
		.field assembly class [PresentationFramework]System.Windows.Controls.ItemsControl myItemsControl
		.field assembly class [PresentationFramework]System.Windows.Controls.TextBlock textBlock1
		.field assembly class [PresentationFramework]System.Windows.Controls.TextBlock textBox1
		.field assembly class [PresentationFramework]System.Windows.Controls.TextBox typeEntryTextBox
		.field assembly class [PresentationFramework]System.Windows.Controls.TreeView typesTreeView
		.property instance class [mscorlib]System.Type ConcreteType()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.View.TypeBrowser::get_ConcreteType()
		}
		.property instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.View.TypeBrowser/AssemblyNode> LocalAssemblies()
		{
			.get instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.View.TypeBrowser/AssemblyNode> System.Activities.Presentation.View.TypeBrowser::get_LocalAssemblies()
		}
		.property instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.View.TypeBrowser/AssemblyNode> ReferenceAssemblies()
		{
			.get instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.View.TypeBrowser/AssemblyNode> System.Activities.Presentation.View.TypeBrowser::get_ReferenceAssemblies()
		}
	}
	.class private TypeBrowserAutomationPeer
		extends [PresentationCore]System.Windows.Automation.Peers.UIElementAutomationPeer
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.View.TypeBrowser owner)
		{
			ret
		}
		.method family virtual hidebysig 
			instance valuetype [PresentationCore]System.Windows.Automation.Peers.AutomationControlType GetAutomationControlTypeCore()
		{
			ret
		}
		.method family virtual hidebysig 
			instance string GetNameCore()
		{
			ret
		}
	}
	.class private TypeKeyValue
		extends [mscorlib]System.Object
		implements [System]System.ComponentModel.INotifyPropertyChanged
	{
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type genericType, class [mscorlib]'System.Action`1'<class System.Activities.Presentation.View.TypeKeyValue> typeChangedCallBack)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_ErrorText()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ErrorText(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Type get_GenericType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_GenericType(class [mscorlib]System.Type 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsSelected()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsSelected(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Func`2'<class [mscorlib]System.Type,bool> get_Filter()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Filter(class [mscorlib]'System.Func`2'<class [mscorlib]System.Type,bool> 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class [mscorlib]System.Type> get_MostRecentlyUsedTypes()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MostRecentlyUsedTypes(class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class [mscorlib]System.Type> 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_HintText()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_HintText(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_BrowseTypeDirectly()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BrowseTypeDirectly(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsValid()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsValid(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.View.TypeKeyValue> get_SubTypes()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Type get_TargetType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_TargetType(class [mscorlib]System.Type 'value')
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.Type GetConcreteType()
		{
			ret
		}
		.event [System]System.ComponentModel.PropertyChangedEventHandler PropertyChanged
		{
			.addon instance void System.Activities.Presentation.View.TypeKeyValue::add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
			.removeon instance void System.Activities.Presentation.View.TypeKeyValue::remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
		}
		.property instance bool BrowseTypeDirectly()
		{
			.get instance bool System.Activities.Presentation.View.TypeKeyValue::get_BrowseTypeDirectly()
			.set instance void System.Activities.Presentation.View.TypeKeyValue::set_BrowseTypeDirectly(bool)
		}
		.property instance string ErrorText()
		{
			.get instance string System.Activities.Presentation.View.TypeKeyValue::get_ErrorText()
			.set instance void System.Activities.Presentation.View.TypeKeyValue::set_ErrorText(string)
		}
		.property instance class [mscorlib]'System.Func`2'<class [mscorlib]System.Type,bool> Filter()
		{
			.get instance class [mscorlib]'System.Func`2'<class [mscorlib]System.Type,bool> System.Activities.Presentation.View.TypeKeyValue::get_Filter()
			.set instance void System.Activities.Presentation.View.TypeKeyValue::set_Filter(class [mscorlib]'System.Func`2'<class [mscorlib]System.Type,bool>)
		}
		.property instance class [mscorlib]System.Type GenericType()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.View.TypeKeyValue::get_GenericType()
			.set instance void System.Activities.Presentation.View.TypeKeyValue::set_GenericType(class [mscorlib]System.Type)
		}
		.property instance string HintText()
		{
			.get instance string System.Activities.Presentation.View.TypeKeyValue::get_HintText()
			.set instance void System.Activities.Presentation.View.TypeKeyValue::set_HintText(string)
		}
		.property instance bool IsSelected()
		{
			.get instance bool System.Activities.Presentation.View.TypeKeyValue::get_IsSelected()
			.set instance void System.Activities.Presentation.View.TypeKeyValue::set_IsSelected(bool)
		}
		.property instance bool IsValid()
		{
			.get instance bool System.Activities.Presentation.View.TypeKeyValue::get_IsValid()
			.set instance void System.Activities.Presentation.View.TypeKeyValue::set_IsValid(bool)
		}
		.property instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class [mscorlib]System.Type> MostRecentlyUsedTypes()
		{
			.get instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class [mscorlib]System.Type> System.Activities.Presentation.View.TypeKeyValue::get_MostRecentlyUsedTypes()
			.set instance void System.Activities.Presentation.View.TypeKeyValue::set_MostRecentlyUsedTypes(class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class [mscorlib]System.Type>)
		}
		.property instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.View.TypeKeyValue> SubTypes()
		{
			.get instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.View.TypeKeyValue> System.Activities.Presentation.View.TypeKeyValue::get_SubTypes()
		}
		.property instance class [mscorlib]System.Type TargetType()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.View.TypeKeyValue::get_TargetType()
			.set instance void System.Activities.Presentation.View.TypeKeyValue::set_TargetType(class [mscorlib]System.Type)
		}
	}
	.class public sealed TypePresenter
		extends [PresentationFramework]System.Windows.Controls.ContentControl
		implements [System]System.ComponentModel.INotifyPropertyChanged, [System.Xaml]System.Windows.Markup.IComponentConnector
	{
		.method assembly static hidebysig specialname 
			class [mscorlib]'System.Collections.Generic.List`1'<class [mscorlib]System.Type> get_DefaultTypes()
		{
			ret
		}
		.method public static hidebysig specialname 
			class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class [mscorlib]System.Type> get_DefaultMostRecentlyUsedTypes()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class [mscorlib]System.Type> get_MostRecentlyUsedTypes()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MostRecentlyUsedTypes(class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class [mscorlib]System.Type> 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig 
			instance void FocusOnVisibleControl()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_TypeBrowserOpened(class [PresentationCore]System.Windows.RoutedEventHandler 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_TypeBrowserOpened(class [PresentationCore]System.Windows.RoutedEventHandler 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_TypeBrowserClosed(class [PresentationCore]System.Windows.RoutedEventHandler 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_TypeBrowserClosed(class [PresentationCore]System.Windows.RoutedEventHandler 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_TypeChanged(class [PresentationCore]System.Windows.RoutedEventHandler 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_TypeChanged(class [PresentationCore]System.Windows.RoutedEventHandler 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.EditingContext get_Context()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Context(class System.Activities.Presentation.EditingContext 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_AllowNull()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_AllowNull(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Label()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Label(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Func`2'<class [mscorlib]System.Type,bool> get_Filter()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Filter(class [mscorlib]'System.Func`2'<class [mscorlib]System.Type,bool> 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_CenterActivityTypeResolverDialog()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_CenterActivityTypeResolverDialog(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_CenterTypeBrowserDialog()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_CenterTypeBrowserDialog(bool 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class System.Activities.Presentation.View.TypeWrapper get_NullTypeWrapper()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Text()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.View.TypeWrapper> get_Items()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_BrowseTypeDirectly()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BrowseTypeDirectly(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Type get_Type()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Type(class [mscorlib]System.Type 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_TypeName()
		{
			ret
		}
		.method assembly static hidebysig 
			string ResolveTypeName(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method family virtual hidebysig 
			instance class [PresentationCore]System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnMouseLeftButtonDown(class [PresentationCore]System.Windows.Input.MouseButtonEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnMouseLeftButtonUp(class [PresentationCore]System.Windows.Input.MouseButtonEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnPreviewKeyDown(class [PresentationCore]System.Windows.Input.KeyEventArgs e)
		{
			ret
		}
		.method assembly static hidebysig 
			bool IsPreviewKey(valuetype [WindowsBase]System.Windows.Input.Key key)
		{
			ret
		}
		.method assembly hidebysig 
			instance void Preview()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void InitializeComponent()
		{
			ret
		}
		.method assembly hidebysig 
			instance class [mscorlib]System.Delegate _CreateDelegate(class [mscorlib]System.Type delegateType, string 'handler')
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Windows.Markup.IComponentConnector.Connect(int32 connectionId, object target)
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.override [System.Xaml]System.Windows.Markup.IComponentConnector::Connect
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty AllowNullProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty BrowseTypeDirectlyProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty CenterActivityTypeResolverDialogProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty CenterTypeBrowserDialogProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ContextProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty FilterProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty LabelProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty MostRecentlyUsedTypesProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty TextProperty
		.field static public initonly class [PresentationCore]System.Windows.RoutedEvent TypeBrowserClosedEvent
		.field static public initonly class [PresentationCore]System.Windows.RoutedEvent TypeBrowserOpenedEvent
		.field static public initonly class [PresentationCore]System.Windows.RoutedEvent TypeChangedEvent
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty TypeProperty
		.field assembly class System.Activities.Presentation.View.TypePresenter controlRoot
		.field assembly class [PresentationFramework]System.Windows.Controls.ComboBox typeComboBox
		.field assembly class [PresentationFramework]System.Windows.Controls.TextBlock typeTextBlock
		.event [System]System.ComponentModel.PropertyChangedEventHandler PropertyChanged
		{
			.addon instance void System.Activities.Presentation.View.TypePresenter::add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
			.removeon instance void System.Activities.Presentation.View.TypePresenter::remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
		}
		.event [PresentationCore]System.Windows.RoutedEventHandler TypeBrowserClosed
		{
			.addon instance void System.Activities.Presentation.View.TypePresenter::add_TypeBrowserClosed(class [PresentationCore]System.Windows.RoutedEventHandler)
			.removeon instance void System.Activities.Presentation.View.TypePresenter::remove_TypeBrowserClosed(class [PresentationCore]System.Windows.RoutedEventHandler)
		}
		.event [PresentationCore]System.Windows.RoutedEventHandler TypeBrowserOpened
		{
			.addon instance void System.Activities.Presentation.View.TypePresenter::add_TypeBrowserOpened(class [PresentationCore]System.Windows.RoutedEventHandler)
			.removeon instance void System.Activities.Presentation.View.TypePresenter::remove_TypeBrowserOpened(class [PresentationCore]System.Windows.RoutedEventHandler)
		}
		.event [PresentationCore]System.Windows.RoutedEventHandler TypeChanged
		{
			.addon instance void System.Activities.Presentation.View.TypePresenter::add_TypeChanged(class [PresentationCore]System.Windows.RoutedEventHandler)
			.removeon instance void System.Activities.Presentation.View.TypePresenter::remove_TypeChanged(class [PresentationCore]System.Windows.RoutedEventHandler)
		}
		.property instance bool AllowNull()
		{
			.get instance bool System.Activities.Presentation.View.TypePresenter::get_AllowNull()
			.set instance void System.Activities.Presentation.View.TypePresenter::set_AllowNull(bool)
		}
		.property instance bool BrowseTypeDirectly()
		{
			.get instance bool System.Activities.Presentation.View.TypePresenter::get_BrowseTypeDirectly()
			.set instance void System.Activities.Presentation.View.TypePresenter::set_BrowseTypeDirectly(bool)
		}
		.property instance bool CenterActivityTypeResolverDialog()
		{
			.get instance bool System.Activities.Presentation.View.TypePresenter::get_CenterActivityTypeResolverDialog()
			.set instance void System.Activities.Presentation.View.TypePresenter::set_CenterActivityTypeResolverDialog(bool)
		}
		.property instance bool CenterTypeBrowserDialog()
		{
			.get instance bool System.Activities.Presentation.View.TypePresenter::get_CenterTypeBrowserDialog()
			.set instance void System.Activities.Presentation.View.TypePresenter::set_CenterTypeBrowserDialog(bool)
		}
		.property instance class System.Activities.Presentation.EditingContext Context()
		{
			.get instance class System.Activities.Presentation.EditingContext System.Activities.Presentation.View.TypePresenter::get_Context()
			.set instance void System.Activities.Presentation.View.TypePresenter::set_Context(class System.Activities.Presentation.EditingContext)
		}
		.property class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class [mscorlib]System.Type> DefaultMostRecentlyUsedTypes()
		{
			.get class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class [mscorlib]System.Type> System.Activities.Presentation.View.TypePresenter::get_DefaultMostRecentlyUsedTypes()
		}
		.property class [mscorlib]'System.Collections.Generic.List`1'<class [mscorlib]System.Type> DefaultTypes()
		{
			.get class [mscorlib]'System.Collections.Generic.List`1'<class [mscorlib]System.Type> System.Activities.Presentation.View.TypePresenter::get_DefaultTypes()
		}
		.property instance class [mscorlib]'System.Func`2'<class [mscorlib]System.Type,bool> Filter()
		{
			.get instance class [mscorlib]'System.Func`2'<class [mscorlib]System.Type,bool> System.Activities.Presentation.View.TypePresenter::get_Filter()
			.set instance void System.Activities.Presentation.View.TypePresenter::set_Filter(class [mscorlib]'System.Func`2'<class [mscorlib]System.Type,bool>)
		}
		.property instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.View.TypeWrapper> Items()
		{
			.get instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.View.TypeWrapper> System.Activities.Presentation.View.TypePresenter::get_Items()
		}
		.property instance string Label()
		{
			.get instance string System.Activities.Presentation.View.TypePresenter::get_Label()
			.set instance void System.Activities.Presentation.View.TypePresenter::set_Label(string)
		}
		.property instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class [mscorlib]System.Type> MostRecentlyUsedTypes()
		{
			.get instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class [mscorlib]System.Type> System.Activities.Presentation.View.TypePresenter::get_MostRecentlyUsedTypes()
			.set instance void System.Activities.Presentation.View.TypePresenter::set_MostRecentlyUsedTypes(class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class [mscorlib]System.Type>)
		}
		.property instance class System.Activities.Presentation.View.TypeWrapper NullTypeWrapper()
		{
			.get instance class System.Activities.Presentation.View.TypeWrapper System.Activities.Presentation.View.TypePresenter::get_NullTypeWrapper()
		}
		.property instance string Text()
		{
			.get instance string System.Activities.Presentation.View.TypePresenter::get_Text()
		}
		.property instance class [mscorlib]System.Type Type()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.View.TypePresenter::get_Type()
			.set instance void System.Activities.Presentation.View.TypePresenter::set_Type(class [mscorlib]System.Type)
		}
		.property instance string TypeName()
		{
			.get instance string System.Activities.Presentation.View.TypePresenter::get_TypeName()
		}
	}
	.class public TypeResolvingOptions
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class [mscorlib]System.Type> defaultTypes)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Func`2'<class [mscorlib]System.Type,bool> get_Filter()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_Filter(class [mscorlib]'System.Func`2'<class [mscorlib]System.Type,bool> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class [mscorlib]System.Type> get_MostRecentlyUsedTypes()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_MostRecentlyUsedTypes(class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class [mscorlib]System.Type> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.IDictionary`2'<string,string> get_HintTextMap()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_BrowseTypeDirectly()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_BrowseTypeDirectly(bool 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly static hidebysig 
			class System.Activities.Presentation.View.TypeResolvingOptions Merge(class System.Activities.Presentation.View.TypeResolvingOptions lhs, class System.Activities.Presentation.View.TypeResolvingOptions rhs)
		{
			ret
		}
		.property instance bool BrowseTypeDirectly()
		{
			.get instance bool System.Activities.Presentation.View.TypeResolvingOptions::get_BrowseTypeDirectly()
			.set instance void System.Activities.Presentation.View.TypeResolvingOptions::set_BrowseTypeDirectly(bool)
		}
		.property instance class [mscorlib]'System.Func`2'<class [mscorlib]System.Type,bool> Filter()
		{
			.get instance class [mscorlib]'System.Func`2'<class [mscorlib]System.Type,bool> System.Activities.Presentation.View.TypeResolvingOptions::get_Filter()
			.set instance void System.Activities.Presentation.View.TypeResolvingOptions::set_Filter(class [mscorlib]'System.Func`2'<class [mscorlib]System.Type,bool>)
		}
		.property instance class [mscorlib]'System.Collections.Generic.IDictionary`2'<string,string> HintTextMap()
		{
			.get instance class [mscorlib]'System.Collections.Generic.IDictionary`2'<string,string> System.Activities.Presentation.View.TypeResolvingOptions::get_HintTextMap()
		}
		.property instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class [mscorlib]System.Type> MostRecentlyUsedTypes()
		{
			.get instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class [mscorlib]System.Type> System.Activities.Presentation.View.TypeResolvingOptions::get_MostRecentlyUsedTypes()
			.set instance void System.Activities.Presentation.View.TypeResolvingOptions::set_MostRecentlyUsedTypes(class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class [mscorlib]System.Type>)
		}
	}
	.class private sealed TypeToArgumentTypeConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private sealed TypeToPromptTextConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method assembly static hidebysig 
			string GetPromptText(object 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private TypeToStringValueConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed TypeWrapper
		extends [mscorlib]System.Object
	{
		.method assembly hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void .ctor(string text, string tag, class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_DisplayName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsTypeDefinition()
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_Tag()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Type get_Type()
		{
			ret
		}
		.method public virtual hidebysig 
			instance string ToString()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object obj)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.property instance string DisplayName()
		{
			.get instance string System.Activities.Presentation.View.TypeWrapper::get_DisplayName()
		}
		.property instance bool IsTypeDefinition()
		{
			.get instance bool System.Activities.Presentation.View.TypeWrapper::get_IsTypeDefinition()
		}
		.property instance object Tag()
		{
			.get instance object System.Activities.Presentation.View.TypeWrapper::get_Tag()
		}
		.property instance class [mscorlib]System.Type Type()
		{
			.get instance class [mscorlib]System.Type System.Activities.Presentation.View.TypeWrapper::get_Type()
		}
	}
	.class private sealed TypeWrapperConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method assembly hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.View.TypePresenter typePresenter)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object Convert(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
	}
	.class private VBIdentiferDesignerAutomationPeer
		extends [PresentationCore]System.Windows.Automation.Peers.UIElementAutomationPeer
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.View.VBIdentifierDesigner owner)
		{
			ret
		}
		.method family virtual hidebysig 
			instance string GetItemStatusCore()
		{
			ret
		}
	}
	.class private VBIdentifierDesigner
		extends [PresentationFramework]System.Windows.Controls.UserControl
		implements [System.Xaml]System.Windows.Markup.IComponentConnector, [PresentationFramework]System.Windows.Markup.IStyleConnector
	{
		.method public hidebysig specialname 
			instance void add_TextBoxPropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void remove_TextBoxPropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.View.VBIdentifierName get_Identifier()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Identifier(class System.Activities.Presentation.View.VBIdentifierName 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_NameString()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_NameString(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsReadOnly()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsReadOnly(bool 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class [PresentationFramework]System.Windows.Controls.TextBox get_IdentifierTextBox()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_IdentifierTextBox(class [PresentationFramework]System.Windows.Controls.TextBox 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family virtual hidebysig 
			instance class [PresentationCore]System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void InitializeComponent()
		{
			ret
		}
		.method assembly hidebysig 
			instance class [mscorlib]System.Delegate _CreateDelegate(class [mscorlib]System.Type delegateType, string 'handler')
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Windows.Markup.IComponentConnector.Connect(int32 connectionId, object target)
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.override [System.Xaml]System.Windows.Markup.IComponentConnector::Connect
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Windows.Markup.IStyleConnector.Connect(int32 connectionId, object target)
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.override [PresentationFramework]System.Windows.Markup.IStyleConnector::Connect
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty IdentifierProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty IsReadOnlyProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty NameStringProperty
		.field assembly class System.Activities.Presentation.View.VBIdentifierDesigner vbIdentifierDesigner
		.event [System]System.ComponentModel.PropertyChangedEventHandler TextBoxPropertyChanged
		{
			.addon instance void System.Activities.Presentation.View.VBIdentifierDesigner::add_TextBoxPropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
			.removeon instance void System.Activities.Presentation.View.VBIdentifierDesigner::remove_TextBoxPropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
		}
		.property instance class System.Activities.Presentation.View.VBIdentifierName Identifier()
		{
			.get instance class System.Activities.Presentation.View.VBIdentifierName System.Activities.Presentation.View.VBIdentifierDesigner::get_Identifier()
			.set instance void System.Activities.Presentation.View.VBIdentifierDesigner::set_Identifier(class System.Activities.Presentation.View.VBIdentifierName)
		}
		.property instance class [PresentationFramework]System.Windows.Controls.TextBox IdentifierTextBox()
		{
			.get instance class [PresentationFramework]System.Windows.Controls.TextBox System.Activities.Presentation.View.VBIdentifierDesigner::get_IdentifierTextBox()
			.set instance void System.Activities.Presentation.View.VBIdentifierDesigner::set_IdentifierTextBox(class [PresentationFramework]System.Windows.Controls.TextBox)
		}
		.property instance bool IsReadOnly()
		{
			.get instance bool System.Activities.Presentation.View.VBIdentifierDesigner::get_IsReadOnly()
			.set instance void System.Activities.Presentation.View.VBIdentifierDesigner::set_IsReadOnly(bool)
		}
		.property instance string NameString()
		{
			.get instance string System.Activities.Presentation.View.VBIdentifierDesigner::get_NameString()
			.set instance void System.Activities.Presentation.View.VBIdentifierDesigner::set_NameString(string)
		}
	}
	.class private VBIdentifierName
		extends [WindowsBase]System.Windows.DependencyObject
	{
		.method public hidebysig specialname 
			instance string get_ErrorMessage()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ErrorMessage(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsValid()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsValid(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_IdentifierName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IdentifierName(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_CheckAgainstXaml()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(bool checkAgainstXaml)
		{
			ret
		}
		.method assembly static hidebysig 
			bool IsValidXamlName(string name)
		{
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ErrorMessageProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty IdentifierNameProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty IsValidProperty
		.property instance bool CheckAgainstXaml()
		{
			.get instance bool System.Activities.Presentation.View.VBIdentifierName::get_CheckAgainstXaml()
		}
		.property instance string ErrorMessage()
		{
			.get instance string System.Activities.Presentation.View.VBIdentifierName::get_ErrorMessage()
			.set instance void System.Activities.Presentation.View.VBIdentifierName::set_ErrorMessage(string)
		}
		.property instance string IdentifierName()
		{
			.get instance string System.Activities.Presentation.View.VBIdentifierName::get_IdentifierName()
			.set instance void System.Activities.Presentation.View.VBIdentifierName::set_IdentifierName(string)
		}
		.property instance bool IsValid()
		{
			.get instance bool System.Activities.Presentation.View.VBIdentifierName::get_IsValid()
			.set instance void System.Activities.Presentation.View.VBIdentifierName::set_IsValid(bool)
		}
	}
	.class private sealed ValidationErrorMessageConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IMultiValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object[] values, class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object[] ConvertBack(object 'value', class [mscorlib]System.Type[] targetTypes, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private sealed ValidationStateToErrorConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IMultiValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object[] values, class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object[] ConvertBack(object 'value', class [mscorlib]System.Type[] targetTypes, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private VariableDesigner
		extends [PresentationFramework]System.Windows.Controls.ContentControl
		implements [System.Xaml]System.Windows.Markup.IComponentConnector, [PresentationFramework]System.Windows.Markup.IStyleConnector
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_VariableCollectionChanged(class [PresentationCore]System.Windows.RoutedEventHandler 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_VariableCollectionChanged(class [PresentationCore]System.Windows.RoutedEventHandler 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.EditingContext get_Context()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Context(class System.Activities.Presentation.EditingContext 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItemCollection get_CurrentVariableScope()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.ModelItem> get_ScopesList()
		{
			ret
		}
		.method public hidebysig 
			instance bool CreateNewVariableWrapper()
		{
			ret
		}
		.method assembly hidebysig 
			instance void ChangeVariableType(class System.Activities.Presentation.View.DesignTimeVariable oldVariableWrapper, class [System.Activities]System.Activities.Variable newVariable)
		{
			ret
		}
		.method assembly hidebysig 
			instance void NotifyVariableScopeChanged(class System.Activities.Presentation.View.DesignTimeVariable variable)
		{
			ret
		}
		.method assembly hidebysig 
			instance void CheckCaseInsensitiveDuplicates(class System.Activities.Presentation.View.VBIdentifierName identifierName, string newName)
		{
			ret
		}
		.method assembly hidebysig 
			instance void NotifyVariableNameChanged(class System.Activities.Presentation.View.VBIdentifierName identifierName, string newName, string oldName)
		{
			ret
		}
		.method assembly hidebysig 
			instance void UpdateTypeDesigner(class System.Activities.Presentation.View.DesignTimeVariable variable)
		{
			ret
		}
		.method assembly hidebysig 
			instance void SelectVariable(class System.Activities.Presentation.Model.ModelItem variable)
		{
			ret
		}
		.method assembly hidebysig 
			instance void NotifyAnnotationTextChanged()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnContextMenuOpening(class [PresentationFramework]System.Windows.Controls.ContextMenuEventArgs e)
		{
			ret
		}
		.method family hidebysig 
			instance void OnDataGridCellGotFocus(object sender, class [PresentationCore]System.Windows.RoutedEventArgs e)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void InitializeComponent()
		{
			ret
		}
		.method assembly hidebysig 
			instance class [mscorlib]System.Delegate _CreateDelegate(class [mscorlib]System.Type delegateType, string 'handler')
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Windows.Markup.IComponentConnector.Connect(int32 connectionId, object target)
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.override [System.Xaml]System.Windows.Markup.IComponentConnector::Connect
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Windows.Markup.IStyleConnector.Connect(int32 connectionId, object target)
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.override [PresentationFramework]System.Windows.Markup.IStyleConnector::Connect
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ContextProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty CurrentVariableScopeProperty
		.field static public initonly class [PresentationCore]System.Windows.RoutedEvent VariableCollectionChangedEvent
		.field assembly class [PresentationFramework]System.Windows.Controls.DataGrid variableDataGrid
		.field assembly class System.Activities.Presentation.View.VariableDesigner variableDesigner
		.event [PresentationCore]System.Windows.RoutedEventHandler VariableCollectionChanged
		{
			.addon instance void System.Activities.Presentation.View.VariableDesigner::add_VariableCollectionChanged(class [PresentationCore]System.Windows.RoutedEventHandler)
			.removeon instance void System.Activities.Presentation.View.VariableDesigner::remove_VariableCollectionChanged(class [PresentationCore]System.Windows.RoutedEventHandler)
		}
		.property instance class System.Activities.Presentation.EditingContext Context()
		{
			.get instance class System.Activities.Presentation.EditingContext System.Activities.Presentation.View.VariableDesigner::get_Context()
			.set instance void System.Activities.Presentation.View.VariableDesigner::set_Context(class System.Activities.Presentation.EditingContext)
		}
		.property instance class System.Activities.Presentation.Model.ModelItemCollection CurrentVariableScope()
		{
			.get instance class System.Activities.Presentation.Model.ModelItemCollection System.Activities.Presentation.View.VariableDesigner::get_CurrentVariableScope()
		}
		.property instance class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.ModelItem> ScopesList()
		{
			.get instance class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.ModelItem> System.Activities.Presentation.View.VariableDesigner::get_ScopesList()
		}
	}
	.class private abstract sealed VariableHelper
		extends [mscorlib]System.Object
	{
		.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
		.method assembly static hidebysig 
			class System.Activities.Presentation.Model.ModelItemCollection GetVariableCollection(class System.Activities.Presentation.Model.ModelItem element)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
		.method assembly static hidebysig 
			class System.Activities.Presentation.Model.ModelItem GetVariableScopeElement(class System.Activities.Presentation.Model.ModelItem element)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
		.method assembly static hidebysig 
			class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.ModelItem> FindDeclaredVariables(class System.Activities.Presentation.Model.ModelItem element, class [mscorlib]'System.Collections.Generic.IList`1'<class System.Activities.Presentation.Model.ModelItem> scopeList)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
		.method assembly static hidebysig 
			class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.ModelItem> FindDeclaredVariables(class System.Activities.Presentation.Model.ModelItem element)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
		.method assembly static hidebysig 
			class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.ModelItem> FindActivityDelegateArgumentsInScope(class System.Activities.Presentation.Model.ModelItem workflowElement)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
		.method assembly static hidebysig 
			class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.ModelItem> FindActivityDelegateArguments(class System.Activities.Presentation.Model.ModelItem element)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
		.method assembly static hidebysig 
			class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.ModelItem> FindVariablesInScope(class System.Activities.Presentation.Model.ModelItem element, class [mscorlib]'System.Collections.Generic.IList`1'<class System.Activities.Presentation.Model.ModelItem> scopeList)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
		.method assembly static hidebysig 
			class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.ModelItem> FindUniqueVariablesInScope(class System.Activities.Presentation.Model.ModelItem element)
		{
			ret
		}
		.method assembly static hidebysig 
			class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.ModelItem> FindVariablesInScope(class System.Activities.Presentation.Model.ModelItem element)
		{
			ret
		}
		.method assembly static hidebysig 
			bool ContainsVariable(class System.Activities.Presentation.Model.ModelItemCollection variableContainer, string variableName)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
		.method assembly static hidebysig 
			string CreateUniqueVariableName(class System.Activities.Presentation.Model.ModelItemCollection variableContainer, string namePrefix, int32 countStartValue)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
		.method assembly static hidebysig 
			class System.Activities.Presentation.Model.ModelItem FindRootVariableScope(class System.Activities.Presentation.Model.ModelItem element)
		{
			ret
		}
		.method assembly static hidebysig 
			class System.Activities.Presentation.Model.ModelItem FindCommonVariableScope(class System.Activities.Presentation.Model.ModelItem scope1, class System.Activities.Presentation.Model.ModelItem scope2)
		{
			ret
		}
	}
	.class private VersionEditor
		extends [PresentationFramework]System.Windows.Controls.UserControl
		implements System.Activities.Presentation.View.IVersionEditor, [System.Xaml]System.Windows.Markup.IComponentConnector
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public static hidebysig specialname 
			class [WindowsBase]System.Windows.DependencyProperty get_VersionProperty()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Version get_Version()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Version(class [mscorlib]System.Version 'value')
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Activities.Presentation.View.IVersionEditor.ShowErrorMessage(string message)
		{
			.override System.Activities.Presentation.View.IVersionEditor::ShowErrorMessage
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void InitializeComponent()
		{
			ret
		}
		.method assembly hidebysig 
			instance class [mscorlib]System.Delegate _CreateDelegate(class [mscorlib]System.Type delegateType, string 'handler')
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Windows.Markup.IComponentConnector.Connect(int32 connectionId, object target)
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.override [System.Xaml]System.Windows.Markup.IComponentConnector::Connect
			ret
		}
		.field assembly class System.Activities.Presentation.View.VersionEditor root
		.property instance class [mscorlib]System.Version Version()
		{
			.get instance class [mscorlib]System.Version System.Activities.Presentation.View.VersionEditor::get_Version()
			.set instance void System.Activities.Presentation.View.VersionEditor::set_Version(class [mscorlib]System.Version)
		}
		.property class [WindowsBase]System.Windows.DependencyProperty VersionProperty()
		{
			.get class [WindowsBase]System.Windows.DependencyProperty System.Activities.Presentation.View.VersionEditor::get_VersionProperty()
		}
	}
	.class private VersionEditorViewModel
		extends System.Activities.Presentation.ViewModel
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.View.IVersionEditor editor)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_VersionText()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_VersionText(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Version get_Version()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Version(class [mscorlib]System.Version 'value')
		{
			ret
		}
		.property instance class [mscorlib]System.Version Version()
		{
			.get instance class [mscorlib]System.Version System.Activities.Presentation.View.VersionEditorViewModel::get_Version()
			.set instance void System.Activities.Presentation.View.VersionEditorViewModel::set_Version(class [mscorlib]System.Version)
		}
		.property instance string VersionText()
		{
			.get instance string System.Activities.Presentation.View.VersionEditorViewModel::get_VersionText()
			.set instance void System.Activities.Presentation.View.VersionEditorViewModel::set_VersionText(string)
		}
	}
	.class public ViewCreatedEventArgs
		extends [mscorlib]System.EventArgs
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.WorkflowViewElement view)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.WorkflowViewElement get_View()
		{
			ret
		}
		.property instance class System.Activities.Presentation.WorkflowViewElement View()
		{
			.get instance class System.Activities.Presentation.WorkflowViewElement System.Activities.Presentation.View.ViewCreatedEventArgs::get_View()
		}
	}
	.class public ViewStateChangedEventArgs
		extends [mscorlib]System.EventArgs
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.Model.ModelItem modelItem, string key, object newValue, object oldValue)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_ParentModelItem()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Key()
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_NewValue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_OldValue()
		{
			ret
		}
		.property instance string Key()
		{
			.get instance string System.Activities.Presentation.View.ViewStateChangedEventArgs::get_Key()
		}
		.property instance object NewValue()
		{
			.get instance object System.Activities.Presentation.View.ViewStateChangedEventArgs::get_NewValue()
		}
		.property instance object OldValue()
		{
			.get instance object System.Activities.Presentation.View.ViewStateChangedEventArgs::get_OldValue()
		}
		.property instance class System.Activities.Presentation.Model.ModelItem ParentModelItem()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.View.ViewStateChangedEventArgs::get_ParentModelItem()
		}
	}
	.class public sealed ViewStateChangedEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object sender, class System.Activities.Presentation.View.ViewStateChangedEventArgs e)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object sender, class System.Activities.Presentation.View.ViewStateChangedEventArgs e, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public abstract ViewStateService
		extends [mscorlib]System.Object
	{
		.method public virtual hidebysig newslot abstract specialname 
			instance void add_ViewStateChanged(class System.Activities.Presentation.View.ViewStateChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void remove_ViewStateChanged(class System.Activities.Presentation.View.ViewStateChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void add_UndoableViewStateChanged(class System.Activities.Presentation.View.ViewStateChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void remove_UndoableViewStateChanged(class System.Activities.Presentation.View.ViewStateChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
		}
		.method public virtual hidebysig newslot abstract 
			instance object RetrieveViewState(class System.Activities.Presentation.Model.ModelItem modelItem, string key)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void StoreViewState(class System.Activities.Presentation.Model.ModelItem modelItem, string key, object 'value')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void StoreViewStateWithUndo(class System.Activities.Presentation.Model.ModelItem modelItem, string key, object 'value')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]'System.Collections.Generic.Dictionary`2'<string,object> RetrieveAllViewState(class System.Activities.Presentation.Model.ModelItem modelItem)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool RemoveViewState(class System.Activities.Presentation.Model.ModelItem modelItem, string key)
		{
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.event System.Activities.Presentation.View.ViewStateChangedEventHandler UndoableViewStateChanged
		{
			.addon instance void System.Activities.Presentation.View.ViewStateService::add_UndoableViewStateChanged(class System.Activities.Presentation.View.ViewStateChangedEventHandler)
			.removeon instance void System.Activities.Presentation.View.ViewStateService::remove_UndoableViewStateChanged(class System.Activities.Presentation.View.ViewStateChangedEventHandler)
		}
		.event System.Activities.Presentation.View.ViewStateChangedEventHandler ViewStateChanged
		{
			.addon instance void System.Activities.Presentation.View.ViewStateService::add_ViewStateChanged(class System.Activities.Presentation.View.ViewStateChangedEventHandler)
			.removeon instance void System.Activities.Presentation.View.ViewStateService::remove_ViewStateChanged(class System.Activities.Presentation.View.ViewStateChangedEventHandler)
		}
	}
	.class private abstract sealed ViewUtilities
		extends [mscorlib]System.Object
	{
		.method assembly static hidebysig 
			bool DoesParentAlwaysExpandChildren(class System.Activities.Presentation.Model.ModelItem modelItem, class System.Activities.Presentation.EditingContext context)
		{
			ret
		}
		.method assembly static hidebysig 
			bool DoesParentAlwaysCollapseChildren(class System.Activities.Presentation.Model.ModelItem modelItem, class System.Activities.Presentation.EditingContext context)
		{
			ret
		}
		.method assembly static hidebysig 
			bool IsViewVisible(class System.Activities.Presentation.Model.ModelItem child, class System.Activities.Presentation.Model.ModelItem root, class System.Activities.Presentation.EditingContext context)
		{
			ret
		}
		.method assembly static hidebysig 
			class System.Activities.Presentation.Model.ModelItem GetParentModelItemWithView(class System.Activities.Presentation.Model.ModelItem modelItem, class System.Activities.Presentation.EditingContext context, bool allowDrillIn)
		{
			ret
		}
		.method assembly static hidebysig 
			bool IsViewExpanded(class System.Activities.Presentation.Model.ModelItem modelItem, class System.Activities.Presentation.EditingContext context)
		{
			ret
		}
		.method assembly static hidebysig 
			bool IsBreadcrumbRoot(class System.Activities.Presentation.Model.ModelItem modelItem, class System.Activities.Presentation.EditingContext context)
		{
			ret
		}
		.method assembly static hidebysig 
			bool ShouldShowExpanded(bool isRootDesigner, bool parentAlwaysExpandChildren, bool parentAlwaysCollapseChildren, bool expandState, bool expandAll, bool collapseAll, bool pinState)
		{
			ret
		}
		.method assembly static hidebysig 
			bool ShouldShowExpanded(bool isExpanded, bool shouldExpandAll, bool shouldCollapseAll, bool isPinned)
		{
			ret
		}
		.method assembly static hidebysig 
			void MeasureView(class System.Activities.Presentation.WorkflowViewElement view, bool measureAsCollapsed)
		{
			ret
		}
		.method assembly static hidebysig 
			string GetActivityBuilderDisplayName(class System.Activities.Presentation.Model.ModelItem modelItem)
		{
			ret
		}
		.method assembly static hidebysig 
			class [PresentationCore]System.Windows.Media.GeneralTransform GetTransformToRoot(class [PresentationCore]System.Windows.Media.Visual visual)
		{
			ret
		}
	}
	.class public VirtualizedContainerService
		extends [mscorlib]System.Object
	{
		.class nested assembly VirtualizingContainer
			extends [PresentationFramework]System.Windows.Controls.Border
		{
			.method public hidebysig specialname 
				instance class System.Activities.Presentation.Model.ModelItem get_ModelItem()
			{
				ret
			}
			.method public hidebysig specialname 
				instance class System.Activities.Presentation.ICompositeView get_ICompositeView()
			{
				ret
			}
			.method public hidebysig specialname 
				instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.View.VirtualizedContainerService/VirtualizingContainer> get_ChildContainers()
			{
				ret
			}
			.method public hidebysig specialname 
				instance void .ctor(class System.Activities.Presentation.View.VirtualizedContainerService containerService, class System.Activities.Presentation.Model.ModelItem modelItem, class System.Activities.Presentation.ICompositeView sourceContainer)
			{
				ret
			}
			.method family virtual hidebysig 
				instance valuetype [WindowsBase]System.Windows.Size ArrangeOverride(valuetype [WindowsBase]System.Windows.Size arrangeBounds)
			{
				ret
			}
			.method public hidebysig specialname 
				instance bool get_IsPopulated()
			{
				ret
			}
			.method assembly hidebysig 
				instance void Populate()
			{
				ret
			}
			.property instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.View.VirtualizedContainerService/VirtualizingContainer> ChildContainers()
			{
				.get instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.View.VirtualizedContainerService/VirtualizingContainer> System.Activities.Presentation.View.VirtualizedContainerService/VirtualizingContainer::get_ChildContainers()
			}
			.property instance class System.Activities.Presentation.ICompositeView ICompositeView()
			{
				.get instance class System.Activities.Presentation.ICompositeView System.Activities.Presentation.View.VirtualizedContainerService/VirtualizingContainer::get_ICompositeView()
			}
			.property instance bool IsPopulated()
			{
				.get instance bool System.Activities.Presentation.View.VirtualizedContainerService/VirtualizingContainer::get_IsPopulated()
			}
			.property instance class System.Activities.Presentation.Model.ModelItem ModelItem()
			{
				.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.View.VirtualizedContainerService/VirtualizingContainer::get_ModelItem()
			}
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.EditingContext context)
		{
			ret
		}
		.method public static hidebysig 
			object GetHintSize(object 'instance')
		{
			ret
		}
		.method public static hidebysig 
			void SetHintSize(object 'instance', object 'value')
		{
			ret
		}
		.method assembly hidebysig 
			instance void BeginPopulateAll(class [mscorlib]System.Action onAfterPopulateAll)
		{
			ret
		}
		.method assembly hidebysig 
			instance class [PresentationFramework]System.Windows.FrameworkElement QueryContainerForItem(class System.Activities.Presentation.Model.ModelItem item)
		{
			ret
		}
		.method public hidebysig 
			instance class [PresentationCore]System.Windows.UIElement GetContainer(class System.Activities.Presentation.Model.ModelItem modelItem, class System.Activities.Presentation.ICompositeView sourceContainer)
		{
			ret
		}
		.method public hidebysig 
			instance class System.Activities.Presentation.WorkflowViewElement GetViewElement(class System.Activities.Presentation.Model.ModelItem modelItem, class System.Activities.Presentation.ICompositeView sourceContainer)
		{
			ret
		}
		.method assembly static hidebysig 
			class [PresentationCore]System.Windows.UIElement TryGetVirtualizedElement(class [PresentationCore]System.Windows.UIElement element)
		{
			ret
		}
		.field static public initonly class [System.Xaml]System.Xaml.AttachableMemberIdentifier HintSizeName
	}
	.class private sealed VisualBasicEditor
		extends System.Activities.Presentation.Expressions.TextualExpressionEditor
		implements [System.Xaml]System.Windows.Markup.IComponentConnector, [PresentationFramework]System.Windows.Markup.IStyleConnector
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnContextMenuOpening(class [PresentationFramework]System.Windows.Controls.ContextMenuEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnPropertyChanged(valuetype [WindowsBase]System.Windows.DependencyPropertyChangedEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnPreviewMouseRightButtonDown(class [PresentationCore]System.Windows.Input.MouseButtonEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance class [PresentationCore]System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnLostKeyboardFocus(class [PresentationCore]System.Windows.Input.KeyboardFocusChangedEventArgs e)
		{
			ret
		}
		.method assembly static hidebysig 
			bool ShouldGenerateExpression(string oldText, string newText)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Commit(bool isExplicitCommit)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnPreviewMouseLeftButtonDown(class [PresentationCore]System.Windows.Input.MouseButtonEventArgs e)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void BeginEdit()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool HasAggregateFocus()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Activities.Presentation.View.IExpressionEditorService get_ExpressionEditorService()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance string get_Text()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_Text(string 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance string get_ExpressionText()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_ExpressionText(string 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance valuetype System.Activities.Presentation.Validation.ValidationState get_ValidationState()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_ValidationState(valuetype System.Activities.Presentation.Validation.ValidationState 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance bool get_HasErrors()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance string get_ErrorMessage()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance valuetype System.Activities.Presentation.View.EditingState get_EditingState()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_EditingState(valuetype System.Activities.Presentation.View.EditingState 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance bool get_HasValidationError()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_HasValidationError(bool 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance string get_ValidationErrorMessage()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_ValidationErrorMessage(string 'value')
		{
			ret
		}
		.method assembly hidebysig 
			instance void GenerateExpression()
		{
			ret
		}
		.method assembly static hidebysig 
			class [System.Activities]System.Activities.ActivityWithResult CreateExpressionFromString(string expressionText, bool isLocation, class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method assembly static hidebysig 
			class [System.Activities]System.Activities.ActivityWithResult CreateExpressionFromString(class [mscorlib]System.Type 'type', string expressionText, bool isLocation, class System.Activities.Presentation.View.ParserContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool CanCommit()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void OnCompleteWordCommandCanExecute(class [PresentationCore]System.Windows.Input.CanExecuteRoutedEventArgs e)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void OnGlobalIntellisenseCommandCanExecute(class [PresentationCore]System.Windows.Input.CanExecuteRoutedEventArgs e)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void OnParameterInfoCommandCanExecute(class [PresentationCore]System.Windows.Input.CanExecuteRoutedEventArgs e)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void OnQuickInfoCommandCanExecute(class [PresentationCore]System.Windows.Input.CanExecuteRoutedEventArgs e)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void OnIncreaseFilterLevelCommandCanExecute(class [PresentationCore]System.Windows.Input.CanExecuteRoutedEventArgs e)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void OnDecreaseFilterLevelCommandCanExecute(class [PresentationCore]System.Windows.Input.CanExecuteRoutedEventArgs e)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void OnCompleteWordCommandExecute(class [PresentationCore]System.Windows.Input.ExecutedRoutedEventArgs e)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void OnGlobalIntellisenseCommandExecute(class [PresentationCore]System.Windows.Input.ExecutedRoutedEventArgs e)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void OnParameterInfoCommandExecute(class [PresentationCore]System.Windows.Input.ExecutedRoutedEventArgs e)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void OnQuickInfoCommandExecute(class [PresentationCore]System.Windows.Input.ExecutedRoutedEventArgs e)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void OnDecreaseFilterLevelCommandExecute(class [PresentationCore]System.Windows.Input.ExecutedRoutedEventArgs e)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void OnIncreaseFilterLevelCommandExecute(class [PresentationCore]System.Windows.Input.ExecutedRoutedEventArgs e)
		{
			ret
		}
		.method assembly static hidebysig 
			class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.Model.ModelItem> GetVariablesInScope(class System.Activities.Presentation.Model.ModelItem ownerActivity)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void InitializeComponent()
		{
			ret
		}
		.method assembly hidebysig 
			instance class [mscorlib]System.Delegate _CreateDelegate(class [mscorlib]System.Type delegateType, string 'handler')
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Windows.Markup.IComponentConnector.Connect(int32 connectionId, object target)
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.override [System.Xaml]System.Windows.Markup.IComponentConnector::Connect
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Windows.Markup.IStyleConnector.Connect(int32 connectionId, object target)
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.override [PresentationFramework]System.Windows.Markup.IStyleConnector::Connect
			ret
		}
		.field static public initonly class [System]System.Windows.Input.ICommand CompleteWordCommand
		.field static public initonly class [System]System.Windows.Input.ICommand DecreaseFilterLevelCommand
		.field static assembly initonly class [WindowsBase]System.Windows.DependencyProperty EditingStateProperty
		.field static assembly string ExpressionLanguageName
		.field static assembly initonly class [WindowsBase]System.Windows.DependencyProperty ExpressionTextProperty
		.field static public initonly class [System]System.Windows.Input.ICommand GlobalIntellisenseCommand
		.field static assembly initonly class [WindowsBase]System.Windows.DependencyProperty HasValidationErrorProperty
		.field static public initonly class [System]System.Windows.Input.ICommand IncreaseFilterLevelCommand
		.field static public initonly class [System]System.Windows.Input.ICommand ParameterInfoCommand
		.field static public initonly class [System]System.Windows.Input.ICommand QuickInfoCommand
		.field static assembly initonly class [WindowsBase]System.Windows.DependencyProperty TextProperty
		.field static assembly initonly class [WindowsBase]System.Windows.DependencyProperty ValidationErrorMessageProperty
		.field static assembly initonly class [WindowsBase]System.Windows.DependencyProperty ValidationStateProperty
		.property instance valuetype System.Activities.Presentation.View.EditingState EditingState()
		{
			.get instance valuetype System.Activities.Presentation.View.EditingState System.Activities.Presentation.View.VisualBasicEditor::get_EditingState()
			.set instance void System.Activities.Presentation.View.VisualBasicEditor::set_EditingState(valuetype System.Activities.Presentation.View.EditingState)
		}
		.property instance string ErrorMessage()
		{
			.get instance string System.Activities.Presentation.View.VisualBasicEditor::get_ErrorMessage()
		}
		.property instance class System.Activities.Presentation.View.IExpressionEditorService ExpressionEditorService()
		{
			.get instance class System.Activities.Presentation.View.IExpressionEditorService System.Activities.Presentation.View.VisualBasicEditor::get_ExpressionEditorService()
		}
		.property instance string ExpressionText()
		{
			.get instance string System.Activities.Presentation.View.VisualBasicEditor::get_ExpressionText()
			.set instance void System.Activities.Presentation.View.VisualBasicEditor::set_ExpressionText(string)
		}
		.property instance bool HasErrors()
		{
			.get instance bool System.Activities.Presentation.View.VisualBasicEditor::get_HasErrors()
		}
		.property instance bool HasValidationError()
		{
			.get instance bool System.Activities.Presentation.View.VisualBasicEditor::get_HasValidationError()
			.set instance void System.Activities.Presentation.View.VisualBasicEditor::set_HasValidationError(bool)
		}
		.property instance string Text()
		{
			.get instance string System.Activities.Presentation.View.VisualBasicEditor::get_Text()
			.set instance void System.Activities.Presentation.View.VisualBasicEditor::set_Text(string)
		}
		.property instance string ValidationErrorMessage()
		{
			.get instance string System.Activities.Presentation.View.VisualBasicEditor::get_ValidationErrorMessage()
			.set instance void System.Activities.Presentation.View.VisualBasicEditor::set_ValidationErrorMessage(string)
		}
		.property instance valuetype System.Activities.Presentation.Validation.ValidationState ValidationState()
		{
			.get instance valuetype System.Activities.Presentation.Validation.ValidationState System.Activities.Presentation.View.VisualBasicEditor::get_ValidationState()
			.set instance void System.Activities.Presentation.View.VisualBasicEditor::set_ValidationState(valuetype System.Activities.Presentation.Validation.ValidationState)
		}
	}
	.class private VisualBasicEditorAutomationPeer
		extends [PresentationCore]System.Windows.Automation.Peers.UIElementAutomationPeer
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.View.VisualBasicEditor owner)
		{
			ret
		}
		.method family virtual hidebysig 
			instance string GetItemStatusCore()
		{
			ret
		}
	}
	.class private VisualBasicReferenceValidationFeature
		extends System.Activities.Presentation.Feature
	{
		.method public virtual hidebysig 
			instance void Initialize(class System.Activities.Presentation.EditingContext context, class [mscorlib]System.Type modelType)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private VisualBasicValueValidationFeature
		extends System.Activities.Presentation.Feature
	{
		.method public virtual hidebysig 
			instance void Initialize(class System.Activities.Presentation.EditingContext context, class [mscorlib]System.Type modelType)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private abstract sealed WindowExtensionMethods
		extends [mscorlib]System.Object
	{
		.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
		.method public static hidebysig 
			void ShowContextHelpButton(class [PresentationFramework]System.Windows.Window window)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			void HideMinMaxButton(class [PresentationFramework]System.Windows.Window window)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			void AddWindowsHook(class [PresentationFramework]System.Windows.Window window, class [PresentationCore]System.Windows.Interop.HwndSourceHook wmHandler)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			void RemoveWindowsHook(class [PresentationFramework]System.Windows.Window window, class [PresentationCore]System.Windows.Interop.HwndSourceHook wmHandler)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			void HideIcon(class [PresentationFramework]System.Windows.Window window)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
	}
	.class private WorkflowViewManager
		extends System.Activities.Presentation.Documents.ViewManager
	{
		.method public virtual hidebysig specialname 
			instance class [PresentationCore]System.Windows.Media.Visual get_View()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Initialize(class System.Activities.Presentation.EditingContext context)
		{
			ret
		}
		.method assembly static hidebysig 
			string GetF1HelpTypeKeyword(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class [PresentationCore]System.Windows.Media.Visual View()
		{
			.get instance class [PresentationCore]System.Windows.Media.Visual System.Activities.Presentation.View.WorkflowViewManager::get_View()
		}
	}
	.class public WorkflowViewService
		extends System.Activities.Presentation.Services.ViewService
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.EditingContext context)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_ViewCreated(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.View.ViewCreatedEventArgs> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void remove_ViewCreated(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.View.ViewCreatedEventArgs> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class System.Activities.Presentation.WorkflowViewElement GetViewElement(class System.Activities.Presentation.Model.ModelItem modelItem)
		{
			ret
		}
		.method assembly static hidebysig 
			void ShowErrorInViewElement(class System.Activities.Presentation.WorkflowViewElement errorElement, string windowText, string toolTipText)
		{
			ret
		}
		.method assembly static hidebysig 
			!!0 GetAttribute<([mscorlib]System.Attribute) 'T'>(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method assembly hidebysig 
			instance class [mscorlib]System.Type GetDesignerType(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method assembly hidebysig 
			instance class [mscorlib]System.Type GetDesignerType(class [mscorlib]System.Type 'type', bool throwOnFailure)
		{
			ret
		}
		.method family hidebysig 
			instance class System.Activities.Presentation.WorkflowViewElement CreateViewElement(class System.Activities.Presentation.Model.ModelItem modelItem)
		{
			ret
		}
		.method assembly hidebysig 
			instance class System.Activities.Presentation.WorkflowViewElement CreateDetachedViewElement(class System.Activities.Presentation.Model.ModelItem modelItem)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class System.Activities.Presentation.Model.ModelItem GetModel(class [WindowsBase]System.Windows.DependencyObject view)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [WindowsBase]System.Windows.DependencyObject GetView(class System.Activities.Presentation.Model.ModelItem model)
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldAppearOnBreadCrumb(class System.Activities.Presentation.Model.ModelItem modelItem, bool checkIfCanBeMadeRoot)
		{
			ret
		}
		.event class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.View.ViewCreatedEventArgs> ViewCreated
		{
			.addon instance void System.Activities.Presentation.View.WorkflowViewService::add_ViewCreated(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.View.ViewCreatedEventArgs>)
			.removeon instance void System.Activities.Presentation.View.WorkflowViewService::remove_ViewCreated(class [mscorlib]'System.EventHandler`1'<class System.Activities.Presentation.View.ViewCreatedEventArgs>)
		}
	}
	.class public WorkflowViewStateService
		extends System.Activities.Presentation.View.ViewStateService
	{
		.class nested assembly ViewStateChange
			extends System.Activities.Presentation.Model.Change
		{
			.method public hidebysig specialname 
				instance class System.Activities.Presentation.Model.ModelItem get_Item()
			{
				.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
				ret
			}
			.method public hidebysig specialname 
				instance void set_Item(class System.Activities.Presentation.Model.ModelItem 'value')
			{
				.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
				ret
			}
			.method public hidebysig specialname 
				instance string get_Key()
			{
				.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
				ret
			}
			.method public hidebysig specialname 
				instance void set_Key(string 'value')
			{
				.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
				ret
			}
			.method public hidebysig specialname 
				instance object get_OldValue()
			{
				.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
				ret
			}
			.method public hidebysig specialname 
				instance void set_OldValue(object 'value')
			{
				.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
				ret
			}
			.method public hidebysig specialname 
				instance object get_NewValue()
			{
				.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
				ret
			}
			.method public hidebysig specialname 
				instance void set_NewValue(object 'value')
			{
				.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
				ret
			}
			.method public hidebysig specialname 
				instance void .ctor(class System.Activities.Presentation.View.WorkflowViewStateService viewStateService)
			{
				ret
			}
			.method public virtual hidebysig specialname 
				instance string get_Description()
			{
				ret
			}
			.method public virtual hidebysig 
				instance bool Apply()
			{
				ret
			}
			.method public virtual hidebysig 
				instance class System.Activities.Presentation.Model.Change GetInverse()
			{
				ret
			}
			.field family class System.Activities.Presentation.View.WorkflowViewStateService viewStateService
			.property instance string Description()
			{
				.get instance string System.Activities.Presentation.View.WorkflowViewStateService/ViewStateChange::get_Description()
			}
			.property instance class System.Activities.Presentation.Model.ModelItem Item()
			{
				.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.View.WorkflowViewStateService/ViewStateChange::get_Item()
				.set instance void System.Activities.Presentation.View.WorkflowViewStateService/ViewStateChange::set_Item(class System.Activities.Presentation.Model.ModelItem)
			}
			.property instance string Key()
			{
				.get instance string System.Activities.Presentation.View.WorkflowViewStateService/ViewStateChange::get_Key()
				.set instance void System.Activities.Presentation.View.WorkflowViewStateService/ViewStateChange::set_Key(string)
			}
			.property instance object NewValue()
			{
				.get instance object System.Activities.Presentation.View.WorkflowViewStateService/ViewStateChange::get_NewValue()
				.set instance void System.Activities.Presentation.View.WorkflowViewStateService/ViewStateChange::set_NewValue(object)
			}
			.property instance object OldValue()
			{
				.get instance object System.Activities.Presentation.View.WorkflowViewStateService/ViewStateChange::get_OldValue()
				.set instance void System.Activities.Presentation.View.WorkflowViewStateService/ViewStateChange::set_OldValue(object)
			}
		}
		.method public virtual hidebysig specialname 
			instance void add_ViewStateChanged(class System.Activities.Presentation.View.ViewStateChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public virtual hidebysig specialname 
			instance void remove_ViewStateChanged(class System.Activities.Presentation.View.ViewStateChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public virtual hidebysig specialname 
			instance void add_UndoableViewStateChanged(class System.Activities.Presentation.View.ViewStateChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public virtual hidebysig specialname 
			instance void remove_UndoableViewStateChanged(class System.Activities.Presentation.View.ViewStateChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.EditingContext context)
		{
			ret
		}
		.method public static hidebysig 
			class [mscorlib]'System.Collections.Generic.Dictionary`2'<string,object> GetViewState(object 'instance')
		{
			ret
		}
		.method public static hidebysig 
			void SetViewState(object 'instance', class [mscorlib]'System.Collections.Generic.Dictionary`2'<string,object> 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance object RetrieveViewState(class System.Activities.Presentation.Model.ModelItem modelItem, string key)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void StoreViewState(class System.Activities.Presentation.Model.ModelItem modelItem, string key, object 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool RemoveViewState(class System.Activities.Presentation.Model.ModelItem modelItem, string key)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]'System.Collections.Generic.Dictionary`2'<string,object> RetrieveAllViewState(class System.Activities.Presentation.Model.ModelItem modelItem)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void StoreViewStateWithUndo(class System.Activities.Presentation.Model.ModelItem modelItem, string key, object 'value')
		{
			ret
		}
		.field static public initonly class [System.Xaml]System.Xaml.AttachableMemberIdentifier ViewStateName
		.event System.Activities.Presentation.View.ViewStateChangedEventHandler UndoableViewStateChanged
		{
			.addon instance void System.Activities.Presentation.View.WorkflowViewStateService::add_UndoableViewStateChanged(class System.Activities.Presentation.View.ViewStateChangedEventHandler)
			.removeon instance void System.Activities.Presentation.View.WorkflowViewStateService::remove_UndoableViewStateChanged(class System.Activities.Presentation.View.ViewStateChangedEventHandler)
		}
		.event System.Activities.Presentation.View.ViewStateChangedEventHandler ViewStateChanged
		{
			.addon instance void System.Activities.Presentation.View.WorkflowViewStateService::add_ViewStateChanged(class System.Activities.Presentation.View.ViewStateChangedEventHandler)
			.removeon instance void System.Activities.Presentation.View.WorkflowViewStateService::remove_ViewStateChanged(class System.Activities.Presentation.View.ViewStateChangedEventHandler)
		}
	}
}
.namespace System.Activities.Presentation.View.OutlineView
{
	.class public sealed HidePropertyInOutlineViewAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = { int32(128) property bool Inherited = bool(true) property bool AllowMultiple = bool(false) }
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed ShowInOutlineViewAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = { int32(4) property bool Inherited = bool(true) property bool AllowMultiple = bool(false) }
		.method public hidebysig specialname 
			instance string get_PromotedProperty()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_PromotedProperty(string 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance string PromotedProperty()
		{
			.get instance string System.Activities.Presentation.View.OutlineView.ShowInOutlineViewAttribute::get_PromotedProperty()
			.set instance void System.Activities.Presentation.View.OutlineView.ShowInOutlineViewAttribute::set_PromotedProperty(string)
		}
	}
	.class public sealed ShowPropertyInOutlineViewAsSiblingAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = { int32(128) property bool Inherited = bool(true) property bool AllowMultiple = bool(false) }
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed ShowPropertyInOutlineViewAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = { int32(128) property bool Inherited = bool(true) property bool AllowMultiple = bool(false) }
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_CurrentPropertyVisible()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_CurrentPropertyVisible(bool 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance bool get_DuplicatedChildNodesVisible()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_DuplicatedChildNodesVisible(bool 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_ChildNodePrefix()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_ChildNodePrefix(string 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.property instance string ChildNodePrefix()
		{
			.get instance string System.Activities.Presentation.View.OutlineView.ShowPropertyInOutlineViewAttribute::get_ChildNodePrefix()
			.set instance void System.Activities.Presentation.View.OutlineView.ShowPropertyInOutlineViewAttribute::set_ChildNodePrefix(string)
		}
		.property instance bool CurrentPropertyVisible()
		{
			.get instance bool System.Activities.Presentation.View.OutlineView.ShowPropertyInOutlineViewAttribute::get_CurrentPropertyVisible()
			.set instance void System.Activities.Presentation.View.OutlineView.ShowPropertyInOutlineViewAttribute::set_CurrentPropertyVisible(bool)
		}
		.property instance bool DuplicatedChildNodesVisible()
		{
			.get instance bool System.Activities.Presentation.View.OutlineView.ShowPropertyInOutlineViewAttribute::get_DuplicatedChildNodesVisible()
			.set instance void System.Activities.Presentation.View.OutlineView.ShowPropertyInOutlineViewAttribute::set_DuplicatedChildNodesVisible(bool)
		}
	}
}
.namespace System.Activities.Presentation.View.TreeView
{
	.class private ChangeNotificationTracker
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelProperty get_ParentProperty()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_ParentProperty(class System.Activities.Presentation.Model.ModelProperty 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.Dictionary`2'<class System.Activities.Presentation.Model.ModelItem,class [System.Core]'System.Collections.Generic.HashSet`1'<string>> get_TrackedModelItem()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_TrackedModelItem(class [mscorlib]'System.Collections.Generic.Dictionary`2'<class System.Activities.Presentation.Model.ModelItem,class [System.Core]'System.Collections.Generic.HashSet`1'<string>> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.List`1'<class [System]System.Collections.Specialized.INotifyCollectionChanged> get_TrackedCollection()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_TrackedCollection(class [mscorlib]'System.Collections.Generic.List`1'<class [System]System.Collections.Specialized.INotifyCollectionChanged> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.View.TreeView.TreeViewItemViewModel> get_ChildViewModels()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_ChildViewModels(class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.View.TreeView.TreeViewItemViewModel> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.View.TreeView.TreeViewItemViewModel get_Parent()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.View.TreeView.TreeViewItemViewModel parent, class System.Activities.Presentation.Model.ModelProperty parentProperty)
		{
			ret
		}
		.method public hidebysig 
			instance void Add(class System.Activities.Presentation.Model.ModelItem modelItem, class System.Activities.Presentation.Model.ModelProperty 'property')
		{
			ret
		}
		.method public hidebysig 
			instance void Add(class System.Activities.Presentation.Model.ModelItem modelItem, string propertyName)
		{
			ret
		}
		.method public hidebysig 
			instance void AddCollection(class [System]System.Collections.Specialized.INotifyCollectionChanged collection)
		{
			ret
		}
		.method public hidebysig 
			instance void CleanUp()
		{
			ret
		}
		.property instance class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.View.TreeView.TreeViewItemViewModel> ChildViewModels()
		{
			.get instance class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.View.TreeView.TreeViewItemViewModel> System.Activities.Presentation.View.TreeView.ChangeNotificationTracker::get_ChildViewModels()
			.set instance void System.Activities.Presentation.View.TreeView.ChangeNotificationTracker::set_ChildViewModels(class [mscorlib]'System.Collections.Generic.List`1'<class System.Activities.Presentation.View.TreeView.TreeViewItemViewModel>)
		}
		.property instance class System.Activities.Presentation.View.TreeView.TreeViewItemViewModel Parent()
		{
			.get instance class System.Activities.Presentation.View.TreeView.TreeViewItemViewModel System.Activities.Presentation.View.TreeView.ChangeNotificationTracker::get_Parent()
		}
		.property instance class System.Activities.Presentation.Model.ModelProperty ParentProperty()
		{
			.get instance class System.Activities.Presentation.Model.ModelProperty System.Activities.Presentation.View.TreeView.ChangeNotificationTracker::get_ParentProperty()
			.set instance void System.Activities.Presentation.View.TreeView.ChangeNotificationTracker::set_ParentProperty(class System.Activities.Presentation.Model.ModelProperty)
		}
		.property instance class [mscorlib]'System.Collections.Generic.List`1'<class [System]System.Collections.Specialized.INotifyCollectionChanged> TrackedCollection()
		{
			.get instance class [mscorlib]'System.Collections.Generic.List`1'<class [System]System.Collections.Specialized.INotifyCollectionChanged> System.Activities.Presentation.View.TreeView.ChangeNotificationTracker::get_TrackedCollection()
			.set instance void System.Activities.Presentation.View.TreeView.ChangeNotificationTracker::set_TrackedCollection(class [mscorlib]'System.Collections.Generic.List`1'<class [System]System.Collections.Specialized.INotifyCollectionChanged>)
		}
		.property instance class [mscorlib]'System.Collections.Generic.Dictionary`2'<class System.Activities.Presentation.Model.ModelItem,class [System.Core]'System.Collections.Generic.HashSet`1'<string>> TrackedModelItem()
		{
			.get instance class [mscorlib]'System.Collections.Generic.Dictionary`2'<class System.Activities.Presentation.Model.ModelItem,class [System.Core]'System.Collections.Generic.HashSet`1'<string>> System.Activities.Presentation.View.TreeView.ChangeNotificationTracker::get_TrackedModelItem()
			.set instance void System.Activities.Presentation.View.TreeView.ChangeNotificationTracker::set_TrackedModelItem(class [mscorlib]'System.Collections.Generic.Dictionary`2'<class System.Activities.Presentation.Model.ModelItem,class [System.Core]'System.Collections.Generic.HashSet`1'<string>>)
		}
	}
	.class private abstract sealed DesignerTreeAutoExpandHelper
		extends [mscorlib]System.Object
	{
		.method assembly static hidebysig 
			class System.Activities.Presentation.View.TreeView.TreeViewItemViewModel Expand(class System.Activities.Presentation.View.TreeView.TreeViewItemModelItemViewModel rootTreeViewItem, class System.Activities.Presentation.Model.ModelItem modelItemToExpandTo)
		{
			ret
		}
	}
	.class private DesignerTreeView
		extends [PresentationFramework]System.Windows.Controls.TreeView
		implements [System.Xaml]System.Windows.Markup.IComponentConnector
	{
		.method assembly hidebysig specialname 
			instance bool get_IsSelectionChangeHandledByTreeView()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_IsSelectionChangeHandledByTreeView(bool 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.EditingContext get_Context()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void SetRootDesigner(class System.Activities.Presentation.Model.ModelItem modelItem)
		{
			ret
		}
		.method public hidebysig 
			instance void Initialize(class System.Activities.Presentation.EditingContext context)
		{
			ret
		}
		.method public hidebysig 
			instance void RestoreDesignerStates()
		{
			ret
		}
		.method family virtual hidebysig 
			instance class [WindowsBase]System.Windows.DependencyObject GetContainerForItemOverride()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void InitializeComponent()
		{
			ret
		}
		.method assembly hidebysig 
			instance class [mscorlib]System.Delegate _CreateDelegate(class [mscorlib]System.Type delegateType, string 'handler')
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Windows.Markup.IComponentConnector.Connect(int32 connectionId, object target)
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.override [System.Xaml]System.Windows.Markup.IComponentConnector::Connect
			ret
		}
		.property instance class System.Activities.Presentation.EditingContext Context()
		{
			.get instance class System.Activities.Presentation.EditingContext System.Activities.Presentation.View.TreeView.DesignerTreeView::get_Context()
		}
		.property instance bool IsSelectionChangeHandledByTreeView()
		{
			.get instance bool System.Activities.Presentation.View.TreeView.DesignerTreeView::get_IsSelectionChangeHandledByTreeView()
			.set instance void System.Activities.Presentation.View.TreeView.DesignerTreeView::set_IsSelectionChangeHandledByTreeView(bool)
		}
	}
	.class private DesignerTreeViewItem
		extends [PresentationFramework]System.Windows.Controls.TreeViewItem
		implements System.Activities.Presentation.View.TreeView.ITreeViewItemSelectionHandler
	{
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.View.TreeView.DesignerTreeView get_ParentTreeView()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_ParentTreeView(class System.Activities.Presentation.View.TreeView.DesignerTreeView 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method family virtual hidebysig 
			instance class [PresentationCore]System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnItemsChanged(class [System]System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
		{
			ret
		}
		.method assembly hidebysig 
			instance class [mscorlib]'System.Collections.Generic.Dictionary`2'<string,string> GetAutomationItemStatus()
		{
			ret
		}
		.method family virtual hidebysig 
			instance class [WindowsBase]System.Windows.DependencyObject GetContainerForItemOverride()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnHeaderChanged(object oldHeader, object newHeader)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnSelected(class [PresentationCore]System.Windows.RoutedEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnUnselected(class [PresentationCore]System.Windows.RoutedEventArgs e)
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Activities.Presentation.View.TreeView.ITreeViewItemSelectionHandler.Select()
		{
			.override System.Activities.Presentation.View.TreeView.ITreeViewItemSelectionHandler::Select
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Activities.Presentation.View.TreeView.ITreeViewItemSelectionHandler.Unselect()
		{
			.override System.Activities.Presentation.View.TreeView.ITreeViewItemSelectionHandler::Unselect
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class System.Activities.Presentation.View.TreeView.DesignerTreeView ParentTreeView()
		{
			.get instance class System.Activities.Presentation.View.TreeView.DesignerTreeView System.Activities.Presentation.View.TreeView.DesignerTreeViewItem::get_ParentTreeView()
			.set instance void System.Activities.Presentation.View.TreeView.DesignerTreeViewItem::set_ParentTreeView(class System.Activities.Presentation.View.TreeView.DesignerTreeView)
		}
	}
	.class private interface abstract ITreeViewItemSelectionHandler
	{
		.method public virtual hidebysig newslot abstract 
			instance void Select()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Unselect()
		{
		}
	}
	.class private sealed TreeViewItemKeyValuePairModelItemViewModel
		extends class 'System.Activities.Presentation.View.TreeView.TreeViewItemViewModel`1'<valuetype [mscorlib]'System.Collections.Generic.KeyValuePair`2'<class System.Activities.Presentation.Model.ModelItem,class System.Activities.Presentation.Model.ModelItem>>
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.View.TreeView.TreeViewItemViewModel parent, valuetype [mscorlib]'System.Collections.Generic.KeyValuePair`2'<class System.Activities.Presentation.Model.ModelItem,class System.Activities.Presentation.Model.ModelItem> 'value')
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance void LoadChildren()
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance void UpdateChildren(class System.Activities.Presentation.View.TreeView.ChangeNotificationTracker tracker, class [mscorlib]System.EventArgs e)
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance void UpdateState()
		{
			ret
		}
		.method family virtual hidebysig 
			instance class System.Activities.Presentation.EditingContext GetEditingContext()
		{
			ret
		}
	}
	.class private sealed TreeViewItemModelItemViewModel
		extends class 'System.Activities.Presentation.View.TreeView.TreeViewItemViewModel`1'<class System.Activities.Presentation.Model.ModelItem>
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.View.TreeView.TreeViewItemViewModel parent, class System.Activities.Presentation.Model.ModelItem modelItem, bool lazyLoad)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.View.TreeView.TreeViewItemViewModel parent, class System.Activities.Presentation.Model.ModelItem modelItem)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Activities.Presentation.Model.ModelItem get_VisualValue()
		{
			ret
		}
		.method assembly virtual hidebysig strict specialname 
			instance void set_VisualValue(class System.Activities.Presentation.Model.ModelItem 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance bool get_HasDesigner()
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance void LoadChildren()
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance void UpdateChildren(class System.Activities.Presentation.View.TreeView.ChangeNotificationTracker tracker, class [mscorlib]System.EventArgs e)
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance void UpdateState()
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance int32 FindInsertionIndex(class System.Activities.Presentation.View.TreeView.ChangeNotificationTracker tracker)
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance class System.Activities.Presentation.View.TreeView.ChangeNotificationTracker GetTracker(class System.Activities.Presentation.Model.ModelProperty modelProperty, bool createNew)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void CleanUpCore()
		{
			ret
		}
		.method family virtual hidebysig 
			instance class System.Activities.Presentation.EditingContext GetEditingContext()
		{
			ret
		}
		.property instance bool HasDesigner()
		{
			.get instance bool System.Activities.Presentation.View.TreeView.TreeViewItemModelItemViewModel::get_HasDesigner()
		}
		.property instance class System.Activities.Presentation.Model.ModelItem VisualValue()
		{
			.get instance class System.Activities.Presentation.Model.ModelItem System.Activities.Presentation.View.TreeView.TreeViewItemModelItemViewModel::get_VisualValue()
			.set instance void System.Activities.Presentation.View.TreeView.TreeViewItemModelItemViewModel::set_VisualValue(class System.Activities.Presentation.Model.ModelItem)
		}
	}
	.class private sealed TreeViewItemModelPropertyViewModel
		extends class 'System.Activities.Presentation.View.TreeView.TreeViewItemViewModel`1'<class System.Activities.Presentation.Model.ModelProperty>
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.View.TreeView.TreeViewItemViewModel parent, class System.Activities.Presentation.Model.ModelProperty 'property')
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance class System.Activities.Presentation.View.TreeView.ChangeNotificationTracker GetTracker(class System.Activities.Presentation.Model.ModelProperty modelProperty, bool createNew)
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance void UpdateChildren(class System.Activities.Presentation.View.TreeView.ChangeNotificationTracker tracker, class [mscorlib]System.EventArgs e)
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance void LoadChildren()
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance void UpdateState()
		{
			ret
		}
		.method family virtual hidebysig 
			instance class System.Activities.Presentation.EditingContext GetEditingContext()
		{
			ret
		}
	}
	.class private TreeViewItemViewModel
		extends [mscorlib]System.Object
		implements [System]System.ComponentModel.INotifyPropertyChanged
	{
		.class nested assembly sealed TreeViewItemState
			extends [mscorlib]System.Enum
		{
			.custom instance void [mscorlib]System.FlagsAttribute::.ctor() = { }
			.field public rtspecialname specialname int32 value__
			.field static public literal valuetype System.Activities.Presentation.View.TreeView.TreeViewItemViewModel/TreeViewItemState Default = int32(0x00000000)
			.field static public literal valuetype System.Activities.Presentation.View.TreeView.TreeViewItemViewModel/TreeViewItemState HasChildren = int32(0x00000001)
			.field static public literal valuetype System.Activities.Presentation.View.TreeView.TreeViewItemViewModel/TreeViewItemState HasSibling = int32(0x00000002)
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.View.TreeView.TreeViewItemViewModel> get_InternalChildren()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class [System]'System.Collections.ObjectModel.ReadOnlyObservableCollection`1'<class System.Activities.Presentation.View.TreeView.TreeViewItemViewModel> get_Children()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_NodePrefixText()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_NodePrefixText(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationCore]System.Windows.Media.DrawingBrush get_Icon()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Icon(class [PresentationCore]System.Windows.Media.DrawingBrush 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance bool get_IsAlive()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsExpanded()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsExpanded(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsHighlighted()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsHighlighted(bool 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance bool get_DuplicatedNodeVisible()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_DuplicatedNodeVisible(bool 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance valuetype System.Activities.Presentation.View.TreeView.TreeViewItemViewModel/TreeViewItemState get_State()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_State(valuetype System.Activities.Presentation.View.TreeView.TreeViewItemViewModel/TreeViewItemState 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance bool get_HasChildren()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance bool get_HasSibling()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Activities.Presentation.View.TreeView.TreeViewItemViewModel get_Parent()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_Parent(class System.Activities.Presentation.View.TreeView.TreeViewItemViewModel 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance class System.Activities.Presentation.View.TreeView.ITreeViewItemSelectionHandler get_TreeViewItem()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_TreeViewItem(class System.Activities.Presentation.View.TreeView.ITreeViewItemSelectionHandler 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method family hidebysig specialname 
			instance class [System.Core]'System.Collections.Generic.HashSet`1'<object> get_ChildrenValueCache()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method family hidebysig specialname 
			instance void set_ChildrenValueCache(class [System.Core]'System.Collections.Generic.HashSet`1'<object> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.Dictionary`2'<class System.Activities.Presentation.Model.ModelProperty,class System.Activities.Presentation.View.TreeView.ChangeNotificationTracker> get_Trackers()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method family hidebysig specialname 
			instance class System.Activities.Presentation.DesignerPerfEventProvider get_PerfEventProvider()
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance class System.Activities.Presentation.EditingContext GetEditingContext()
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict 
			instance object GetValue()
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict 
			instance void LoadChildren()
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict 
			instance void UpdateChildren(class System.Activities.Presentation.View.TreeView.ChangeNotificationTracker tracker, class [mscorlib]System.EventArgs e)
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict 
			instance void AddChild(class System.Activities.Presentation.View.TreeView.TreeViewItemViewModel child, class System.Activities.Presentation.Model.ModelProperty modelProperty)
		{
			ret
		}
		.method assembly static hidebysig 
			class System.Activities.Presentation.View.TreeView.TreeViewItemViewModel CreateViewModel(class System.Activities.Presentation.View.TreeView.TreeViewItemViewModel parent, object 'value')
		{
			ret
		}
		.method assembly static hidebysig 
			void AddModelItem(class System.Activities.Presentation.View.TreeView.TreeViewItemViewModel parent, class System.Activities.Presentation.Model.ModelItem item, class System.Activities.Presentation.Model.ModelProperty trackingProperty)
		{
			ret
		}
		.method assembly static hidebysig 
			void AddModelItemCollection(class System.Activities.Presentation.View.TreeView.TreeViewItemViewModel parent, class System.Activities.Presentation.Model.ModelItemCollection collection, class System.Activities.Presentation.Model.ModelProperty trackingProperty)
		{
			ret
		}
		.method assembly static hidebysig 
			void AddModelItemDictionary(class System.Activities.Presentation.View.TreeView.TreeViewItemViewModel parent, class System.Activities.Presentation.Model.ModelItemDictionary dictionary, class System.Activities.Presentation.Model.ModelProperty trackingProperty)
		{
			ret
		}
		.method assembly static hidebysig 
			void AddModelProperty(class System.Activities.Presentation.View.TreeView.TreeViewItemViewModel parent, class System.Activities.Presentation.Model.ModelItem item, class System.Activities.Presentation.Model.ModelProperty trackingProperty, class System.Activities.Presentation.Model.ModelProperty 'property')
		{
			ret
		}
		.method assembly static hidebysig 
			bool IsPromotedProperty(class System.Activities.Presentation.Model.ModelItem modelItem, class System.Activities.Presentation.Model.ModelProperty 'property')
		{
			ret
		}
		.method assembly static hidebysig 
			bool IsPromotedProperty(class System.Activities.Presentation.Model.ModelItem modelItem, string propertyName)
		{
			ret
		}
		.method assembly static hidebysig 
			void AddChild(class System.Activities.Presentation.View.TreeView.TreeViewItemViewModel parent, class System.Activities.Presentation.Model.ModelItem item, object 'value', bool duplicatedNodeVisible, string childNodePrefix, class System.Activities.Presentation.Model.ModelProperty trackingProperty)
		{
			ret
		}
		.method assembly hidebysig 
			instance class System.Activities.Presentation.View.TreeView.ChangeNotificationTracker GetTracker(class System.Activities.Presentation.Model.ModelProperty modelProperty)
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict 
			instance class System.Activities.Presentation.View.TreeView.ChangeNotificationTracker GetTracker(class System.Activities.Presentation.Model.ModelProperty modelProperty, bool createNew)
		{
			ret
		}
		.method assembly hidebysig 
			instance class System.Activities.Presentation.View.TreeView.ChangeNotificationTracker GetTracker(class System.Activities.Presentation.View.TreeView.TreeViewItemViewModel child)
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict 
			instance int32 FindInsertionIndex(class System.Activities.Presentation.View.TreeView.ChangeNotificationTracker tracker)
		{
			ret
		}
		.method assembly hidebysig 
			instance class System.Activities.Presentation.Model.ModelProperty GetTrackingModelPropertyForChild(class System.Activities.Presentation.View.TreeView.TreeViewItemViewModel child)
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict 
			instance void UpdateState()
		{
			ret
		}
		.method family hidebysig 
			instance void NotifyPropertyChanged(string propertyName)
		{
			ret
		}
		.method public hidebysig 
			instance void CleanUp()
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void CleanUpCore()
		{
			ret
		}
		.field static assembly class System.Activities.Presentation.View.TreeView.TreeViewItemViewModel DummyNode
		.field static assembly class [mscorlib]'System.Collections.Generic.Dictionary`2'<class [mscorlib]System.Type,class [PresentationCore]System.Windows.Media.DrawingBrush> IconCache
		.event [System]System.ComponentModel.PropertyChangedEventHandler PropertyChanged
		{
			.addon instance void System.Activities.Presentation.View.TreeView.TreeViewItemViewModel::add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
			.removeon instance void System.Activities.Presentation.View.TreeView.TreeViewItemViewModel::remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
		}
		.property instance class [System]'System.Collections.ObjectModel.ReadOnlyObservableCollection`1'<class System.Activities.Presentation.View.TreeView.TreeViewItemViewModel> Children()
		{
			.get instance class [System]'System.Collections.ObjectModel.ReadOnlyObservableCollection`1'<class System.Activities.Presentation.View.TreeView.TreeViewItemViewModel> System.Activities.Presentation.View.TreeView.TreeViewItemViewModel::get_Children()
		}
		.property instance class [System.Core]'System.Collections.Generic.HashSet`1'<object> ChildrenValueCache()
		{
			.get instance class [System.Core]'System.Collections.Generic.HashSet`1'<object> System.Activities.Presentation.View.TreeView.TreeViewItemViewModel::get_ChildrenValueCache()
			.set instance void System.Activities.Presentation.View.TreeView.TreeViewItemViewModel::set_ChildrenValueCache(class [System.Core]'System.Collections.Generic.HashSet`1'<object>)
		}
		.property instance bool DuplicatedNodeVisible()
		{
			.get instance bool System.Activities.Presentation.View.TreeView.TreeViewItemViewModel::get_DuplicatedNodeVisible()
			.set instance void System.Activities.Presentation.View.TreeView.TreeViewItemViewModel::set_DuplicatedNodeVisible(bool)
		}
		.property instance bool HasChildren()
		{
			.get instance bool System.Activities.Presentation.View.TreeView.TreeViewItemViewModel::get_HasChildren()
		}
		.property instance bool HasSibling()
		{
			.get instance bool System.Activities.Presentation.View.TreeView.TreeViewItemViewModel::get_HasSibling()
		}
		.property instance class [PresentationCore]System.Windows.Media.DrawingBrush Icon()
		{
			.get instance class [PresentationCore]System.Windows.Media.DrawingBrush System.Activities.Presentation.View.TreeView.TreeViewItemViewModel::get_Icon()
			.set instance void System.Activities.Presentation.View.TreeView.TreeViewItemViewModel::set_Icon(class [PresentationCore]System.Windows.Media.DrawingBrush)
		}
		.property instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.View.TreeView.TreeViewItemViewModel> InternalChildren()
		{
			.get instance class [System]'System.Collections.ObjectModel.ObservableCollection`1'<class System.Activities.Presentation.View.TreeView.TreeViewItemViewModel> System.Activities.Presentation.View.TreeView.TreeViewItemViewModel::get_InternalChildren()
		}
		.property instance bool IsAlive()
		{
			.get instance bool System.Activities.Presentation.View.TreeView.TreeViewItemViewModel::get_IsAlive()
		}
		.property instance bool IsExpanded()
		{
			.get instance bool System.Activities.Presentation.View.TreeView.TreeViewItemViewModel::get_IsExpanded()
			.set instance void System.Activities.Presentation.View.TreeView.TreeViewItemViewModel::set_IsExpanded(bool)
		}
		.property instance bool IsHighlighted()
		{
			.get instance bool System.Activities.Presentation.View.TreeView.TreeViewItemViewModel::get_IsHighlighted()
			.set instance void System.Activities.Presentation.View.TreeView.TreeViewItemViewModel::set_IsHighlighted(bool)
		}
		.property instance string NodePrefixText()
		{
			.get instance string System.Activities.Presentation.View.TreeView.TreeViewItemViewModel::get_NodePrefixText()
			.set instance void System.Activities.Presentation.View.TreeView.TreeViewItemViewModel::set_NodePrefixText(string)
		}
		.property instance class System.Activities.Presentation.View.TreeView.TreeViewItemViewModel Parent()
		{
			.get instance class System.Activities.Presentation.View.TreeView.TreeViewItemViewModel System.Activities.Presentation.View.TreeView.TreeViewItemViewModel::get_Parent()
			.set instance void System.Activities.Presentation.View.TreeView.TreeViewItemViewModel::set_Parent(class System.Activities.Presentation.View.TreeView.TreeViewItemViewModel)
		}
		.property instance class System.Activities.Presentation.DesignerPerfEventProvider PerfEventProvider()
		{
			.get instance class System.Activities.Presentation.DesignerPerfEventProvider System.Activities.Presentation.View.TreeView.TreeViewItemViewModel::get_PerfEventProvider()
		}
		.property instance valuetype System.Activities.Presentation.View.TreeView.TreeViewItemViewModel/TreeViewItemState State()
		{
			.get instance valuetype System.Activities.Presentation.View.TreeView.TreeViewItemViewModel/TreeViewItemState System.Activities.Presentation.View.TreeView.TreeViewItemViewModel::get_State()
			.set instance void System.Activities.Presentation.View.TreeView.TreeViewItemViewModel::set_State(valuetype System.Activities.Presentation.View.TreeView.TreeViewItemViewModel/TreeViewItemState)
		}
		.property instance class [mscorlib]'System.Collections.Generic.Dictionary`2'<class System.Activities.Presentation.Model.ModelProperty,class System.Activities.Presentation.View.TreeView.ChangeNotificationTracker> Trackers()
		{
			.get instance class [mscorlib]'System.Collections.Generic.Dictionary`2'<class System.Activities.Presentation.Model.ModelProperty,class System.Activities.Presentation.View.TreeView.ChangeNotificationTracker> System.Activities.Presentation.View.TreeView.TreeViewItemViewModel::get_Trackers()
		}
		.property instance class System.Activities.Presentation.View.TreeView.ITreeViewItemSelectionHandler TreeViewItem()
		{
			.get instance class System.Activities.Presentation.View.TreeView.ITreeViewItemSelectionHandler System.Activities.Presentation.View.TreeView.TreeViewItemViewModel::get_TreeViewItem()
			.set instance void System.Activities.Presentation.View.TreeView.TreeViewItemViewModel::set_TreeViewItem(class System.Activities.Presentation.View.TreeView.ITreeViewItemSelectionHandler)
		}
	}
	.class private 'TreeViewItemViewModel`1'<'T'>
		extends System.Activities.Presentation.View.TreeView.TreeViewItemViewModel
	{
		.method public virtual hidebysig newslot specialname 
			instance !0 get_VisualValue()
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict specialname 
			instance void set_VisualValue(!0 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance !0 get_Value()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method family hidebysig specialname 
			instance void set_Value(!0 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.View.TreeView.TreeViewItemViewModel parent)
		{
			ret
		}
		.method public virtual hidebysig 
			instance string ToString()
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance object GetValue()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void CleanUpCore()
		{
			ret
		}
		.property instance !0 Value()
		{
			.get instance !0 'System.Activities.Presentation.View.TreeView.TreeViewItemViewModel`1'::get_Value()
			.set instance void 'System.Activities.Presentation.View.TreeView.TreeViewItemViewModel`1'::set_Value(!0)
		}
		.property instance !0 VisualValue()
		{
			.get instance !0 'System.Activities.Presentation.View.TreeView.TreeViewItemViewModel`1'::get_VisualValue()
			.set instance void 'System.Activities.Presentation.View.TreeView.TreeViewItemViewModel`1'::set_VisualValue(!0)
		}
	}
	.class private abstract sealed UniqueModelItemHelper
		extends [mscorlib]System.Object
	{
		.method assembly static hidebysig 
			class [System.Core]'System.Collections.Generic.HashSet`1'<class System.Activities.Presentation.Model.ModelItem> FindUniqueChildren(class System.Activities.Presentation.Model.ModelProperty 'property')
		{
			ret
		}
	}
}
.namespace System.Activities.Presentation.ViewState
{
	.class public sealed ViewStateData
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Id()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_Id(string 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.property instance string Id()
		{
			.get instance string System.Activities.Presentation.ViewState.ViewStateData::get_Id()
			.set instance void System.Activities.Presentation.ViewState.ViewStateData::set_Id(string)
		}
	}
	.class public sealed ViewStateManager
		extends [mscorlib]System.Object
	{
		.custom instance void [System.Xaml]System.Windows.Markup.ContentPropertyAttribute::.ctor(string) = { string('ViewStateData') }
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Collections.ObjectModel.Collection`1'<class System.Activities.Presentation.ViewState.ViewStateData> get_ViewStateData()
		{
			ret
		}
		.property instance class [mscorlib]'System.Collections.ObjectModel.Collection`1'<class System.Activities.Presentation.ViewState.ViewStateData> ViewStateData()
		{
			.get instance class [mscorlib]'System.Collections.ObjectModel.Collection`1'<class System.Activities.Presentation.ViewState.ViewStateData> System.Activities.Presentation.ViewState.ViewStateManager::get_ViewStateData()
		}
	}
	.class public abstract sealed WorkflowViewState
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			void SetViewStateManager(object 'instance', class System.Activities.Presentation.ViewState.ViewStateManager viewStateManager)
		{
			ret
		}
		.method public static hidebysig 
			class System.Activities.Presentation.ViewState.ViewStateManager GetViewStateManager(object 'instance')
		{
			ret
		}
		.method public static hidebysig 
			void SetIdRef(object 'instance', string idRef)
		{
			ret
		}
		.method public static hidebysig 
			string GetIdRef(object 'instance')
		{
			ret
		}
		.field static public initonly class [System.Xaml]System.Xaml.AttachableMemberIdentifier IdRefProperty
		.field static public initonly class [System.Xaml]System.Xaml.AttachableMemberIdentifier ViewStateManagerProperty
	}
}
.namespace System.Activities.Presentation.Xaml
{
	.class private abstract sealed ActivityBuilderHelper
		extends [mscorlib]System.Object
	{
		.method assembly static hidebysig 
			bool IsActivityBuilderType(class System.Activities.Presentation.Model.ModelItem modelItem)
		{
			ret
		}
		.method assembly static hidebysig 
			class [mscorlib]'System.Collections.Generic.List`1'<class [System.Activities]System.Activities.Variable> GetVariables(object input)
		{
			ret
		}
		.method assembly static hidebysig 
			class [System.Activities]System.Activities.Variable GetVariableFromProperty(class [System.Activities]System.Activities.DynamicActivityProperty 'property')
		{
			ret
		}
	}
	.class private ErrorTolerantObjectWriter
		extends [System.Xaml]System.Xaml.XamlWriter
		implements [System.Xaml]System.Xaml.IXamlLineInfoConsumer
	{
		.method public hidebysig specialname 
			instance string get_LocalAssemblyName()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_LocalAssemblyName(string 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.IList`1'<class System.Activities.Presentation.XamlLoadErrorInfo> get_LoadErrors()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [System.Xaml]System.Xaml.XamlSchemaContext schemaContext)
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_Result()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [System.Xaml]System.Xaml.XamlSchemaContext get_SchemaContext()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void WriteNamespace(class [System.Xaml]System.Xaml.NamespaceDeclaration namespaceDeclaration)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void WriteStartObject(class [System.Xaml]System.Xaml.XamlType 'type')
		{
			ret
		}
		.method public virtual hidebysig 
			instance void WriteGetObject()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void WriteEndObject()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void WriteStartMember(class [System.Xaml]System.Xaml.XamlMember member)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void WriteEndMember()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void WriteValue(object 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void SetLineInfo(int32 lineNumber, int32 linePosition)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_ShouldProvideLineInfo()
		{
			ret
		}
		.method assembly static hidebysig 
			bool IsErrorActivity(class [mscorlib]System.Type objectType)
		{
			ret
		}
		.method assembly static hidebysig 
			void TransformAndStripErrors(class [System.Xaml]System.Xaml.XamlReader objectReader, class [System.Xaml]System.Xaml.XamlWriter writer)
		{
			ret
		}
		.method assembly static hidebysig 
			string GetXamlMemberName(class [System.Xaml]System.Xaml.XamlMember member)
		{
			ret
		}
		.method assembly static hidebysig 
			string GetXamlTypeName(class [System.Xaml]System.Xaml.XamlType 'type')
		{
			ret
		}
		.property instance class [mscorlib]'System.Collections.Generic.IList`1'<class System.Activities.Presentation.XamlLoadErrorInfo> LoadErrors()
		{
			.get instance class [mscorlib]'System.Collections.Generic.IList`1'<class System.Activities.Presentation.XamlLoadErrorInfo> System.Activities.Presentation.Xaml.ErrorTolerantObjectWriter::get_LoadErrors()
		}
		.property instance string LocalAssemblyName()
		{
			.get instance string System.Activities.Presentation.Xaml.ErrorTolerantObjectWriter::get_LocalAssemblyName()
			.set instance void System.Activities.Presentation.Xaml.ErrorTolerantObjectWriter::set_LocalAssemblyName(string)
		}
		.property instance object Result()
		{
			.get instance object System.Activities.Presentation.Xaml.ErrorTolerantObjectWriter::get_Result()
		}
		.property instance class [System.Xaml]System.Xaml.XamlSchemaContext SchemaContext()
		{
			.get instance class [System.Xaml]System.Xaml.XamlSchemaContext System.Activities.Presentation.Xaml.ErrorTolerantObjectWriter::get_SchemaContext()
		}
		.property instance bool ShouldProvideLineInfo()
		{
			.get instance bool System.Activities.Presentation.Xaml.ErrorTolerantObjectWriter::get_ShouldProvideLineInfo()
		}
	}
	.class private ObjectToSourceLocationMapping
		extends [mscorlib]System.Object
	{
		.method assembly hidebysig specialname 
			instance void .ctor(class System.Activities.Presentation.Model.ModelSearchServiceImpl modelSearchService)
		{
			ret
		}
		.method assembly hidebysig 
			instance void Clear()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.Dictionary`2'<object,object> get_SourceLocationObjectToModelItemObjectMapping()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_SourceLocationObjectToModelItemObjectMapping(class [mscorlib]'System.Collections.Generic.Dictionary`2'<object,object> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.Dictionary`2'<string,class [System.Activities]System.Activities.Debugger.SourceLocation> get_ViewStateDataSourceLocationMapping()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_ViewStateDataSourceLocationMapping(class [mscorlib]'System.Collections.Generic.Dictionary`2'<string,class [System.Activities]System.Activities.Debugger.SourceLocation> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig 
			instance void UpdateMap(object key, class [System.Activities]System.Activities.Debugger.SourceLocation sourceLocation)
		{
			ret
		}
		.method assembly hidebysig 
			instance class System.Activities.Presentation.Model.ModelItem FindModelItem(class [System.Activities]System.Activities.Debugger.SourceLocation srcLocation)
		{
			ret
		}
		.method assembly hidebysig 
			instance class System.Activities.Presentation.Model.ModelItem FindModelItemOfViewState(class [System.Activities]System.Activities.Debugger.SourceLocation srcLocation)
		{
			ret
		}
		.method assembly hidebysig 
			instance class [System.Activities]System.Activities.Debugger.SourceLocation FindSourceLocation(class System.Activities.Presentation.Model.ModelItem modelItem)
		{
			ret
		}
		.method assembly hidebysig 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class System.Activities.Presentation.Model.ModelItem> GetObjectsWithSourceLocation()
		{
			ret
		}
		.property instance class [mscorlib]'System.Collections.Generic.Dictionary`2'<object,object> SourceLocationObjectToModelItemObjectMapping()
		{
			.get instance class [mscorlib]'System.Collections.Generic.Dictionary`2'<object,object> System.Activities.Presentation.Xaml.ObjectToSourceLocationMapping::get_SourceLocationObjectToModelItemObjectMapping()
			.set instance void System.Activities.Presentation.Xaml.ObjectToSourceLocationMapping::set_SourceLocationObjectToModelItemObjectMapping(class [mscorlib]'System.Collections.Generic.Dictionary`2'<object,object>)
		}
		.property instance class [mscorlib]'System.Collections.Generic.Dictionary`2'<string,class [System.Activities]System.Activities.Debugger.SourceLocation> ViewStateDataSourceLocationMapping()
		{
			.get instance class [mscorlib]'System.Collections.Generic.Dictionary`2'<string,class [System.Activities]System.Activities.Debugger.SourceLocation> System.Activities.Presentation.Xaml.ObjectToSourceLocationMapping::get_ViewStateDataSourceLocationMapping()
			.set instance void System.Activities.Presentation.Xaml.ObjectToSourceLocationMapping::set_ViewStateDataSourceLocationMapping(class [mscorlib]'System.Collections.Generic.Dictionary`2'<string,class [System.Activities]System.Activities.Debugger.SourceLocation>)
		}
	}
	.class private ShimAsPublicXamlType
		extends [System.Xaml]System.Xaml.XamlType
	{
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type 'type', class [System.Xaml]System.Xaml.XamlSchemaContext schemaContext)
		{
			ret
		}
		.method family virtual hidebysig 
			instance bool LookupIsPublic()
		{
			ret
		}
	}
	.class private abstract sealed serializable SourceLocationExtensions
		extends [mscorlib]System.Object
	{
		.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
		.method assembly static hidebysig 
			bool Contains(class [System.Activities]System.Activities.Debugger.SourceLocation outer, class [System.Activities]System.Activities.Debugger.SourceLocation inner)
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = { }
			ret
		}
	}
}
.namespace XamlGeneratedNamespace
{
	.class public sealed GeneratedInternalTypeHelper
		extends [WindowsBase]System.Windows.Markup.InternalTypeHelper
	{
		.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
		.method family virtual hidebysig 
			instance object CreateInstance(class [mscorlib]System.Type 'type', class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method family virtual hidebysig 
			instance object GetPropertyValue(class [mscorlib]System.Reflection.PropertyInfo propertyInfo, object target, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void SetPropertyValue(class [mscorlib]System.Reflection.PropertyInfo propertyInfo, object target, object 'value', class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method family virtual hidebysig 
			instance class [mscorlib]System.Delegate CreateDelegate(class [mscorlib]System.Type delegateType, object target, string 'handler')
		{
			ret
		}
		.method family virtual hidebysig 
			instance void AddEventHandler(class [mscorlib]System.Reflection.EventInfo eventInfo, object target, class [mscorlib]System.Delegate 'handler')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
}
