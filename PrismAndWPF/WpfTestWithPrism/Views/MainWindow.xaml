<Window x:Class="WpfTestWithPrism.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:prism="http://prismlibrary.com/"
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
        prism:ViewModelLocator.AutoWireViewModel="True"
        Title="{Binding Title}" Height="800" Width="800" >
    <Window.Resources>
        <ImageBrush x:Key="playBackTime" ImageSource="/Images/playBackTime.png"/>
        <ImageBrush x:Key="playBackSpeed" ImageSource="/Images/playBackSpeed.png"/>

        <Style TargetType="{x:Type ListBox}">
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Width" Value="160"/>
            <Setter Property="Height" Value="200"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="true">
                            <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button">
            <Setter Property="Width" Value="100"/>
            <Setter Property="Height" Value="70"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <!--<Setter Property="Background" Value="#43a9c7"/>-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <TextBlock Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <StackPanel>
        <Button x:Name="btnTime" Background="{StaticResource playBackTime}"  Click="btn_click" />
        <Button x:Name="btnSpeed" Background="{StaticResource playBackSpeed}" Click="btn_click"/>

        <Popup PopupAnimation="Slide" Width="163" Height="220" PlacementTarget="{Binding ElementName=btnTime}" HorizontalOffset="10"
                           Placement="Right" AllowsTransparency="True" StaysOpen="False" x:Name="timePopup">
            <Border Background="#090922"  Opacity="0.85" BorderThickness="2" BorderBrush="#CC0c5b79">
                <StackPanel>
                    <TextBlock Text="选择时间" TextAlignment="Center" Foreground="White" FontSize="14" FontWeight="Bold"/>
                    <ListBox ItemsSource="{Binding PlayBackTime}"  x:Name="timeListBox" >
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="MouseDoubleClick">
                                <b:InvokeCommandAction Command="{Binding PlayBackTimeDoubleClickCommand, Mode=OneWay}" CommandParameter="{Binding ElementName=timeListBox, Path=SelectedValue}"/>
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding}" FontSize="14" Foreground="White"/>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </StackPanel>
            </Border>

        </Popup>

        <Popup PopupAnimation="Scroll" Width="163" Height="220" PlacementTarget="{Binding ElementName=btnSpeed}" HorizontalOffset="10"
                           Placement="Right" AllowsTransparency="True" StaysOpen="False" x:Name="speedPopup">
            <Border BorderThickness="2" Background="#090922"  Opacity="0.85" BorderBrush="#CC0c5b79">
                <StackPanel>
                    <TextBlock Text="选择倍数" TextAlignment="Center" FontSize="14" Foreground="White" FontWeight="Bold"/>
                    <ListBox ItemsSource="{Binding PlayBackSpeed}" x:Name="speedListBox">
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="MouseDoubleClick">
                                <b:InvokeCommandAction Command="{Binding PlayBackSpeedDoubleClickCommand, Mode=OneWay}" CommandParameter="{Binding ElementName=speedListBox, Path=SelectedValue}"/>
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding}" FontSize="14" Foreground="White"/>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </StackPanel>
            </Border>
        </Popup>
    </StackPanel>
</Window>
