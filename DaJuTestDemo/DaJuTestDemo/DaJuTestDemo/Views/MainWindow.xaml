<Window x:Class="DaJuTestDemo.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:prism="http://prismlibrary.com/"
        xmlns:local="clr-namespace:DaJuTestDemo.Views"
        xmlns:core="clr-namespace:DaJuTestDemo.Core;assembly=DaJuTestDemo.Core"
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
        Height="1080" Width="1920"  WindowStyle="None"
        prism:ViewModelLocator.AutoWireViewModel="True">

    <Window.Resources>
        <ImageBrush x:Key="top_background" ImageSource="/Images/topBackground.png"/>
        <ImageBrush x:Key="radioButtonImage" ImageSource="/Images/topDefault.png"/>
        <ImageBrush x:Key="radioButtonSelect" ImageSource="/Images/topSelected.png"/>
        
        <ImageBrush x:Key="playBackSpeed" ImageSource="/Images/playBackSpeed.png"/>
        <ImageBrush x:Key="btnPlay" ImageSource="/Images/btnPlay.png"/>
        <ImageBrush x:Key="btnStop" ImageSource="/Images/btnStop.png"/>
        <ImageBrush x:Key="btnMeasure" ImageSource="/Images/btnMeasure.png"/>
        <ImageBrush x:Key="btnNormal" ImageSource="/Images/btnNormal.png"/>
        <ImageBrush x:Key="btnTrace" ImageSource="/Images/btnTrace.png"/>

        <Style TargetType="{x:Type RadioButton}">
            <Setter Property="Width" Value="160"/>
            <Setter Property="Height" Value="55"/>
            <Setter Property="FontSize" Value="22"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="#FEFEFD"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="MinHeight" Value="50"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Border x:Name="border2" Background="LightBlue"/>
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}"
                                              Content="{TemplateBinding Content}"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" TargetName="border2" Value="{StaticResource radioButtonSelect}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Background" TargetName="border2" Value="{StaticResource radioButtonImage}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MapToolCheckboxStyle" TargetType="{x:Type CheckBox}">
            <Setter Property="Width" Value="50"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Border x:Name="MapToolCheckboxBorder" />
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}"
                                              Content="{TemplateBinding Content}"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" TargetName="MapToolCheckboxBorder" >
                                    <Setter.Value>
                                        <ImageBrush ImageSource="{Binding ImgSelectedName}" Stretch="Fill"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Background" TargetName="MapToolCheckboxBorder">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="{Binding ImgName}" Stretch="Fill"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ListBox}">
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Width" Value="160"/>
            <Setter Property="Height" Value="200"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="true">
                            <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="playBackBtn" TargetType="Button">
            <Setter Property="Width" Value="100"/>
            <Setter Property="Height" Value="70"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <!--<Setter Property="Background" Value="#43a9c7"/>-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <TextBlock Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    
    <Viewbox>
        <Grid Background="#CC02266A" Height="1080" Width="1920">
            <Grid.RowDefinitions>
                <RowDefinition Height="120"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!--顶部菜单-->
            <Border Background="{StaticResource top_background}" BorderThickness="1"/>
            <StackPanel Orientation="Horizontal" Margin="355,40,380,0">
                <RadioButton Content="首页" Margin="-45 0 0 0" CommandParameter="首页"/>
                <RadioButton Content="秩序维护" Margin="-45 0 0 0"  CommandParameter="秩序维护"/>
                <RadioButton Content="环境清洁" Margin="-45 0 0 0"  CommandParameter="环境清洁"/>
                <RadioButton Content="河道养护" Margin="-45 0 0 0" Command="{Binding GetCameraValues}"/>
                <RadioButton Content="绿化管理" Margin="-45 0 0 0"/>
                <RadioButton Content="设施维护" Margin="-45 0 0 0"/>
                <RadioButton Content="风貌管理" Margin="-45 0 0 0"/>
                <RadioButton Content="事务服务" Margin="-45 0 0 0"/>
                <RadioButton Content="应急管理" Margin="-45 0 0 0"/>
                <RadioButton Content="生态环境" Margin="-45 0 0 0"/>
            </StackPanel>

            <!--地图-->
            <ContentControl Grid.Row="1" Margin="0" Padding="0">
                <local:I3dMapView/>
            </ContentControl>

            <!--轨迹回放操作-->
            <Popup IsOpen="True" AllowsTransparency="True" Placement="Relative">
                <StackPanel Margin="60 130 0 0">
                    <Button x:Name="btnTime" Background="{StaticResource btnTrace}" Click="btn_click"  Style="{StaticResource playBackBtn}"/>
                    <Button x:Name="btnSpeed" Background="{StaticResource playBackSpeed}" Click="btn_click" Style="{StaticResource playBackBtn}"/>
                    <Button x:Name="btnStop" Background="{StaticResource btnStop}"  Command="{Binding PlayOrStopCommand}" CommandParameter="stop" Style="{StaticResource playBackBtn}" />
                    <Button x:Name="btnPlay" Background="{StaticResource btnPlay}"  Command="{Binding PlayOrStopCommand}" CommandParameter="play" Style="{StaticResource playBackBtn}" />

                    <Button Background="{StaticResource btnNormal}"  Command="{Binding NormalCommand}" Style="{StaticResource playBackBtn}" />
                    <Button Background="{StaticResource btnMeasure}"  Command="{Binding MeasureDistance}" Style="{StaticResource playBackBtn}"/>

                    <Popup PopupAnimation="Scroll" Width="163" Height="220" PlacementTarget="{Binding ElementName=btnTime}" HorizontalOffset="10"
                           Placement="Right" AllowsTransparency="True" StaysOpen="False" x:Name="timePopup">
                        <Border Background="#090922"  Opacity="0.85" BorderThickness="2" BorderBrush="#CC0c5b79">
                            <StackPanel>
                                <TextBlock Text="选择轨迹" TextAlignment="Center" Foreground="White" FontSize="14" FontWeight="Bold"/>
                                <ListBox ItemsSource="{Binding TrajectoryName}" x:Name="timeListBox">
                                    <b:Interaction.Triggers>
                                        <b:EventTrigger EventName="MouseDoubleClick">
                                            <b:InvokeCommandAction Command="{Binding PlayBackTimeDoubleClickCommand, Mode=OneWay}" CommandParameter="{Binding ElementName=timeListBox, Path=SelectedValue}"/>
                                        </b:EventTrigger>
                                    </b:Interaction.Triggers>
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding}" FontSize="14" />
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </StackPanel>
                        </Border>

                    </Popup>

                    <Popup PopupAnimation="Scroll" Width="163" Height="220" PlacementTarget="{Binding ElementName=btnSpeed}" HorizontalOffset="10"
                           Placement="Right" AllowsTransparency="True" StaysOpen="False" x:Name="speedPopup">
                        <Border BorderThickness="2" Background="#090922"  Opacity="0.85" BorderBrush="#CC0c5b79">
                            <StackPanel>
                                <TextBlock Text="选择倍数" TextAlignment="Center" FontSize="14" Foreground="White" FontWeight="Bold"/>
                                <ListBox ItemsSource="{Binding PlayBackSpeed}" x:Name="speedListBox">
                                    <b:Interaction.Triggers>
                                        <b:EventTrigger EventName="MouseDoubleClick">
                                            <b:InvokeCommandAction Command="{Binding PlayBackSpeedDoubleClickCommand, Mode=OneWay}" CommandParameter="{Binding ElementName=speedListBox, Path=SelectedValue}"/>
                                        </b:EventTrigger>
                                    </b:Interaction.Triggers>
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding}" FontSize="14" />
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </StackPanel>
                        </Border>
                    </Popup>
                </StackPanel>
            </Popup>

            <!--内容区域-->
            <Popup IsOpen="True"  AllowsTransparency="True" Placement="Top"  x:Name="mainPopup">
                <Grid>
                    <ContentControl prism:RegionManager.RegionName="{x:Static core:RegionNames.MainPageContentRegion}"/>
                </Grid>
            </Popup>
        </Grid>
    </Viewbox>
</Window>
